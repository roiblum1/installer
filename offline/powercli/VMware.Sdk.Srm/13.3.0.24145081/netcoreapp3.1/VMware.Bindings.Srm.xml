<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VMware.Bindings.Srm</name>
    </assembly>
    <members>
        <member name="T:VMware.Bindings.Srm.Api.IAuthenticationApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.GetCurrentSession">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.GetCurrentSessionWithHttpInfo">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.Login">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.LoginWithHttpInfo">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.Logout">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiSync.LogoutWithHttpInfo">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IAuthenticationApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.GetCurrentSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.GetCurrentSessionWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.LoginWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionIdData)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IAuthenticationApiAsync.LogoutWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IAuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.AuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.AuthenticationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.AuthenticationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.AuthenticationApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.AuthenticationApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.AuthenticationApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.AuthenticationApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.AuthenticationApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.AuthenticationApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.AuthenticationApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.GetCurrentSession">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.GetCurrentSessionWithHttpInfo">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.GetCurrentSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.GetCurrentSessionWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.Login">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LoginWithHttpInfo">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LoginWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the value of the returned session ID.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionIdData)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.Logout">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LogoutWithHttpInfo">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.AuthenticationApi.LogoutWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateFolderMapping(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec)">
            <summary>
            Add folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateFolderMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec)">
            <summary>
            Add folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateNetworkMapping(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec)">
            <summary>
            Add network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateNetworkMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec)">
            <summary>
            Add network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreatePlaceholderDatastores(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Add placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreatePlaceholderDatastoresWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Add placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateResourceMapping(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec)">
            <summary>
            Add resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateResourceMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec)">
            <summary>
            Add resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateStoragePolicyMapping(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateStoragePolicyMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateTestNetworkMappings(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec)">
            <summary>
            Add test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.CreateTestNetworkMappingsWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec)">
            <summary>
            Add test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteFolderMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteFolderMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeletePlaceholderDatastore(System.String,System.String,System.String)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeletePlaceholderDatastoreWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteResourceMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteResourceMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteStoragePolicyMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteStoragePolicyMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteTestNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured test network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.DeleteTestNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured test network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetFolderMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetFolderMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetFolderMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetFolderMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkIpSubnetMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Get details about a configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Get details about a configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetNetworkMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetPlaceholderDatastore(System.String,System.String,System.String)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetPlaceholderDatastoreWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>ApiResponse of PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetPlaceholderDatastores(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetPlaceholderDatastoresWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetResourceMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetResourceMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetResourceMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetResourceMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetStoragePolicyMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetStoragePolicyMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetStoragePolicyMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetStoragePolicyMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetTestNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetTestNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetTestNetworkMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.GetTestNetworkMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.QuerySuitableDatastores(System.String,System.String)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <remarks>
            A query for suitable datastores to be used as placeholder datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.QuerySuitableDatastoresWithHttpInfo(System.String,System.String)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <remarks>
            A query for suitable datastores to be used as placeholder datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.RemoveNetworkIpSubnetMapping(System.String,System.String,System.String)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Delete the configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.RemoveNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Delete the configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.UpdateNetworkIpSubnetMapping(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping)">
            <summary>
            Create or update the IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Create or update the IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiSync.UpdateNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping)">
            <summary>
            Create or update the IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Create or update the IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateFolderMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateFolderMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateNetworkMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateNetworkMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreatePlaceholderDatastoresAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec,System.Threading.CancellationToken)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Add placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreatePlaceholderDatastoresWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec,System.Threading.CancellationToken)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Add placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateResourceMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateResourceMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateStoragePolicyMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateTestNetworkMappingsAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.CreateTestNetworkMappingsWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Add test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteFolderMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteFolderMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeletePlaceholderDatastoreAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeletePlaceholderDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteResourceMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteResourceMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteStoragePolicyMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteTestNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured test network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.DeleteTestNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Delete a configured test network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetFolderMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetFolderMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured folder mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (FolderMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetFolderMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetFolderMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured folder mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (FolderMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkIpSubnetMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Get details about a configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Get details about a configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IPMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured network mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NetworkMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetNetworkMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetPlaceholderDatastoreAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetPlaceholderDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured placeholder datastore for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PlaceholderDatastoreDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetPlaceholderDatastoresAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetPlaceholderDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured placeholder datastores for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PlaceholderDatastoreDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetResourceMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetResourceMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured resource mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ResourceMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetResourceMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetResourceMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured resource mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ResourceMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetStoragePolicyMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured storage policy mapping for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetStoragePolicyMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetStoragePolicyMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured storage policy mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetTestNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetTestNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get details about a configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetTestNetworkMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.GetTestNetworkMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <remarks>
            Get currently configured test network mappings for an SRM in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.QuerySuitableDatastoresAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <remarks>
            A query for suitable datastores to be used as placeholder datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.QuerySuitableDatastoresWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <remarks>
            A query for suitable datastores to be used as placeholder datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.RemoveNetworkIpSubnetMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Delete the configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.RemoveNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Delete the configured IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.UpdateNetworkIpSubnetMappingAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping,System.Threading.CancellationToken)">
            <summary>
            Create or update the IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Create or update the IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IInventoryMappingsApiAsync.UpdateNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping,System.Threading.CancellationToken)">
            <summary>
            Create or update the IP subnet mapping for a network mapping.
            </summary>
            <remarks>
            Create or update the IP subnet mapping for a network mapping.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IInventoryMappingsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.InventoryMappingsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.InventoryMappingsApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.InventoryMappingsApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.InventoryMappingsApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.InventoryMappingsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.InventoryMappingsApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.InventoryMappingsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.InventoryMappingsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.InventoryMappingsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.InventoryMappingsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateFolderMapping(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec)">
            <summary>
            Add folder mappings for an SRM in a given pairing. Add folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateFolderMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec)">
            <summary>
            Add folder mappings for an SRM in a given pairing. Add folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateFolderMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add folder mappings for an SRM in a given pairing. Add folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateFolderMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.FolderMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add folder mappings for an SRM in a given pairing. Add folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="folderMappingsSpec">The spec describing the new folder mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateNetworkMapping(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec)">
            <summary>
            Add network mappings for an SRM in a given pairing. Add network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateNetworkMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec)">
            <summary>
            Add network mappings for an SRM in a given pairing. Add network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateNetworkMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add network mappings for an SRM in a given pairing. Add network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateNetworkMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.NetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add network mappings for an SRM in a given pairing. Add network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="networkMappingsSpec">A spec describing the new networks mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreatePlaceholderDatastores(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing. Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreatePlaceholderDatastoresWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing. Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreatePlaceholderDatastoresAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec,System.Threading.CancellationToken)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing. Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreatePlaceholderDatastoresWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec,System.Threading.CancellationToken)">
            <summary>
            Add placeholder datastores for an SRM in a given pairing. Add placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="addPlaceholderDatastoreSpec">A spec describing the new placeholder datastores.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateResourceMapping(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec)">
            <summary>
            Add resource mappings for an SRM in a given pairing. Add resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateResourceMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec)">
            <summary>
            Add resource mappings for an SRM in a given pairing. Add resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateResourceMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add resource mappings for an SRM in a given pairing. Add resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateResourceMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ResourceMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add resource mappings for an SRM in a given pairing. Add resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="resourceMappingsSpec">A spec describing the new resource mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateStoragePolicyMapping(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing. Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateStoragePolicyMappingWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing. Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateStoragePolicyMappingAsync(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing. Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add storage policy mappings for an SRM in a given pairing. Add storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storagePolicyMappingsSpec">A spec describing the new storage policy mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateTestNetworkMappings(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec)">
            <summary>
            Add test network mappings for an SRM in a given pairing. Add test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateTestNetworkMappingsWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec)">
            <summary>
            Add test network mappings for an SRM in a given pairing. Add test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateTestNetworkMappingsAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add test network mappings for an SRM in a given pairing. Add test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.CreateTestNetworkMappingsWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestNetworkMappingsSpec,System.Threading.CancellationToken)">
            <summary>
            Add test network mappings for an SRM in a given pairing. Add test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="testNetworkMappingsSpec">A spec describing the new test network mappings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteFolderMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing. Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteFolderMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing. Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteFolderMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing. Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteFolderMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured folder mapping for an SRM in a given pairing. Delete a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing. Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing. Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing. Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured network mapping for an SRM in a given pairing. Delete a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeletePlaceholderDatastore(System.String,System.String,System.String)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing. Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeletePlaceholderDatastoreWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing. Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeletePlaceholderDatastoreAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing. Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeletePlaceholderDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured placeholder datastore for an SRM in a given pairing. Delete a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteResourceMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing. Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteResourceMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing. Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteResourceMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing. Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteResourceMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured resource mapping for an SRM in a given pairing. Delete a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteStoragePolicyMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing. Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteStoragePolicyMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing. Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteStoragePolicyMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing. Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured storage policy mapping for an SRM in a given pairing. Delete a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteTestNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing. Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteTestNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing. Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteTestNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing. Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.DeleteTestNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a configured test network mapping for an SRM in a given pairing. Delete a configured test network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing. Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing. Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing. Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of FolderMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured folder mapping for an SRM in a given pairing. Get details about a configured folder mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (FolderMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing. Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing. Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing. Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of FolderMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetFolderMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured folder mappings for an SRM in a given pairing. Get currently configured folder mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (FolderMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkIpSubnetMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping. Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping. Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkIpSubnetMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping. Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IPMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured IP subnet mapping for a network mapping. Get details about a configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IPMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing. Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing. Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing. Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured network mapping for an SRM in a given pairing. Get details about a configured network mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NetworkMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing. Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing. Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing. Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetNetworkMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured network mappings for an SRM in a given pairing. Get currently configured network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastore(System.String,System.String,System.String)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing. Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoreWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing. Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <returns>ApiResponse of PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoreAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing. Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PlaceholderDatastoreDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured placeholder datastore for an SRM in a given pairing. Get details about a configured placeholder datastore for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="datastoreId">The ID of the placeholder datastore.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PlaceholderDatastoreDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastores(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing. Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoresWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing. Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoresAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing. Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PlaceholderDatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetPlaceholderDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured placeholder datastores for an SRM in a given pairing. Get currently configured placeholder datastores for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PlaceholderDatastoreDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing. Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing. Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing. Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ResourceMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured resource mapping for an SRM in a given pairing. Get details about a configured resource mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ResourceMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing. Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing. Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing. Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ResourceMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetResourceMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured resource mappings for an SRM in a given pairing. Get currently configured resource mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ResourceMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing. Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing. Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing. Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured storage policy mapping for an SRM in a given pairing. Get details about a configured storage policy mapping for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing. Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing. Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing. Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetStoragePolicyMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured storage policy mappings for an SRM in a given pairing. Get currently configured storage policy mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMapping(System.String,System.String,System.String)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing. Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing. Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing. Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a configured test network mappings for an SRM in a given pairing. Get details about a configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappings(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing. Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing. Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing. Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.GetTestNetworkMappingsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get currently configured test network mappings for an SRM in a given pairing. Get currently configured test network mappings for an SRM in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.QuerySuitableDatastores(System.String,System.String)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores. A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.QuerySuitableDatastoresWithHttpInfo(System.String,System.String)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores. A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.QuerySuitableDatastoresAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores. A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.QuerySuitableDatastoresWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            A query for suitable datastores to be used as placeholder datastores. A query for suitable datastores to be used as placeholder datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.RemoveNetworkIpSubnetMapping(System.String,System.String,System.String)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping. Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.RemoveNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping. Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.RemoveNetworkIpSubnetMappingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping. Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.RemoveNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the configured IP subnet mapping for a network mapping. Delete the configured IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.UpdateNetworkIpSubnetMapping(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping)">
            <summary>
            Create or update the IP subnet mapping for a network mapping. Create or update the IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.UpdateNetworkIpSubnetMappingWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping)">
            <summary>
            Create or update the IP subnet mapping for a network mapping. Create or update the IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.UpdateNetworkIpSubnetMappingAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping,System.Threading.CancellationToken)">
            <summary>
            Create or update the IP subnet mapping for a network mapping. Create or update the IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.InventoryMappingsApi.UpdateNetworkIpSubnetMappingWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.IPMapping,System.Threading.CancellationToken)">
            <summary>
            Create or update the IP subnet mapping for a network mapping. Create or update the IP subnet mapping for a network mapping.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="mappingId">The ID of the mapping.</param>
            <param name="iPMapping">A spec describing the IP subnet mappings settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IPairingApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.CreatePairing(VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Pair to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Pair to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.CreatePairingWithHttpInfo(VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Pair to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Pair to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.CreateRemoteSession(System.String)">
            <summary>
            Creates a session to the remote Site Recovery Manager server.
            </summary>
            <remarks>
            Creates a session to the remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.CreateRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Creates a session to the remote Site Recovery Manager server.
            </summary>
            <remarks>
            Creates a session to the remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.DeletePairing(System.String)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <remarks>
            Delete existing pairing with remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.DeletePairingWithHttpInfo(System.String)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <remarks>
            Delete existing pairing with remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairing(System.String)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairingWithHttpInfo(System.String)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairingIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairingIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairings(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetPairingsWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrm(System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrmWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>ApiResponse of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrmIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrmIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrms(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager servers in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.GetSrmsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager servers in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.ReconnectPairing(System.String,VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiSync.ReconnectPairingWithHttpInfo(System.String,VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IPairingApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.CreatePairingAsync(VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Pair to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.CreatePairingWithHttpInfoAsync(VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Pair to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.CreateRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a session to the remote Site Recovery Manager server.
            </summary>
            <remarks>
            Creates a session to the remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.CreateRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a session to the remote Site Recovery Manager server.
            </summary>
            <remarks>
            Creates a session to the remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.DeletePairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <remarks>
            Delete existing pairing with remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.DeletePairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <remarks>
            Delete existing pairing with remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingsAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetPairingsWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote Site Recovery Manager server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager server, which is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager servers in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.GetSrmsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <remarks>
            Get a list of all Site Recovery Manager servers in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.ReconnectPairingAsync(System.String,VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IPairingApiAsync.ReconnectPairingWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <remarks>
            Reconnect existing pairing to remote Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IPairingApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.PairingApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.PairingApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.PairingApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.PairingApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.PairingApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.PairingApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.PairingApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.PairingApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.PairingApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.PairingApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreatePairing(VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Pair to remote Site Recovery Manager server. Pair to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreatePairingWithHttpInfo(VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Pair to remote Site Recovery Manager server. Pair to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreatePairingAsync(VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to remote Site Recovery Manager server. Pair to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreatePairingWithHttpInfoAsync(VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to remote Site Recovery Manager server. Pair to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to pair to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreateRemoteSession(System.String)">
            <summary>
            Creates a session to the remote Site Recovery Manager server. Creates a session to the remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreateRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Creates a session to the remote Site Recovery Manager server. Creates a session to the remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreateRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a session to the remote Site Recovery Manager server. Creates a session to the remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.CreateRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a session to the remote Site Recovery Manager server. Creates a session to the remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.DeletePairing(System.String)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server. Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.DeletePairingWithHttpInfo(System.String)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server. Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.DeletePairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server. Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.DeletePairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete existing pairing with remote Site Recovery Manager server. Delete existing pairing with remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairing(System.String)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingWithHttpInfo(System.String)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairings(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingsWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingsAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetPairingsWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any. Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any. Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any. Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote Site Recovery Manager server, if any. Returns information about the current session to the remote Site Recovery Manager server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrm(System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing. Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing. Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <returns>ApiResponse of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing. Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager server, which is part of a given pairing. Get information about a Site Recovery Manager server, which is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server. Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server. Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server. Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server. Get a list of all Site Recovery Manager server issues for a given Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrms(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing. Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing. Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing. Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.GetSrmsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all Site Recovery Manager servers in the pairing. Get a list of all Site Recovery Manager servers in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.ReconnectPairing(System.String,VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server. Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <returns>Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.ReconnectPairingWithHttpInfo(System.String,VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server. Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <returns>ApiResponse of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.ReconnectPairingAsync(System.String,VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server. Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Task</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.PairingApi.ReconnectPairingWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect existing pairing to remote Site Recovery Manager server. Reconnect existing pairing to remote Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="pairingSpec">Remote Site Recovery Manager server spec to reconnect to.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Task)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IProtectionApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.AddDatastoreGroup(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing.
            </summary>
            <remarks>
            Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.AddDatastoreGroupWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing.
            </summary>
            <remarks>
            Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.ConfigureAll(System.String,System.String)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.ConfigureAllWithHttpInfo(System.String,System.String)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.CreateGroup(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec)">
            <summary>
            Create a new protection group in a given pairing.
            </summary>
            <remarks>
            Create a new protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.CreateGroupWithHttpInfo(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec)">
            <summary>
            Create a new protection group in a given pairing.
            </summary>
            <remarks>
            Create a new protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.CreateProtectionGroupFolder(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.CreateProtectionGroupFolderWithHttpInfo(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.DeleteGroup(System.String,System.String)">
            <summary>
            Delete a protection group in a given pairing.
            </summary>
            <remarks>
            Delete a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.DeleteGroupWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a protection group in a given pairing.
            </summary>
            <remarks>
            Delete a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.DeleteProtectionGroupFolder(System.String,System.String)">
            <summary>
            Remove Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Remove Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.DeleteProtectionGroupFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Remove Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Remove Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetAllGroups(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all protection groups in a given pairing.
            </summary>
            <remarks>
            Get information about all protection groups in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetAllGroupsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all protection groups in a given pairing.
            </summary>
            <remarks>
            Get information about all protection groups in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetDatastoreGroup(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing.
            </summary>
            <remarks>
            A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetDatastoreGroupWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing.
            </summary>
            <remarks>
            A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetDatastoreGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing.
            </summary>
            <remarks>
            List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetDatastoreGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing.
            </summary>
            <remarks>
            List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroup(System.String,System.String)">
            <summary>
            Get information about a protection group in a given pairing.
            </summary>
            <remarks>
            Get information about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a protection group in a given pairing.
            </summary>
            <remarks>
            Get information about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a protection group in a given pairing.
            </summary>
            <remarks>
            Get issues about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a protection group in a given pairing.
            </summary>
            <remarks>
            Get issues about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupRelatedRecoveryPlans(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get recovery plans in which the protection group is part of.
            </summary>
            <remarks>
            Get recovery plans in which the protection group is part of.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupRelatedRecoveryPlansWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get recovery plans in which the protection group is part of.
            </summary>
            <remarks>
            Get recovery plans in which the protection group is part of.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupVm(System.String,System.String,System.String)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing.
            </summary>
            <remarks>
            Details of a protected virtual machine that is part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupVmWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing.
            </summary>
            <remarks>
            Details of a protected virtual machine that is part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing.
            </summary>
            <remarks>
            A list of details for virtual machines that are part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetGroupVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing.
            </summary>
            <remarks>
            A list of details for virtual machines that are part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFolder(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFolderChildren(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFolderChildrenWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFolders(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server protection inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server protection inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <returns>ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetProtectionGroupFoldersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server protection inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server protection inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVmProtectionSettings(System.String,System.String,System.String)">
            <summary>
            Get details about the current protection settings of a virtual machine.
            </summary>
            <remarks>
            Get details about the current protection settings of a virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVmProtectionSettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about the current protection settings of a virtual machine.
            </summary>
            <remarks>
            Get details about the current protection settings of a virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVvolReplicationGroup(System.String,System.String,System.String)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing.
            </summary>
            <remarks>
            The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <returns>VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVvolReplicationGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing.
            </summary>
            <remarks>
            The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVvolReplicationGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing.
            </summary>
            <remarks>
            The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.GetVvolReplicationGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing.
            </summary>
            <remarks>
            The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.MoveProtectionGroupFolder(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.MoveProtectionGroupFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.ReconfigureGroup(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec)">
            <summary>
            Reconfigure settings for a protection group in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.ReconfigureGroupWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec)">
            <summary>
            Reconfigure settings for a protection group in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveDatastoreGroup(System.String,System.String,System.String)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing.
            </summary>
            <remarks>
            Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveDatastoreGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing.
            </summary>
            <remarks>
            Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveVmFromProtectionGroup(System.String,System.String,System.String)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing.
            </summary>
            <remarks>
            Remove the virtual machine for a VR protection group
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveVmFromProtectionGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing.
            </summary>
            <remarks>
            Remove the virtual machine for a VR protection group
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveVmProtection(System.String,System.String,System.String)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing.
            </summary>
            <remarks>
            Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RemoveVmProtectionWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing.
            </summary>
            <remarks>
            Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RenameProtectionGroupFolder(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Rename Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RenameProtectionGroupFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Rename Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RestoreAllPlaceholders(System.String,System.String)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.RestoreAllPlaceholdersWithHttpInfo(System.String,System.String)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.UpdateVmProtectionSettings(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings)">
            <summary>
            Update the protection settings of a virtual machine.
            </summary>
            <remarks>
            Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiSync.UpdateVmProtectionSettingsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings)">
            <summary>
            Update the protection settings of a virtual machine.
            </summary>
            <remarks>
            Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IProtectionApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.AddDatastoreGroupAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec,System.Threading.CancellationToken)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing.
            </summary>
            <remarks>
            Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.AddDatastoreGroupWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec,System.Threading.CancellationToken)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing.
            </summary>
            <remarks>
            Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.ConfigureAllAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.ConfigureAllWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.CreateGroupAsync(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new protection group in a given pairing.
            </summary>
            <remarks>
            Create a new protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.CreateGroupWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new protection group in a given pairing.
            </summary>
            <remarks>
            Create a new protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.CreateProtectionGroupFolderAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.CreateProtectionGroupFolderWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.DeleteGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a protection group in a given pairing.
            </summary>
            <remarks>
            Delete a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.DeleteGroupWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a protection group in a given pairing.
            </summary>
            <remarks>
            Delete a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.DeleteProtectionGroupFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Remove Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.DeleteProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Remove Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetAllGroupsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all protection groups in a given pairing.
            </summary>
            <remarks>
            Get information about all protection groups in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetAllGroupsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all protection groups in a given pairing.
            </summary>
            <remarks>
            Get information about all protection groups in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetDatastoreGroupAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing.
            </summary>
            <remarks>
            A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetDatastoreGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing.
            </summary>
            <remarks>
            A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetDatastoreGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing.
            </summary>
            <remarks>
            List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetDatastoreGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing.
            </summary>
            <remarks>
            List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a protection group in a given pairing.
            </summary>
            <remarks>
            Get information about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a protection group in a given pairing.
            </summary>
            <remarks>
            Get information about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a protection group in a given pairing.
            </summary>
            <remarks>
            Get issues about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a protection group in a given pairing.
            </summary>
            <remarks>
            Get issues about a protection group in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupRelatedRecoveryPlansAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery plans in which the protection group is part of.
            </summary>
            <remarks>
            Get recovery plans in which the protection group is part of.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupRelatedRecoveryPlansWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery plans in which the protection group is part of.
            </summary>
            <remarks>
            Get recovery plans in which the protection group is part of.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupVmAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing.
            </summary>
            <remarks>
            Details of a protected virtual machine that is part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupVmWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing.
            </summary>
            <remarks>
            Details of a protected virtual machine that is part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupVmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing.
            </summary>
            <remarks>
            A list of details for virtual machines that are part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetGroupVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing.
            </summary>
            <remarks>
            A list of details for virtual machines that are part of the protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupVmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFolderChildrenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFolderChildrenWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager protection group folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFoldersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server protection inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server protection inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetProtectionGroupFoldersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server protection inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server protection inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVmProtectionSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about the current protection settings of a virtual machine.
            </summary>
            <remarks>
            Get details about the current protection settings of a virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVmProtectionSettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about the current protection settings of a virtual machine.
            </summary>
            <remarks>
            Get details about the current protection settings of a virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmProtectionSettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVvolReplicationGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing.
            </summary>
            <remarks>
            The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVvolReplicationGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing.
            </summary>
            <remarks>
            The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVvolReplicationGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing.
            </summary>
            <remarks>
            The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.GetVvolReplicationGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing.
            </summary>
            <remarks>
            The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.MoveProtectionGroupFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.MoveProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.ReconfigureGroupAsync(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a protection group in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.ReconfigureGroupWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a protection group in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveDatastoreGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing.
            </summary>
            <remarks>
            Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveDatastoreGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing.
            </summary>
            <remarks>
            Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveVmFromProtectionGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing.
            </summary>
            <remarks>
            Remove the virtual machine for a VR protection group
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveVmFromProtectionGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing.
            </summary>
            <remarks>
            Remove the virtual machine for a VR protection group
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveVmProtectionAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing.
            </summary>
            <remarks>
            Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RemoveVmProtectionWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing.
            </summary>
            <remarks>
            Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RenameProtectionGroupFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Rename Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RenameProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager protection group folder.
            </summary>
            <remarks>
            Rename Site Recovery Manager protection group folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RestoreAllPlaceholdersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.RestoreAllPlaceholdersWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing.
            </summary>
            <remarks>
            Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecreateAllPlaceholderVmsResponseDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.UpdateVmProtectionSettingsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings,System.Threading.CancellationToken)">
            <summary>
            Update the protection settings of a virtual machine.
            </summary>
            <remarks>
            Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IProtectionApiAsync.UpdateVmProtectionSettingsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings,System.Threading.CancellationToken)">
            <summary>
            Update the protection settings of a virtual machine.
            </summary>
            <remarks>
            Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IProtectionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ProtectionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ProtectionApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ProtectionApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ProtectionApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ProtectionApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ProtectionApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ProtectionApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ProtectionApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ProtectionApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ProtectionApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.AddDatastoreGroup(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing. Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.AddDatastoreGroupWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing. Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.AddDatastoreGroupAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec,System.Threading.CancellationToken)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing. Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.AddDatastoreGroupWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.AddDatastoreGroupSpec,System.Threading.CancellationToken)">
            <summary>
            Add a replicated datastore group to a protection group in a given pairing. Add a replicated datastore group from an Array-Based Replication protection group. This operation also protects all VMs, including VMs residing on any datastore that is part of the newly added datastore group. For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="addDatastoreGroupSpec">A spec containing the ID of a datastore group to be added to the protection group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ConfigureAll(System.String,System.String)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing. Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ConfigureAllWithHttpInfo(System.String,System.String)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing. Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ConfigureAllAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing. Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ConfigureAllWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Configure protection for all virtual machines that are part of the protection group in a given pairing. Configure protection for all virtual machines that are part of the protection group in a given pairing.&lt;p&gt;Empty list of tasks is returned when all virtual machines in the protection group are already protected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateGroup(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec)">
            <summary>
            Create a new protection group in a given pairing. Create a new protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateGroupWithHttpInfo(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec)">
            <summary>
            Create a new protection group in a given pairing. Create a new protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateGroupAsync(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new protection group in a given pairing. Create a new protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateGroupWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new protection group in a given pairing. Create a new protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="protectionGroupCreateSpec">Spec describing the new group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateProtectionGroupFolder(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager protection group folder. Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateProtectionGroupFolderWithHttpInfo(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager protection group folder. Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateProtectionGroupFolderAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager protection group folder. Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.CreateProtectionGroupFolderWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager protection group folder. Create a new sub-folder with the specified name.&lt;p&gt;Because of the dual-server nature of Site Recovery Manager, the sites must be connected when creating folders.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Create&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new group folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteGroup(System.String,System.String)">
            <summary>
            Delete a protection group in a given pairing. Delete a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteGroupWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a protection group in a given pairing. Delete a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a protection group in a given pairing. Delete a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteGroupWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a protection group in a given pairing. Delete a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteProtectionGroupFolder(System.String,System.String)">
            <summary>
            Remove Site Recovery Manager protection group folder. Remove Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteProtectionGroupFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Remove Site Recovery Manager protection group folder. Remove Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteProtectionGroupFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove Site Recovery Manager protection group folder. Remove Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.DeleteProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove Site Recovery Manager protection group folder. Remove Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetAllGroups(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all protection groups in a given pairing. Get information about all protection groups in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetAllGroupsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all protection groups in a given pairing. Get information about all protection groups in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetAllGroupsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all protection groups in a given pairing. Get information about all protection groups in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetAllGroupsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all protection groups in a given pairing. Get information about all protection groups in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroup(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing. A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing. A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing. A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details about a replicated datastore group of a protection group in a given pairing. A group of replicated datastores.&lt;p&gt;A datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For a non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing. List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing. List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing. List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetDatastoreGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of replicated datastore groups for a protection group in a given pairing. List of replicated datastore groups.&lt;p&gt;Each datastore group represents a minimal set of datastores that must be protected and recovered together.&lt;br&gt;The rules for combining datastores are:&lt;ul&gt;&lt;li&gt;Datastores are backed by storage devices from the same consistency group.&lt;li&gt;Virtual machine spans multiple datastores.&lt;li&gt;Two virtual machines on two different datastores share an RDM device.&lt;/ul&gt;&lt;p&gt;For non-Array-Based Replication protection group, this will return an empty response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroup(System.String,System.String)">
            <summary>
            Get information about a protection group in a given pairing. Get information about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a protection group in a given pairing. Get information about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a protection group in a given pairing. Get information about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a protection group in a given pairing. Get information about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a protection group in a given pairing. Get issues about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a protection group in a given pairing. Get issues about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a protection group in a given pairing. Get issues about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a protection group in a given pairing. Get issues about a protection group in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupRelatedRecoveryPlans(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get recovery plans in which the protection group is part of. Get recovery plans in which the protection group is part of.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupRelatedRecoveryPlansWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get recovery plans in which the protection group is part of. Get recovery plans in which the protection group is part of.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupRelatedRecoveryPlansAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery plans in which the protection group is part of. Get recovery plans in which the protection group is part of.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupRelatedRecoveryPlansWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery plans in which the protection group is part of. Get recovery plans in which the protection group is part of.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVm(System.String,System.String,System.String)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing. Details of a protected virtual machine that is part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing. Details of a protected virtual machine that is part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing. Details of a protected virtual machine that is part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a protected virtual machine that is part of a protection group in a given pairing. Details of a protected virtual machine that is part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupVmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing. A list of details for virtual machines that are part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing. A list of details for virtual machines that are part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing. A list of details for virtual machines that are part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetGroupVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of virtual machines that are part of a protection group in a given pairing. A list of details for virtual machines that are part of the protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupVmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolder(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder. Get information about Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder. Get information about Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder. Get information about Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder. Get information about Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderChildren(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder children. Get information about Site Recovery Manager protection group folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderChildrenWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager protection group folder children. Get information about Site Recovery Manager protection group folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderChildrenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder children. Get information about Site Recovery Manager protection group folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolderChildrenWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager protection group folder children. Get information about Site Recovery Manager protection group folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFolders(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server protection inventory. Get information about Site Recovery Manager server protection inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <returns>ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFoldersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server protection inventory. Get information about Site Recovery Manager server protection inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <returns>ApiResponse of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFoldersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server protection inventory. Get information about Site Recovery Manager server protection inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetProtectionGroupFoldersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server protection inventory. Get information about Site Recovery Manager server protection inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to protection group folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVmProtectionSettings(System.String,System.String,System.String)">
            <summary>
            Get details about the current protection settings of a virtual machine. Get details about the current protection settings of a virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVmProtectionSettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about the current protection settings of a virtual machine. Get details about the current protection settings of a virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVmProtectionSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about the current protection settings of a virtual machine. Get details about the current protection settings of a virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmProtectionSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVmProtectionSettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about the current protection settings of a virtual machine. Get details about the current protection settings of a virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmProtectionSettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroup(System.String,System.String,System.String)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing. The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <returns>VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing. The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing. The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the source vSphere Virtual Volumes (vVols) replication group for a protection group in a given pairing. The source vSphere Virtual Volumes replication groups for this protection group. Both protection and recovery site report the same replication groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="replicationGroupId">The ID of the vSphere Virtual Volumes (vVol) replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing. The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing. The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing. The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.GetVvolReplicationGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the source VVOL replication groups for a protection group in a given pairing. The source VVOL replication groups for this protection group. Both protection and recovery site report the same replication groups. For non-VVOL protection group, this will return an error response.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.MoveProtectionGroupFolder(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager protection group folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.MoveProtectionGroupFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager protection group folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.MoveProtectionGroupFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager protection group folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.MoveProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager protection group folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.ProtectionProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ReconfigureGroup(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec)">
            <summary>
            Reconfigure settings for a protection group in a given pairing. Reconfigure settings for this group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ReconfigureGroupWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec)">
            <summary>
            Reconfigure settings for a protection group in a given pairing. Reconfigure settings for this group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ReconfigureGroupAsync(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a protection group in a given pairing. Reconfigure settings for this group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.ReconfigureGroupWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ProtectionGroupEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a protection group in a given pairing. Reconfigure settings for this group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="protectionGroupEditSpec">Spec describing the new protection group settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveDatastoreGroup(System.String,System.String,System.String)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing. Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveDatastoreGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing. Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveDatastoreGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing. Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveDatastoreGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a replicated datastore group from a protection group in a given pairing. Remove a replicated datastore group from an Array-Based Replication protection group. This operation also removes the protection of VMs residing on any datastore that is part of the removed datastore group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="datastoreGroupId">The ID of a datastore group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmFromProtectionGroup(System.String,System.String,System.String)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing. Remove the virtual machine for a VR protection group
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmFromProtectionGroupWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing. Remove the virtual machine for a VR protection group
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmFromProtectionGroupAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing. Remove the virtual machine for a VR protection group
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmFromProtectionGroupWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a virtual machine from a VR protection group in a given pairing. Remove the virtual machine for a VR protection group
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmProtection(System.String,System.String,System.String)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing. Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmProtectionWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing. Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmProtectionAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing. Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RemoveVmProtectionWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the protection of a virtual machine within a protection group in a given pairing. Remove the protection of a given virtual machine for this group. Once the protection of a VM is removed, the VM will not be recovered during recovery. To protect the VM again, run the configure protection operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RenameProtectionGroupFolder(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager protection group folder. Rename Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RenameProtectionGroupFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager protection group folder. Rename Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RenameProtectionGroupFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager protection group folder. Rename Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RenameProtectionGroupFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager protection group folder. Rename Site Recovery Manager protection group folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the protection group folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the protection group folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RestoreAllPlaceholders(System.String,System.String)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing. Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RestoreAllPlaceholdersWithHttpInfo(System.String,System.String)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing. Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <returns>ApiResponse of RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RestoreAllPlaceholdersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing. Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecreateAllPlaceholderVmsResponseDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.RestoreAllPlaceholdersWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Repair all placeholder virtual machines that are part of the protection group in a given pairing. Repair placeholder VMs.&lt;p&gt;Called when the placeholder needs to be recreated due to one of these reasons:&lt;ul&gt;&lt;li&gt;Placeholder creation failed.&lt;li&gt;Placeholder was deleted.&lt;li&gt;Placeholder inventory was lost or needs to be reentered - one use case for this is when production VM was a template but then gets converted to a VM.&lt;/ul&gt;&lt;p&gt;This method can be called only on the recovery site. It does not require the primary site to be up for successful completion.&lt;p&gt;Empty list of tasks is returned when no virtual machines need repair of their placeholder VMs.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecreateAllPlaceholderVmsResponseDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.UpdateVmProtectionSettings(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings)">
            <summary>
            Update the protection settings of a virtual machine. Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.UpdateVmProtectionSettingsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings)">
            <summary>
            Update the protection settings of a virtual machine. Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.UpdateVmProtectionSettingsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings,System.Threading.CancellationToken)">
            <summary>
            Update the protection settings of a virtual machine. Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ProtectionApi.UpdateVmProtectionSettingsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmProtectionSettings,System.Threading.CancellationToken)">
            <summary>
            Update the protection settings of a virtual machine. Update the protection settings of a virtual machine. This endpoint must be called after the remove protection operation in order for the VM to be recovered during recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="groupId">The ID of a protection group defined within current pairing.</param>
            <param name="vmId">The ID of a protected virtual machine.</param>
            <param name="vmProtectionSettings">A spec describing the new VM protection settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IRecoveryApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CancelRecoveryPlan(System.String,System.String)">
            <summary>
            Cancels a running recovery task.
            </summary>
            <remarks>
            Cancels a running recovery task for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CancelRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Cancels a running recovery task.
            </summary>
            <remarks>
            Cancels a running recovery task for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreatePlan(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec)">
            <summary>
            Create a new recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreatePlanWithHttpInfo(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec)">
            <summary>
            Create a new recovery plan in a given pairing.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreateRecoveryPlanFolder(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreateRecoveryPlanFolderWithHttpInfo(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreateRecoveryStepsCallout(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.CreateRecoveryStepsCalloutWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryPlan(System.String,System.String)">
            <summary>
            Delete a recovery plan from a given pairing.
            </summary>
            <remarks>
            Delete a recovery plan from a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a recovery plan from a given pairing.
            </summary>
            <remarks>
            Delete a recovery plan from a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryPlanFolder(System.String,System.String)">
            <summary>
            Delete Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryPlanFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Delete Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryStep(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DeleteRecoveryStepWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DismissRecoveryStepsRecoveryPlanPrompt(System.String,System.String,System.String)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation.
            </summary>
            <remarks>
            Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.DismissRecoveryStepsRecoveryPlanPromptWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation.
            </summary>
            <remarks>
            Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.EditRecoveryStepsCallout(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.EditRecoveryStepsCalloutWithHttpInfo(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetAllPlanHistoryRecords(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetAllPlanHistoryRecordsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetAllRecoveryPlans(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all recovery plans in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetAllRecoveryPlansWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all recovery plans in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanHistoryRecord(System.String,System.String,System.String)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <returns>HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanHistoryRecordWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <returns>ApiResponse of HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanHistoryRecords(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanHistoryRecordsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanRelatedProtectionGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get protection groups that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanRelatedProtectionGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get protection groups that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanRelatedTestNetworks(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the test networks configured for a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanRelatedTestNetworksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the test networks configured for a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachine(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineDependentVms(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the dependent VMs for a protected virtual machine.
            </summary>
            <remarks>
            Get the dependent VMs for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineDependentVmsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the dependent VMs for a protected virtual machine.
            </summary>
            <remarks>
            Get the dependent VMs for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineIpCustomization(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Get the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineIpCustomizationWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Get the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineRecoveryPriority(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine priority during a recovery.
            </summary>
            <remarks>
            Get the protected virtual machine priority during a recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineRecoveryPriorityWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine priority during a recovery.
            </summary>
            <remarks>
            Get the protected virtual machine priority during a recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineRecoverySettings(System.String,System.String,System.String)">
            <summary>
            Get recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineRecoverySettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineSummarizedRecoverySettings(System.String,System.String,System.String)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get a summary of the recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachineSummarizedRecoverySettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get a summary of the recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachines(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetPlanVirtualMachinesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlan(System.String,System.String)">
            <summary>
            Get information about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFolder(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFolderChildren(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFolderChildrenWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFolders(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server recovery inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <returns>RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanFoldersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server recovery inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get issues about a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryPlanIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get issues about a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStep(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoverySteps(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about recovery steps in a given recovery view mode
            </summary>
            <remarks>
            Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <returns>RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about recovery steps in a given recovery view mode
            </summary>
            <remarks>
            Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <returns>ApiResponse of RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsCalloutDetails(System.String,System.String,System.String,System.String)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsCalloutDetailsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsUserPrompt(System.String,System.String,System.String)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <returns>UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsUserPromptWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <returns>ApiResponse of UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsUserPrompts(System.String,System.String)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.GetRecoveryStepsUserPromptsWithHttpInfo(System.String,System.String)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.MoveRecoveryPlanFolder(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.MoveRecoveryPlanFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.PlanVirtualMachineCheckDependentVms(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <remarks>
            Checks if a given list of dependent VMs is valid against the current VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <returns>DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.PlanVirtualMachineCheckDependentVmsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <remarks>
            Checks if a given list of dependent VMs is valid against the current VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <returns>ApiResponse of DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.ReconfigureRecoveryPlan(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec)">
            <summary>
            Reconfigure settings for a recovery in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.ReconfigureRecoveryPlanWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec)">
            <summary>
            Reconfigure settings for a recovery in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RenameRecoveryPlanFolder(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RenameRecoveryPlanFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunCleanupTestRecovery(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a cleanup test recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunCleanupTestRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a cleanup test recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunRecovery(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec)">
            <summary>
            Run the recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run the recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec)">
            <summary>
            Run the recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run the recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunReprotect(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunReprotectWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunTestRecovery(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.RunTestRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineDependentVms(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Update the dependent VMs of a protected virtual machine.
            </summary>
            <remarks>
            Update the dependent VMs of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineDependentVmsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Update the dependent VMs of a protected virtual machine.
            </summary>
            <remarks>
            Update the dependent VMs of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineIpCustomization(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec)">
            <summary>
            Update the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Update the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineIpCustomizationWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec)">
            <summary>
            Update the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Update the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineRecoveryPriority(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData)">
            <summary>
            Update the recovery priority of a protected virtual machine.
            </summary>
            <remarks>
            Update the recovery priority of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineRecoveryPriorityWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData)">
            <summary>
            Update the recovery priority of a protected virtual machine.
            </summary>
            <remarks>
            Update the recovery priority of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineRecoverySettings(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec)">
            <summary>
            Update recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Update recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiSync.UpdatePlanVirtualMachineRecoverySettingsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec)">
            <summary>
            Update recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Update recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IRecoveryApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CancelRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a running recovery task.
            </summary>
            <remarks>
            Cancels a running recovery task for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CancelRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a running recovery task.
            </summary>
            <remarks>
            Cancels a running recovery task for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreatePlanAsync(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new recovery plan in a given pairing.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreatePlanWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new recovery plan in a given pairing.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreateRecoveryPlanFolderAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreateRecoveryPlanFolderWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreateRecoveryStepsCalloutAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.CreateRecoveryStepsCalloutWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery plan from a given pairing.
            </summary>
            <remarks>
            Delete a recovery plan from a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery plan from a given pairing.
            </summary>
            <remarks>
            Delete a recovery plan from a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryPlanFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryStepAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DeleteRecoveryStepWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DismissRecoveryStepsRecoveryPlanPromptAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation.
            </summary>
            <remarks>
            Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.DismissRecoveryStepsRecoveryPlanPromptWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation.
            </summary>
            <remarks>
            Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.EditRecoveryStepsCalloutAsync(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec,System.Threading.CancellationToken)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.EditRecoveryStepsCalloutWithHttpInfoAsync(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec,System.Threading.CancellationToken)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.
            </summary>
            <remarks>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetAllPlanHistoryRecordsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetAllPlanHistoryRecordsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetAllRecoveryPlansAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all recovery plans in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetAllRecoveryPlansWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all recovery plans in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanHistoryRecordAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanHistoryRecordWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (HistoryReportDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanHistoryRecordsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanHistoryRecordsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing.
            </summary>
            <remarks>
            If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanRelatedProtectionGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get protection groups that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanRelatedProtectionGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get protection groups that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanRelatedTestNetworksAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the test networks configured for a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanRelatedTestNetworksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the test networks configured for a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get the protected virtual machine included in a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanVmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineDependentVmsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the dependent VMs for a protected virtual machine.
            </summary>
            <remarks>
            Get the dependent VMs for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the dependent VMs for a protected virtual machine.
            </summary>
            <remarks>
            Get the dependent VMs for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DependentVmDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineIpCustomizationAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Get the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineIpCustomizationWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Get the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmRecoveryIpCustomizationSettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineRecoveryPriorityAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine priority during a recovery.
            </summary>
            <remarks>
            Get the protected virtual machine priority during a recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineRecoveryPriorityWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine priority during a recovery.
            </summary>
            <remarks>
            Get the protected virtual machine priority during a recovery.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PriorityGroupDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineRecoverySettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmRecoverySettingsStateDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineSummarizedRecoverySettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get a summary of the recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachineSummarizedRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Get a summary of the recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmSummarizedRecoverySettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachinesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetPlanVirtualMachinesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get virtual machines that are part of a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanVmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Recovery plans are used for automating the recovery execution during a migration or a failover.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFolderChildrenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFolderChildrenWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <remarks>
            Get information about Site Recovery Manager recovery plan folder children.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFoldersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server recovery inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanFoldersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <remarks>
            Get information about Site Recovery Manager server recovery inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get issues about a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryPlanIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a recovery plan in a given pairing.
            </summary>
            <remarks>
            Get issues about a recovery plan in a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryStepDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about recovery steps in a given recovery view mode
            </summary>
            <remarks>
            Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about recovery steps in a given recovery view mode
            </summary>
            <remarks>
            Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryStepDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsCalloutDetailsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsCalloutDetailsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode.
            </summary>
            <remarks>
            Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CalloutDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsUserPromptAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsUserPromptWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (UserPromptDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsUserPromptsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.GetRecoveryStepsUserPromptsWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment.
            </summary>
            <remarks>
            User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (UserPromptDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.MoveRecoveryPlanFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.MoveRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.PlanVirtualMachineCheckDependentVmsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <remarks>
            Checks if a given list of dependent VMs is valid against the current VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.PlanVirtualMachineCheckDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <remarks>
            Checks if a given list of dependent VMs is valid against the current VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DependentVmsValidationResult)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.ReconfigureRecoveryPlanAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a recovery in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.ReconfigureRecoveryPlanWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a recovery in a given pairing.
            </summary>
            <remarks>
            Reconfigure settings for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RenameRecoveryPlanFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RenameRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager recovery plan folder.
            </summary>
            <remarks>
            Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunCleanupTestRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a cleanup test recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunCleanupTestRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a cleanup test recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run the recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run the recovery for this recovery plan.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunReprotectAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunReprotectWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunTestRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.RunTestRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing.
            </summary>
            <remarks>
            Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineDependentVmsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Update the dependent VMs of a protected virtual machine.
            </summary>
            <remarks>
            Update the dependent VMs of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Update the dependent VMs of a protected virtual machine.
            </summary>
            <remarks>
            Update the dependent VMs of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineIpCustomizationAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Update the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineIpCustomizationWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update the IP customization for a protected virtual machine.
            </summary>
            <remarks>
            Update the IP customization for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineRecoveryPriorityAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData,System.Threading.CancellationToken)">
            <summary>
            Update the recovery priority of a protected virtual machine.
            </summary>
            <remarks>
            Update the recovery priority of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineRecoveryPriorityWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData,System.Threading.CancellationToken)">
            <summary>
            Update the recovery priority of a protected virtual machine.
            </summary>
            <remarks>
            Update the recovery priority of a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineRecoverySettingsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Update recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IRecoveryApiAsync.UpdatePlanVirtualMachineRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update recovery settings for a protected virtual machine.
            </summary>
            <remarks>
            Update recovery settings for a protected virtual machine.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IRecoveryApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.RecoveryApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.RecoveryApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.RecoveryApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.RecoveryApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.RecoveryApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.RecoveryApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.RecoveryApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.RecoveryApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.RecoveryApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.RecoveryApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CancelRecoveryPlan(System.String,System.String)">
            <summary>
            Cancels a running recovery task. Cancels a running recovery task for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CancelRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Cancels a running recovery task. Cancels a running recovery task for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CancelRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a running recovery task. Cancels a running recovery task for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CancelRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a running recovery task. Cancels a running recovery task for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreatePlan(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec)">
            <summary>
            Create a new recovery plan in a given pairing. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreatePlanWithHttpInfo(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec)">
            <summary>
            Create a new recovery plan in a given pairing. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreatePlanAsync(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new recovery plan in a given pairing. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreatePlanWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Create a new recovery plan in a given pairing. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="recoveryPlanCreateSpec">A spec describing the new plan.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryPlanFolder(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager recovery plan folder. Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryPlanFolderWithHttpInfo(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Create Site Recovery Manager recovery plan folder. Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryPlanFolderAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager recovery plan folder. Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryPlanFolderWithHttpInfoAsync(System.String,VMware.Bindings.Srm.Model.CreateFolderSpec,System.Threading.CancellationToken)">
            <summary>
            Create Site Recovery Manager recovery plan folder. Create a new sub-folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="createFolderSpec">Spec describing the new plan folder to create.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryStepsCallout(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode. Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryStepsCalloutWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode. Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryStepsCalloutAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode. Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.CreateRecoveryStepsCalloutWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutCreateSpec,System.Threading.CancellationToken)">
            <summary>
            Add a callout/prompt to the list of recovery steps in a given recovery view mode. Add a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="calloutCreateSpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlan(System.String,System.String)">
            <summary>
            Delete a recovery plan from a given pairing. Delete a recovery plan from a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a recovery plan from a given pairing. Delete a recovery plan from a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery plan from a given pairing. Delete a recovery plan from a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery plan from a given pairing. Delete a recovery plan from a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanFolder(System.String,System.String)">
            <summary>
            Delete Site Recovery Manager recovery plan folder. Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Delete Site Recovery Manager recovery plan folder. Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Site Recovery Manager recovery plan folder. Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Site Recovery Manager recovery plan folder. Delete the folder with the specified ID.&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Delete&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryStep(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a recovery step in a given recovery view mode. Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryStepWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a recovery step in a given recovery view mode. Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryStepAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery step in a given recovery view mode. Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DeleteRecoveryStepWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a recovery step in a given recovery view mode. Delete a recovery step in a given recovery view mode.&lt;p&gt;This operation is possible only for custom-created prompts or callouts.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DismissRecoveryStepsRecoveryPlanPrompt(System.String,System.String,System.String)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation. Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DismissRecoveryStepsRecoveryPlanPromptWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation. Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DismissRecoveryStepsRecoveryPlanPromptAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation. Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.DismissRecoveryStepsRecoveryPlanPromptWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Dismiss a given user prompt waiting for a client acknowledgment during a recovery operation. Dismiss an user prompt waiting for a client acknowledgment during a recovery operation.&lt;p&gt;When dismissed the recovery operation will continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of an user prompt waiting for a client acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.EditRecoveryStepsCallout(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode. Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.EditRecoveryStepsCalloutWithHttpInfo(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode. Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.EditRecoveryStepsCalloutAsync(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec,System.Threading.CancellationToken)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode. Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.EditRecoveryStepsCalloutWithHttpInfoAsync(System.String,System.String,System.String,System.String,VMware.Bindings.Srm.Model.CalloutModifySpec,System.Threading.CancellationToken)">
            <summary>
            Modify a callout/prompt to the list of recovery steps in a given recovery view mode. Modify a callout/prompt to the list of recovery steps in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="calloutModifySpec">Spec describing the new callout settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllPlanHistoryRecords(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllPlanHistoryRecordsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllPlanHistoryRecordsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllPlanHistoryRecordsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllRecoveryPlans(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all recovery plans in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllRecoveryPlansWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all recovery plans in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllRecoveryPlansAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all recovery plans in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetAllRecoveryPlansWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all recovery plans in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecord(System.String,System.String,System.String)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing. Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <returns>HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing. Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <returns>ApiResponse of HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing. Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of HistoryReportDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the history report for a recovery run of a recovery plan in a given pairing. Get information about the history report for a recovery run of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reportId">The ID of the history report.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (HistoryReportDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecords(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanHistoryRecordsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all history reports for recovery runs in a given timeframe of a recovery plan in a given pairing. If no &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; are specified, then the last seven days of data will be returned.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="startDate">Start date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time minus 7 days in milliseconds. (optional)</param>
            <param name="endDate">End date of the desired timeframe in milliseconds since the standard base time known as \&quot;the epoch\&quot;, since January 1, 1970, 00:00:00 GMT.  Default value: current time in milliseconds. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedProtectionGroups(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing. Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedProtectionGroupsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing. Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedProtectionGroupsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing. Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ProtectionGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedProtectionGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get protection groups that are part of a recovery plan in a given pairing. Get protection groups that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ProtectionGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedTestNetworks(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing. Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedTestNetworksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing. Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedTestNetworksAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing. Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TestNetworkMappingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanRelatedTestNetworksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the test networks configured for a recovery plan in a given pairing. Get the test networks configured for a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TestNetworkMappingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachine(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing. Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing. Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing. Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanVmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine included in a recovery plan in a given pairing. Get the protected virtual machine included in a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanVmInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineDependentVms(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the dependent VMs for a protected virtual machine. Get the dependent VMs for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineDependentVmsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the dependent VMs for a protected virtual machine. Get the dependent VMs for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineDependentVmsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the dependent VMs for a protected virtual machine. Get the dependent VMs for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DependentVmDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the dependent VMs for a protected virtual machine. Get the dependent VMs for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DependentVmDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineIpCustomization(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the IP customization for a protected virtual machine. Get the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineIpCustomizationWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get the IP customization for a protected virtual machine. Get the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineIpCustomizationAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the IP customization for a protected virtual machine. Get the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmRecoveryIpCustomizationSettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineIpCustomizationWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the IP customization for a protected virtual machine. Get the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmRecoveryIpCustomizationSettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoveryPriority(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine priority during a recovery. Get the protected virtual machine priority during a recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoveryPriorityWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get the protected virtual machine priority during a recovery. Get the protected virtual machine priority during a recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoveryPriorityAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine priority during a recovery. Get the protected virtual machine priority during a recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PriorityGroupDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoveryPriorityWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the protected virtual machine priority during a recovery. Get the protected virtual machine priority during a recovery.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PriorityGroupDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoverySettings(System.String,System.String,System.String)">
            <summary>
            Get recovery settings for a protected virtual machine. Get recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoverySettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get recovery settings for a protected virtual machine. Get recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoverySettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery settings for a protected virtual machine. Get recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmRecoverySettingsStateDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get recovery settings for a protected virtual machine. Get recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmRecoverySettingsStateDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineSummarizedRecoverySettings(System.String,System.String,System.String)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine. Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineSummarizedRecoverySettingsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine. Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <returns>ApiResponse of VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineSummarizedRecoverySettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine. Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmSummarizedRecoverySettingsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachineSummarizedRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a summary of the recovery settings for a protected virtual machine. Get a summary of the recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmSummarizedRecoverySettingsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachines(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing. Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachinesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing. Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachinesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing. Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanVmInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetPlanVirtualMachinesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get virtual machines that are part of a recovery plan in a given pairing. Get virtual machines that are part of a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanVmInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlan(System.String,System.String)">
            <summary>
            Get information about a recovery plan in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a recovery plan in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery plan in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryPlanInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery plan in a given pairing. Recovery plans are used for automating the recovery execution during a migration or a failover.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryPlanInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolder(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder. Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder. Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder. Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder. Get information about Site Recovery Manager recovery plan folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderChildren(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children. Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderChildrenWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children. Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderChildrenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children. Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolderChildrenWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager recovery plan folder children. Get information about Site Recovery Manager recovery plan folder children.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFolders(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory. Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <returns>RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFoldersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory. Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <returns>ApiResponse of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFoldersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory. Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanFoldersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about Site Recovery Manager server recovery inventory. Get information about Site Recovery Manager server recovery inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to recovery plan folder on Site Recovery Manager server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanIssues(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a recovery plan in a given pairing. Get issues about a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanIssuesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get issues about a recovery plan in a given pairing. Get issues about a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanIssuesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a recovery plan in a given pairing. Get issues about a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryPlanIssuesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get issues about a recovery plan in a given pairing. Get issues about a recovery plan in a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStep(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a recovery step in a given recovery view mode. Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a recovery step in a given recovery view mode. Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery step in a given recovery view mode. Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryStepDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a recovery step in a given recovery view mode. Get information about a recovery step in a given recovery view mode.&lt;p&gt;Will fail if can not retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryStepDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoverySteps(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about recovery steps in a given recovery view mode Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <returns>RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about recovery steps in a given recovery view mode Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <returns>ApiResponse of RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about recovery steps in a given recovery view mode Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of RecoveryStepDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about recovery steps in a given recovery view mode Get information about recovery steps in a given recovery view mode.&lt;p&gt;Will fail if unable to retrieve recovery steps in the desired mode in the current recovery plan state.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;recovery&lt;/code&gt;, &lt;code&gt;cleanup&lt;/code&gt;, &lt;code&gt;reprotect&lt;/code&gt;.</param>
            <param name="expandedStepIds">Comma-separated list of IDs of recovery steps to expand. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (RecoveryStepDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsCalloutDetails(System.String,System.String,System.String,System.String)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode. Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsCalloutDetailsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode. Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <returns>ApiResponse of CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsCalloutDetailsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode. Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CalloutDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsCalloutDetailsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data about a callout/prompt related to a given recovery step in a given recovery view mode. Get detailed information about a callout/prompt for a recovery step in a given recovery view mode.&lt;p&gt;Will fail if cannot retrieve recovery steps in the desired mode in the current recovery plan state or the recovery step is not callout/prompt-related.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="viewMode">The view mode of the recovery steps. Possible values are: test, recovery, cleanup, reprotect.</param>
            <param name="recoveryStepId">Id of a recovery step.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CalloutDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPrompt(System.String,System.String,System.String)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <returns>UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <returns>ApiResponse of UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of UserPromptDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a given user prompt currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="promptId">The ID of a user prompt waiting for a clint acknowledgment.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (UserPromptDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPrompts(System.String,System.String)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptsWithHttpInfo(System.String,System.String)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <returns>ApiResponse of UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of UserPromptDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.GetRecoveryStepsUserPromptsWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all user prompts currently waiting for an acknowledgment. User prompts are configurable callouts which are triggered during a recovery operation.&lt;p&gt;User prompts must be dismissed by the client in order the recovery operation to continue.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (UserPromptDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.MoveRecoveryPlanFolder(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager recovery plan folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.MoveRecoveryPlanFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Move Site Recovery Manager recovery plan folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.MoveRecoveryPlanFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager recovery plan folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.MoveRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.MoveObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Move Site Recovery Manager recovery plan folder. Move a specified folder into a destination folder. This operation is typically used by clients when implementing a drag-and-drop interface for moving folders.&lt;p&gt;The objects that can be moved into a folder depend on the parent folder&#39;s type. You can move only recovery plans and recovery plan folders into a folder constructed for recovery plans. You can move only protection groups and protection group folders into a folder constructed for protection groups.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the moved folder and the source and destination parent folders.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="moveObjectSpec">Spec describing the destination folder for the movement of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.PlanVirtualMachineCheckDependentVms(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM. Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <returns>DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.PlanVirtualMachineCheckDependentVmsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM. Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <returns>ApiResponse of DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.PlanVirtualMachineCheckDependentVmsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM. Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DependentVmsValidationResult</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.PlanVirtualMachineCheckDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Checks if a given list of dependent VMs is valid against the current VM. Checks if a given list of dependent VMs is valid against the current VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">A spec describing the dependent VMs to be checked.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DependentVmsValidationResult)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.ReconfigureRecoveryPlan(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec)">
            <summary>
            Reconfigure settings for a recovery in a given pairing. Reconfigure settings for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.ReconfigureRecoveryPlanWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec)">
            <summary>
            Reconfigure settings for a recovery in a given pairing. Reconfigure settings for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.ReconfigureRecoveryPlanAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a recovery in a given pairing. Reconfigure settings for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.ReconfigureRecoveryPlanWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoveryPlanEditSpec,System.Threading.CancellationToken)">
            <summary>
            Reconfigure settings for a recovery in a given pairing. Reconfigure settings for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoveryPlanEditSpec">A spec describing the new recovery plan settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RenameRecoveryPlanFolder(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager recovery plan folder. Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RenameRecoveryPlanFolderWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Rename Site Recovery Manager recovery plan folder. Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RenameRecoveryPlanFolderAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager recovery plan folder. Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RenameRecoveryPlanFolderWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RenameObjectSpec,System.Threading.CancellationToken)">
            <summary>
            Rename Site Recovery Manager recovery plan folder. Rename a folder with the specified name.&lt;p&gt;Any % (percent) character used in this name parameter must be escaped, unless it is used to start an escape sequence. Clients can also escape any other characters in this name parameter.&lt;p&gt;This method requires &lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Create&lt;/code&gt; and&lt;code&gt;VcDr.RecoveryProfile.com.vmware.vcDr.Edit&lt;/code&gt; privilege on the containing folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="folderId">ID of the recovery plan folder.</param>
            <param name="renameObjectSpec">Spec describing the new name of the recovery plan folder.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunCleanupTestRecovery(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing. Run a cleanup test recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunCleanupTestRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing. Run a cleanup test recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunCleanupTestRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing. Run a cleanup test recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunCleanupTestRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.CleanupTestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a cleanup after a test recovery for a recovery plan in a given pairing. Run a cleanup test recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="cleanupTestPlanSpec">A spec describing the cleanup test recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunRecovery(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec)">
            <summary>
            Run the recovery for a recovery plan in a given pairing. Run the recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec)">
            <summary>
            Run the recovery for a recovery plan in a given pairing. Run the recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the recovery for a recovery plan in a given pairing. Run the recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.RecoverPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the recovery for a recovery plan in a given pairing. Run the recovery for this recovery plan.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="recoverPlanSpec">A spec describing the planned recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunReprotect(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing. Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunReprotectWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing. Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunReprotectAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing. Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunReprotectWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReprotectPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run the reprotect operation after a successful recovery for a recovery plan in a given pairing. Run reprotect for this recovery plan. Complete a recovery, and start protecting the groups so they can be recovered on the peer site. Reprotect involves unregistering the VMs on the peer site, configuring storage, and registering placeholders. The callers must ensure that they have all the required privileges for VM creation, deletion, and reconfiguration.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="reprotectPlanSpec">A spec describing the reprotect recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunTestRecovery(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing. Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunTestRecoveryWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing. Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunTestRecoveryAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing. Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.RunTestRecoveryWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.TestPlanSpec,System.Threading.CancellationToken)">
            <summary>
            Run a test recovery for a recovery plan in a given pairing. Run a test recovery for this recovery plan, leaving the primary site unaffected.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="testPlanSpec">Spec describing test recovery settings</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineDependentVms(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Update the dependent VMs of a protected virtual machine. Update the dependent VMs of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineDependentVmsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Update the dependent VMs of a protected virtual machine. Update the dependent VMs of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineDependentVmsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Update the dependent VMs of a protected virtual machine. Update the dependent VMs of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineDependentVmsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.DependentVmSpec,System.Threading.CancellationToken)">
            <summary>
            Update the dependent VMs of a protected virtual machine. Update the dependent VMs of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="dependentVmSpec">Spec describing dependent VMs.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineIpCustomization(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec)">
            <summary>
            Update the IP customization for a protected virtual machine. Update the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineIpCustomizationWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec)">
            <summary>
            Update the IP customization for a protected virtual machine. Update the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineIpCustomizationAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update the IP customization for a protected virtual machine. Update the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineIpCustomizationWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update the IP customization for a protected virtual machine. Update the IP customization for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoveryIpCustomizationSettingsSpec">A spec describing the VM IP customization settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoveryPriority(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData)">
            <summary>
            Update the recovery priority of a protected virtual machine. Update the recovery priority of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoveryPriorityWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData)">
            <summary>
            Update the recovery priority of a protected virtual machine. Update the recovery priority of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoveryPriorityAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData,System.Threading.CancellationToken)">
            <summary>
            Update the recovery priority of a protected virtual machine. Update the recovery priority of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoveryPriorityWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.PriorityGroupData,System.Threading.CancellationToken)">
            <summary>
            Update the recovery priority of a protected virtual machine. Update the recovery priority of a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="priorityGroupData">Priority group for the protected virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoverySettings(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec)">
            <summary>
            Update recovery settings for a protected virtual machine. Update recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoverySettingsWithHttpInfo(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec)">
            <summary>
            Update recovery settings for a protected virtual machine. Update recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoverySettingsAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update recovery settings for a protected virtual machine. Update recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.RecoveryApi.UpdatePlanVirtualMachineRecoverySettingsWithHttpInfoAsync(System.String,System.String,System.String,VMware.Bindings.Srm.Model.VmRecoverySettingsSpec,System.Threading.CancellationToken)">
            <summary>
            Update recovery settings for a protected virtual machine. Update recovery settings for a protected virtual machine.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="planId">The ID of a recovery plan defined within current pairing.</param>
            <param name="vmId">The ID of a virtual machine.</param>
            <param name="vmRecoverySettingsSpec">Spec describing VM recovery settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IReplicationApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.CreateArrayManager(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec)">
            <summary>
            Create a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Create a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.CreateArrayManagerWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec)">
            <summary>
            Create a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Create a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.CreateReplicatedArrayPair(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec)">
            <summary>
            Create a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.CreateReplicatedArrayPairWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec)">
            <summary>
            Create a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DeleteArrayManager(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Delete a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DeleteArrayManagerWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Delete a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DeleteReplicatedArrayPair(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DeleteReplicatedArrayPairWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DiscoverReplicatedArrayPairs(System.String,System.String,System.String)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays.
            </summary>
            <remarks>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DiscoverReplicatedArrayPairsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays.
            </summary>
            <remarks>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DiscoverStorageDevices(System.String,System.String,System.String)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.DiscoverStorageDevicesWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetAllVvolFaultDomainReplicationGroups(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetAllVvolFaultDomainReplicationGroupsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetAllVvolFaultDomains(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <remarks>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetAllVvolFaultDomainsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <remarks>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetArrayManager(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetArrayManagerWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetArrayManagers(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager array managers.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetArrayManagersWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager array managers.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetReplicatedArrayPair(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetReplicatedArrayPairWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetReplicatedArrayPairs(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetReplicatedArrayPairsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdapter(System.String,System.String,System.String)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdapterWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ApiResponse of StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdapterConnectionParams(System.String,System.String,System.String)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdapterConnectionParamsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ApiResponse of ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdapters(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageAdaptersWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageDevices(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetStorageDevicesWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetVvolFaultDomain(System.String,System.String,System.String)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <remarks>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <returns>VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetVvolFaultDomainWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <remarks>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <returns>ApiResponse of VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetVvolFaultDomainReplicationGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <returns>VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.GetVvolFaultDomainReplicationGroupWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.RetrieveUnassignedDatastoreGroups(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <remarks>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiSync.RetrieveUnassignedDatastoreGroupsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <remarks>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IReplicationApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.CreateArrayManagerAsync(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Create a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.CreateArrayManagerWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Create a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.CreateReplicatedArrayPairAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.CreateReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DeleteArrayManagerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Delete a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DeleteArrayManagerWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Delete a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DeleteReplicatedArrayPairAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DeleteReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DiscoverReplicatedArrayPairsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays.
            </summary>
            <remarks>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DiscoverReplicatedArrayPairsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays.
            </summary>
            <remarks>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DiscoverStorageDevicesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.DiscoverStorageDevicesWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetAllVvolFaultDomainReplicationGroupsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetAllVvolFaultDomainReplicationGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetAllVvolFaultDomainsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <remarks>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetAllVvolFaultDomainsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <remarks>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolFaultDomainInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetArrayManagerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetArrayManagerWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager array manager.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ArrayManagerDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetArrayManagersAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager array managers.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetArrayManagersWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager array managers.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ArrayManagerDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetReplicatedArrayPairAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedArrayPairDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetReplicatedArrayPairsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetReplicatedArrayPairsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs.
            </summary>
            <remarks>
            Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedArrayPairDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdapterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdapterWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageAdapterDetailsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdapterConnectionParamsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdapterConnectionParamsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager.
            </summary>
            <remarks>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ConnectionParamGroupDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdaptersAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageAdaptersWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager.
            </summary>
            <remarks>
            Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageAdapterDetailsDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageDevicesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetStorageDevicesWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair.
            </summary>
            <remarks>
            Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageDevicesResponseDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetVvolFaultDomainAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <remarks>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetVvolFaultDomainWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <remarks>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolFaultDomainInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetVvolFaultDomainReplicationGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.GetVvolFaultDomainReplicationGroupWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <remarks>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.RetrieveUnassignedDatastoreGroupsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <remarks>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IReplicationApiAsync.RetrieveUnassignedDatastoreGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <remarks>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseList)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IReplicationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ReplicationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ReplicationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ReplicationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ReplicationApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ReplicationApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ReplicationApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ReplicationApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ReplicationApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ReplicationApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ReplicationApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateArrayManager(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec)">
            <summary>
            Create a Site Recovery Manager array manager. Create a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateArrayManagerWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec)">
            <summary>
            Create a Site Recovery Manager array manager. Create a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateArrayManagerAsync(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager array manager. Create a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateArrayManagerWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ArrayManagerSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager array manager. Create a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerSpec">Spec describing the new array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateReplicatedArrayPair(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec)">
            <summary>
            Create a Site Recovery Manager replicated array pair. Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateReplicatedArrayPairWithHttpInfo(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec)">
            <summary>
            Create a Site Recovery Manager replicated array pair. Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateReplicatedArrayPairAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager replicated array pair. Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.CreateReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec,System.Threading.CancellationToken)">
            <summary>
            Create a Site Recovery Manager replicated array pair. Create a Site Recovery Manager replicated array pair that is part of a given pairing.&lt;p&gt; After the creation of replicated array pair perform discover replicated array pair devices operation.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="replicatedArrayPairSpec">Spec describing the new replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteArrayManager(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager array manager. Delete a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteArrayManagerWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager array manager. Delete a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteArrayManagerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager array manager. Delete a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteArrayManagerWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager array manager. Delete a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteReplicatedArrayPair(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager replicated array pair. Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteReplicatedArrayPairWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a Site Recovery Manager replicated array pair. Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteReplicatedArrayPairAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager replicated array pair. Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DeleteReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Site Recovery Manager replicated array pair. Delete a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverReplicatedArrayPairs(System.String,System.String,System.String)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverReplicatedArrayPairsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverReplicatedArrayPairsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverReplicatedArrayPairsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discovers storage arrays configured for replication by executing SRA command discoverArrays. Discovers storage arrays configured for replication by executing SRA command discoverArrays. IDs of discovered array must be unique across all array managers that use the same SRA.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverStorageDevices(System.String,System.String,System.String)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair. Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverStorageDevicesWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair. Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverStorageDevicesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair. Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.DiscoverStorageDevicesWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair. Discover storage devices and consistency groups of a Site Recovery Manager replicated array pair by calling command on a storage replication adapter. Perform discoveries and match source and target devices on both sites.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainReplicationGroups(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain. Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainReplicationGroupsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain. Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainReplicationGroupsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain. Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainReplicationGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain. Get information about all replication groups that are part of a VMware vSphere Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomains(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing. Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing. Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing. Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolFaultDomainInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetAllVvolFaultDomainsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing. Get information about all VMware vSphere Virtual Volumes (vVols) fault domains that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolFaultDomainInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManager(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager array manager. Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagerWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager array manager. Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <returns>ApiResponse of ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager array manager. Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ArrayManagerDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagerWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager array manager. Get information about a Site Recovery Manager array manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayManagerId">ID of an array manager.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ArrayManagerDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagers(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager array managers. Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagersWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager array managers. Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagersAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager array managers. Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ArrayManagerDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetArrayManagersWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager array managers. Get information about all Site Recovery Manager array managers that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ArrayManagerDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPair(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair. Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair. Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <returns>ApiResponse of ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair. Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedArrayPairDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a Site Recovery Manager replicated array pair. Get information about a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedArrayPairDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairs(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs. Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs. Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs. Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedArrayPairDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetReplicatedArrayPairsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all Site Recovery Manager replicated array pairs. Get information about all Site Recovery Manager replicated array pairs that are part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedArrayPairDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapter(System.String,System.String,System.String)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager. Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager. Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ApiResponse of StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager. Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageAdapterDetailsDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a storage replication adapter of a Site Recovery Manager. Get information about a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageAdapterDetailsDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterConnectionParams(System.String,System.String,System.String)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager. Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterConnectionParamsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager. Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <returns>ApiResponse of ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterConnectionParamsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager. Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ConnectionParamGroupDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapterConnectionParamsWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get connection parameters for a storage replication adapter of a Site Recovery Manager. Get connection parameters for a storage replication adapter of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="storageAdapterId">The ID of the storage replication adapter.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ConnectionParamGroupDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdapters(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager. Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdaptersWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager. Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdaptersAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager. Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageAdapterDetailsDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageAdaptersWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage replication adapters of a Site Recovery Manager. Get information about all storage replication adapters of a Site Recovery Manager that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageAdapterDetailsDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageDevices(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair. Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageDevicesWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair. Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageDevicesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair. Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StorageDevicesResponseDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetStorageDevicesWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about all storage devices of a Site Recovery Manager replicated array pair. Get information about all storage devices of a Site Recovery Manager replicated array pair that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StorageDevicesResponseDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomain(System.String,System.String,System.String)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing. Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <returns>VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing. Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <returns>ApiResponse of VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing. Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolFaultDomainInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing. Get details about a VMware vSphere Virtual Volumes (vVols) fault domain that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolFaultDomainInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainReplicationGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain. Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <returns>VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainReplicationGroupWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain. Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <returns>ApiResponse of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainReplicationGroupAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain. Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VvolReplicationGroupInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.GetVvolFaultDomainReplicationGroupWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a replication group that is part of a VMware Virtual Volumes fault domain. Get information about a replication group that is part of a VMware Virtual Volumes fault domain.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="domainId">The ID of the vSphere Virtual Volumes (vVols) fault domain that is part of the current pairing.</param>
            <param name="replicationGroupId">The ID of a VMware Virtual Volumes replication group.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VvolReplicationGroupInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.RetrieveUnassignedDatastoreGroups(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups. Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.RetrieveUnassignedDatastoreGroupsWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups. Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <returns>ApiResponse of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.RetrieveUnassignedDatastoreGroupsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups. Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreGroupInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ReplicationApi.RetrieveUnassignedDatastoreGroupsWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups. Retrieve the unassigned datastore groups that are part of a replicated array pair. You can include these datastore groups in the Array-Based Replication protection groups.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="srmId">ID of a Site Recovery Manager server.</param>
            <param name="arrayPairId">The ID of a replicated array pair.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="includeVmsInfo">If you want VMs info, this will lead to slower and bigger API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreGroupInfoDrResponseList)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IServerApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IServerApiSync.GetInfo">
            <summary>
            Information about the current Site Recovery Manager server.
            </summary>
            <remarks>
            Information about the current Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IServerApiSync.GetInfoWithHttpInfo">
            <summary>
            Information about the current Site Recovery Manager server.
            </summary>
            <remarks>
            Information about the current Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IServerApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IServerApiAsync.GetInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Information about the current Site Recovery Manager server.
            </summary>
            <remarks>
            Information about the current Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IServerApiAsync.GetInfoWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Information about the current Site Recovery Manager server.
            </summary>
            <remarks>
            Information about the current Site Recovery Manager server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ServerApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ServerApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ServerApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.ServerApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ServerApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ServerApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ServerApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ServerApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.ServerApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.GetInfo">
            <summary>
            Information about the current Site Recovery Manager server. Information about the current Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.GetInfoWithHttpInfo">
            <summary>
            Information about the current Site Recovery Manager server. Information about the current Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.GetInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Information about the current Site Recovery Manager server. Information about the current Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SrmInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ServerApi.GetInfoWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Information about the current Site Recovery Manager server. Information about the current Site Recovery Manager server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SrmInfoDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ITasksApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiSync.GetRecentTasksInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all the recent tasks.
            </summary>
            <remarks>
            Retrieve all the recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiSync.GetRecentTasksInfoWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all the recent tasks.
            </summary>
            <remarks>
            Retrieve all the recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiSync.GetTaskInfo(System.String)">
            <summary>
            Retrieve the task information.
            </summary>
            <remarks>
            Retrieve the task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiSync.GetTaskInfoWithHttpInfo(System.String)">
            <summary>
            Retrieve the task information.
            </summary>
            <remarks>
            Retrieve the task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ITasksApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiAsync.GetRecentTasksInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the recent tasks.
            </summary>
            <remarks>
            Retrieve all the recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiAsync.GetRecentTasksInfoWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the recent tasks.
            </summary>
            <remarks>
            Retrieve all the recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiAsync.GetTaskInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the task information.
            </summary>
            <remarks>
            Retrieve the task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.ITasksApiAsync.GetTaskInfoWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the task information.
            </summary>
            <remarks>
            Retrieve the task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.ITasksApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.TasksApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.TasksApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.TasksApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.TasksApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.TasksApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.TasksApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.TasksApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.TasksApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.TasksApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.TasksApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetRecentTasksInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all the recent tasks. Retrieve all the recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetRecentTasksInfoWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all the recent tasks. Retrieve all the recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetRecentTasksInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the recent tasks. Retrieve all the recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetRecentTasksInfoWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the recent tasks. Retrieve all the recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetTaskInfo(System.String)">
            <summary>
            Retrieve the task information. Retrieve the task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetTaskInfoWithHttpInfo(System.String)">
            <summary>
            Retrieve the task information. Retrieve the task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetTaskInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the task information. Retrieve the task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.TasksApi.GetTaskInfoWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the task information. Retrieve the task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of the task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IVcentersApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.BrowseVcenterComputeItem(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <remarks>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <returns>EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.BrowseVcenterComputeItemWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <remarks>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <returns>ApiResponse of EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetReplicatedVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server.
            </summary>
            <remarks>
            Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetReplicatedVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server.
            </summary>
            <remarks>
            Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcStoragePolicies(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve the vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcStoragePoliciesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve the vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcStoragePolicy(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s storage policy object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <returns>StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcStoragePolicyWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s storage policy object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <returns>ApiResponse of StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenter(System.String,System.String)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <remarks>
            Get information about a vCenter Server that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <returns>ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <remarks>
            Get information about a vCenter Server that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <returns>ApiResponse of ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterComputeInventory(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterComputeInventoryWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterComputeItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterComputeItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterDatastoreItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastore object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <returns>VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterDatastoreItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastore object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <returns>ApiResponse of VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterDatastores(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastores.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <returns>VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterDatastoresWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastores.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterNetworkInventory(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterNetworkInventoryWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterNetworkItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterNetworkItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterVmFolder(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s VM folder object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterVmFolderWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s VM folder object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterVmFolderInventory(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory.
            </summary>
            <remarks>
            Returns a list of children of a given folder by path.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenterVmFolderInventoryWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory.
            </summary>
            <remarks>
            Returns a list of children of a given folder by path.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcenters(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all vCenter Server instances in the pairing.
            </summary>
            <remarks>
            Get a list of all vCenter Server instances in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiSync.GetVcentersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all vCenter Server instances in the pairing.
            </summary>
            <remarks>
            Get a list of all vCenter Server instances in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ServerInfoDrResponseList</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IVcentersApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.BrowseVcenterComputeItemAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <remarks>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.BrowseVcenterComputeItemWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <remarks>
            Browse files and folders accessible to vCenter server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (EnvironmentBrowserDataDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetReplicatedVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server.
            </summary>
            <remarks>
            Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetReplicatedVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server.
            </summary>
            <remarks>
            Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmReplicationInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcStoragePoliciesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve the vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcStoragePoliciesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve the vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcStoragePolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s storage policy object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcStoragePolicyWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s storage policy object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <remarks>
            Get information about a vCenter Server that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <remarks>
            Get information about a vCenter Server that is part of a given pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterComputeInventoryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterComputeInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterComputeItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterComputeItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s compute object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterDatastoreItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastore object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterDatastoreItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastore object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterDatastoreItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterDatastoresAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastores.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastores.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterDatastoreItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterNetworkInventoryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterNetworkInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network inventory.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterNetworkItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterNetworkItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s network object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterVmFolderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s VM folder object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterVmFolderWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <remarks>
            Get information about the vCenter Server&#39;s VM folder object.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterVmFolderInventoryAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory.
            </summary>
            <remarks>
            Returns a list of children of a given folder by path.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcenterVmFolderInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory.
            </summary>
            <remarks>
            Returns a list of children of a given folder by path.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcentersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all vCenter Server instances in the pairing.
            </summary>
            <remarks>
            Get a list of all vCenter Server instances in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.IVcentersApiAsync.GetVcentersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all vCenter Server instances in the pairing.
            </summary>
            <remarks>
            Get a list of all vCenter Server instances in the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ServerInfoDrResponseList)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.IVcentersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Api.VcentersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.VcentersApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.VcentersApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.VcentersApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Api.VcentersApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.VcentersApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.VcentersApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.VcentersApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.VcentersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Api.VcentersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.BrowseVcenterComputeItem(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object. Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <returns>EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.BrowseVcenterComputeItemWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object. Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <returns>ApiResponse of EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.BrowseVcenterComputeItemAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object. Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of EnvironmentBrowserDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.BrowseVcenterComputeItemWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Browse files and folders accessible to vCenter server&#39;s compute object. Browse files and folders accessible to vCenter server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.Supported types:&lt;ul&gt;&lt;li&gt;ClusterComputeResource&lt;/li&gt;&lt;li&gt;ComputeResource&lt;/li&gt;&lt;li&gt;HostSystem&lt;/li&gt;&lt;li&gt;ResourcePool&lt;/li&gt;&lt;/ul&gt;</param>
            <param name="path">The path on the given datastore to browse. Leave empty for root node. Use &#39;/vmimages&#39; when browsing a host without datastore id passed as query param. (optional)</param>
            <param name="fileType">Filter result items by file type. (optional)</param>
            <param name="datastoreId">Id of the datastore which you must browse.. Leave empty when browsing hosts and in addition add &#39;/vmimages&#39; as value for path query param. (optional)</param>
            <param name="subFolders">Whether the datastore file system search should include the sub folders of the specified browse path. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (EnvironmentBrowserDataDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetReplicatedVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server. Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetReplicatedVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server. Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetReplicatedVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server. Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetReplicatedVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of VMs replicated by vSphere Replication in a given vCenter Server. Replicated VMs that are not protected by Site Recovery Manager can be used to create a protection group.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmReplicationInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePolicies(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies. Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePoliciesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies. Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePoliciesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies. Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePoliciesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the vCenter Server&#39;s storage policies. Retrieve the vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePolicy(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object. Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <returns>StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePolicyWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object. Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <returns>ApiResponse of StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object. Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcStoragePolicyWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s storage policy object. Get information about the vCenter Server&#39;s storage policy object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="storagePolicyId">The ID of a vCenter Server storage policy.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenter(System.String,System.String)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing. Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <returns>ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing. Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <returns>ApiResponse of ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing. Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a vCenter Server that is part of a given pairing. Get information about a vCenter Server that is part of a given pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeInventory(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory. Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeInventoryWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory. Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeInventoryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory. Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute inventory. Get information about the vCenter Server&#39;s compute inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the compute resource or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute object. Get information about the vCenter Server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s compute object. Get information about the vCenter Server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute object. Get information about the vCenter Server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterComputeItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s compute object. Get information about the vCenter Server&#39;s compute object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="computeId">The ID of a vCenter Server&#39;s compute object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoreItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object. Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <returns>VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoreItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object. Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <returns>ApiResponse of VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoreItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object. Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterDatastoreItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoreItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastore object. Get information about the vCenter Server&#39;s datastore object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="datastoreId">The ID of a vCenter Server&#39;s datastore object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterDatastoreItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastores(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastores. Get information about the vCenter Server&#39;s datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <returns>VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoresWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s datastores. Get information about the vCenter Server&#39;s datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoresAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastores. Get information about the vCenter Server&#39;s datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterDatastoreItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s datastores. Get information about the vCenter Server&#39;s datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">The path to the datastore or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterDatastoreItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkInventory(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory. Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkInventoryWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory. Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkInventoryAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory. Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network inventory. Get information about the vCenter Server&#39;s network inventory.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="path">A path to the network or the folder object. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkItem(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network object. Get information about the vCenter Server&#39;s network object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkItemWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s network object. Get information about the vCenter Server&#39;s network object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkItemAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network object. Get information about the vCenter Server&#39;s network object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterNetworkItemWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s network object. Get information about the vCenter Server&#39;s network object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="networkId">The ID of a vCenter Server&#39;s network object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolder(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object. Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <returns>VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object. Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object. Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder object. Get information about the vCenter Server&#39;s VM folder object.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="vmFolderId">The ID of a vCenter Server&#39;s VM folder object.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderInventory(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory. Returns a list of children of a given folder by path.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <returns>VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderInventoryWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory. Returns a list of children of a given folder by path.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <returns>ApiResponse of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderInventoryAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory. Returns a list of children of a given folder by path.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VcenterServerInventoryItemDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenterVmFolderInventoryWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the vCenter Server&#39;s VM folder inventory. Returns a list of children of a given folder by path.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="vcenterId">The ID of a vCenter server.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="path">Path to the VM folder. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VcenterServerInventoryItemDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcenters(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all vCenter Server instances in the pairing. Get a list of all vCenter Server instances in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcentersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all vCenter Server instances in the pairing. Get a list of all vCenter Server instances in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcentersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all vCenter Server instances in the pairing. Get a list of all vCenter Server instances in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Api.VcentersApi.GetVcentersWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all vCenter Server instances in the pairing. Get a list of all vCenter Server instances in the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of a pairing between this Site Recovery Manager server and remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ServerInfoDrResponseList)</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec">
            <summary>
            Array-based replication details for creation or modification of a protection group.&lt;p&gt;&lt;code&gt;replicatedArrayPair&lt;/code&gt; is the replicated array pair that holds underlying storage devices.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.ReplicatedArrayPair">
            <summary>
            ID of the replicated array pair.
            </summary>
            <value>ID of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.Datastores">
            <summary>
            List of replicated datastores to add to the protection group.&lt;ul&gt;&lt;li&gt;Virtual machines located on these datastores can be protected. Virtual machine location is defined by its home directory (the directory holding the .vmx file).&lt;/li&gt;&lt;li&gt;Any given replicated datastore can be part of only one protection group.&lt;/li&gt;&lt;li&gt;Datastores backed by storage devices combined in a consistency group must be added the same protection group.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>List of replicated datastores to add to the protection group.&lt;ul&gt;&lt;li&gt;Virtual machines located on these datastores can be protected. Virtual machine location is defined by its home directory (the directory holding the .vmx file).&lt;/li&gt;&lt;li&gt;Any given replicated datastore can be part of only one protection group.&lt;/li&gt;&lt;li&gt;Datastores backed by storage devices combined in a consistency group must be added the same protection group.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.Equals(VMware.Bindings.Srm.Model.AbrProtectionGroupSpec)">
            <summary>
            Returns true if AbrProtectionGroupSpec instances are equal
            </summary>
            <param name="input">Instance of AbrProtectionGroupSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbrProtectionGroupSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.AbstractOpenAPISchema">
            <summary>
             Abstract base class for oneOf, anyOf schemas in the OpenAPI specification
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.SerializerSettings">
            <summary>
             Custom JSON serializer
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.AdditionalPropertiesSerializerSettings">
            <summary>
             Custom JSON serializer for objects with additional properties
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.ActualInstance">
            <summary>
            Gets or Sets the actual instance
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.IsNullable">
            <summary>
            Gets or Sets IsNullable to indicate whether the instance is nullable
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.SchemaType">
            <summary>
            Gets or Sets the schema type, which can be either `oneOf` or `anyOf`
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AbstractOpenAPISchema.ToJson">
            <summary>
            Converts the instance into JSON string.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec">
            <summary>
            A list of datastores to be added to an existing Array-Based Replication protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.Datastores">
            <summary>
            A list of datastore group references. Datastore group is a set of replicated datastores.&lt;ul&gt;&lt;li&gt;Virtual machines located on these datastores can be protected. Virtual machine location is defined by its home directory (the directory that holds the .vmx file).&lt;/li&gt;&lt;li&gt;Any given replicated datastore can be part of only one protection group.&lt;/li&gt;&lt;li&gt;Datastores backed by storage devices combined in a consistency group must be added to the same protection group.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A list of datastore group references. Datastore group is a set of replicated datastores.&lt;ul&gt;&lt;li&gt;Virtual machines located on these datastores can be protected. Virtual machine location is defined by its home directory (the directory that holds the .vmx file).&lt;/li&gt;&lt;li&gt;Any given replicated datastore can be part of only one protection group.&lt;/li&gt;&lt;li&gt;Datastores backed by storage devices combined in a consistency group must be added to the same protection group.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.Equals(VMware.Bindings.Srm.Model.AddDatastoreGroupSpec)">
            <summary>
            Returns true if AddDatastoreGroupSpec instances are equal
            </summary>
            <param name="input">Instance of AddDatastoreGroupSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreGroupSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.AddDatastoreResult">
            <summary>
            Details about a datastore and an error message why the datastore cannot be set as placeholder datastore.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.AddDatastoreResult" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AddDatastoreResult.DatastoreId">
            <summary>
            The ID of the datastore that could not be used as a placeholder datastore.
            </summary>
            <value>The ID of the datastore that could not be used as a placeholder datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AddDatastoreResult.ErrorMsg">
            <summary>
            The error for this datastore.
            </summary>
            <value>The error for this datastore.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.Equals(VMware.Bindings.Srm.Model.AddDatastoreResult)">
            <summary>
            Returns true if AddDatastoreResult instances are equal
            </summary>
            <param name="input">Instance of AddDatastoreResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddDatastoreResult.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec">
            <summary>
            A list of datastores to be added as placeholder datastores.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.Datastores">
            <summary>
            Datastores to be added as placeholder datastores.
            </summary>
            <value>Datastores to be added as placeholder datastores.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.Equals(VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec)">
            <summary>
            Returns true if AddPlaceholderDatastoreSpec instances are equal
            </summary>
            <param name="input">Instance of AddPlaceholderDatastoreSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.AddPlaceholderDatastoreSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ArrayManager">
            <summary>
            Details about a Site Recovery Manager array manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ArrayManager" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManager.Name">
            <summary>
            Name of the array manager.
            </summary>
            <value>Name of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManager.Id">
            <summary>
            ID of the array manager.
            </summary>
            <value>ID of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManager.ReplicatedArrayPairs">
            <summary>
            List of replicated array pairs in which this array manager is paired.
            </summary>
            <value>List of replicated array pairs in which this array manager is paired.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManager.StorageArrays">
            <summary>
            List of storage arrays of the array manager.
            </summary>
            <value>List of storage arrays of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManager.StorageAdapter">
            <summary>
            Gets or Sets StorageAdapter
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.Equals(VMware.Bindings.Srm.Model.ArrayManager)">
            <summary>
            Returns true if ArrayManager instances are equal
            </summary>
            <param name="input">Instance of ArrayManager to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManager.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity">
            <summary>
            Details about a Site Recovery Manager array manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Name">
            <summary>
            Name of the array manager.
            </summary>
            <value>Name of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Id">
            <summary>
            ID of the array manager.
            </summary>
            <value>ID of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.ReplicatedArrayPairs">
            <summary>
            List of replicated array pairs in which this array manager is paired.
            </summary>
            <value>List of replicated array pairs in which this array manager is paired.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.StorageArrays">
            <summary>
            List of storage arrays of the array manager.
            </summary>
            <value>List of storage arrays of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.StorageAdapter">
            <summary>
            Gets or Sets StorageAdapter
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity)">
            <summary>
            Returns true if ArrayManagerDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ArrayManagerDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList">
            <summary>
            List of entities about: Details about a Site Recovery Manager array manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.Equals(VMware.Bindings.Srm.Model.ArrayManagerDrResponseList)">
            <summary>
            Returns true if ArrayManagerDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ArrayManagerDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ArrayManagerSpec">
            <summary>
            Spec to create an array manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ArrayManagerSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerSpec.Name">
            <summary>
            Name of the array manager.
            </summary>
            <value>Name of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerSpec.StorageAdapter">
            <summary>
            ID of the storage replication adapter (SRA) to connect to.
            </summary>
            <value>ID of the storage replication adapter (SRA) to connect to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ArrayManagerSpec.ConnectionParams">
            <summary>
            Array of connection parameters groups used to connect to a storage replication adapter (SRA).
            </summary>
            <value>Array of connection parameters groups used to connect to a storage replication adapter (SRA).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.Equals(VMware.Bindings.Srm.Model.ArrayManagerSpec)">
            <summary>
            Returns true if ArrayManagerSpec instances are equal
            </summary>
            <param name="input">Instance of ArrayManagerSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ArrayManagerSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo">
            <summary>
            Basic details about a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.Id">
            <summary>
            ID of the storage replication adapter (SRA).
            </summary>
            <value>ID of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo._Version">
            <summary>
            Version of the storage replication adapter (SRA).
            </summary>
            <value>Version of the storage replication adapter (SRA).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.Equals(VMware.Bindings.Srm.Model.BaseStorageAdapterInfo)">
            <summary>
            Returns true if BaseStorageAdapterInfo instances are equal
            </summary>
            <param name="input">Instance of BaseStorageAdapterInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.BaseStorageAdapterInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Callout">
            <summary>
            Details about a callout.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Callout.CalloutTypeEnum">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.CalloutTypeEnum.PROMPT">
            <summary>
            Enum PROMPT for value: PROMPT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.CalloutTypeEnum.RUNONVM">
            <summary>
            Enum RUNONVM for value: RUN_ON_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.CalloutTypeEnum.RUNONSRMSERVER">
            <summary>
            Enum RUNONSRMSERVER for value: RUN_ON_SRM_SERVER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.CalloutType">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Callout.StepTypeEnum">
            <summary>
            Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.StepTypeEnum.PREPOWERON">
            <summary>
            Enum PREPOWERON for value: PRE_POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.StepTypeEnum.POSTPOWERON">
            <summary>
            Enum POSTPOWERON for value: POST_POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Callout.StepTypeEnum.RECOVERYSTEP">
            <summary>
            Enum RECOVERYSTEP for value: RECOVERY_STEP
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.StepType">
            <summary>
            Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.Callout" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.Name">
            <summary>
            Name of the callout.
            </summary>
            <value>Name of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.Content">
            <summary>
            Content of the callout.
            </summary>
            <value>Content of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.TimeoutSeconds">
            <summary>
            Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.
            </summary>
            <value>Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Callout.Id">
            <summary>
            System ID of the callout. Empty string when the callout is about to be created.
            </summary>
            <value>System ID of the callout. Empty string when the callout is about to be created.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.Equals(VMware.Bindings.Srm.Model.Callout)">
            <summary>
            Returns true if Callout instances are equal
            </summary>
            <param name="input">Instance of Callout to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Callout.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutCreateSpec">
            <summary>
            A spec describing the new callout settings.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutCreateSpec.CalloutTypeEnum">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutCreateSpec.CalloutTypeEnum.PROMPT">
            <summary>
            Enum PROMPT for value: PROMPT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutCreateSpec.CalloutTypeEnum.RUNONVM">
            <summary>
            Enum RUNONVM for value: RUN_ON_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutCreateSpec.CalloutTypeEnum.RUNONSRMSERVER">
            <summary>
            Enum RUNONSRMSERVER for value: RUN_ON_SRM_SERVER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutCreateSpec.CalloutType">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CalloutCreateSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutCreateSpec.Name">
            <summary>
            Name of the callout.
            </summary>
            <value>Name of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutCreateSpec.Content">
            <summary>
            Content of the callout.
            </summary>
            <value>Content of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutCreateSpec.TimeoutSeconds">
            <summary>
            Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.
            </summary>
            <value>Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutCreateSpec.Position">
            <summary>
            A position in the current recovery steps list.&lt;p&gt;Zero-based.
            </summary>
            <value>A position in the current recovery steps list.&lt;p&gt;Zero-based.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.Equals(VMware.Bindings.Srm.Model.CalloutCreateSpec)">
            <summary>
            Returns true if CalloutCreateSpec instances are equal
            </summary>
            <param name="input">Instance of CalloutCreateSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutCreateSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutDrResponseEntity">
            <summary>
            Details about a callout.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.CalloutTypeEnum">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.CalloutTypeEnum.PROMPT">
            <summary>
            Enum PROMPT for value: PROMPT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.CalloutTypeEnum.RUNONVM">
            <summary>
            Enum RUNONVM for value: RUN_ON_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.CalloutTypeEnum.RUNONSRMSERVER">
            <summary>
            Enum RUNONSRMSERVER for value: RUN_ON_SRM_SERVER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.CalloutType">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.StepTypeEnum">
            <summary>
            Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.StepTypeEnum.PREPOWERON">
            <summary>
            Enum PREPOWERON for value: PRE_POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.StepTypeEnum.POSTPOWERON">
            <summary>
            Enum POSTPOWERON for value: POST_POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.StepTypeEnum.RECOVERYSTEP">
            <summary>
            Enum RECOVERYSTEP for value: RECOVERY_STEP
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.StepType">
            <summary>
            Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout step type.&lt;ul&gt;&lt;li&gt;PRE_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is configured, but before it is powered on.&lt;/li&gt;&lt;li&gt;POST_POWER_ON - The callout is converted into a job during recovery and executed after the recovery workload is powered on.&lt;/li&gt;&lt;li&gt;RECOVERY_STEP - Callout specified at any place during recovery workload.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CalloutDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Name">
            <summary>
            Name of the callout.
            </summary>
            <value>Name of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Content">
            <summary>
            Content of the callout.
            </summary>
            <value>Content of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.TimeoutSeconds">
            <summary>
            Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.
            </summary>
            <value>Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Id">
            <summary>
            System ID of the callout. Empty string when the callout is about to be created.
            </summary>
            <value>System ID of the callout. Empty string when the callout is about to be created.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Equals(VMware.Bindings.Srm.Model.CalloutDrResponseEntity)">
            <summary>
            Returns true if CalloutDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of CalloutDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutModifySpec">
            <summary>
            Modify spec for a callout.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CalloutModifySpec.CalloutTypeEnum">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutModifySpec.CalloutTypeEnum.PROMPT">
            <summary>
            Enum PROMPT for value: PROMPT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutModifySpec.CalloutTypeEnum.RUNONVM">
            <summary>
            Enum RUNONVM for value: RUN_ON_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.CalloutModifySpec.CalloutTypeEnum.RUNONSRMSERVER">
            <summary>
            Enum RUNONSRMSERVER for value: RUN_ON_SRM_SERVER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutModifySpec.CalloutType">
            <summary>
            Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Callout type.&lt;ul&gt;&lt;li&gt;PROMPT - If the callout is a prompt, it will pause the execution of the recovery script and will display a message until the user acknowledges it.&lt;/li&gt;&lt;li&gt;RUN_ON_VM - The callout must run inside the recovered VM.&lt;/li&gt;&lt;li&gt;RUN_ON_SRM_SERVER - The callout must run inside the Site Recovery Manager virtual machine.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CalloutModifySpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutModifySpec.Name">
            <summary>
            Name of the callout.
            </summary>
            <value>Name of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutModifySpec.Content">
            <summary>
            Content of the callout.
            </summary>
            <value>Content of the callout.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CalloutModifySpec.TimeoutSeconds">
            <summary>
            Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.
            </summary>
            <value>Time in seconds to wait until the command completes.&lt;p&gt;If the command is not complete when the timeout occurs, the child process will be stopped.&lt;p&gt;Applicable only when parameter &lt;code&gt;callout_type&lt;/code&gt; is &lt;code&gt;RUN_ON_VM&lt;/code&gt; or &lt;code&gt;RUN_ON_SRM_SERVER&lt;/code&gt;.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.Equals(VMware.Bindings.Srm.Model.CalloutModifySpec)">
            <summary>
            Returns true if CalloutModifySpec instances are equal
            </summary>
            <param name="input">Instance of CalloutModifySpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CalloutModifySpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CertificateWarning">
            <summary>
            Information about the certificate warning.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CertificateWarning" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CertificateWarning.ServerGuid">
            <summary>
            The server identifier to which this warning is about.
            </summary>
            <value>The server identifier to which this warning is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CertificateWarning.ServerUrl">
            <summary>
            The server url to which this warning is about.
            </summary>
            <value>The server url to which this warning is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CertificateWarning.Certificate">
            <summary>
            Gets or Sets Certificate
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.Equals(VMware.Bindings.Srm.Model.CertificateWarning)">
            <summary>
            Returns true if CertificateWarning instances are equal
            </summary>
            <param name="input">Instance of CertificateWarning to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CertificateWarning.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CleanupTestPlanSpec">
            <summary>
            A spec specifying test cleanup settings.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CleanupTestPlanSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.Forced">
            <summary>
            Whether to force the cleanup operation. If true, it makes best effort to complete, and could leak resources in the process (e.g. silently failing to delete a test-network, test-VM, etc.).
            </summary>
            <value>Whether to force the cleanup operation. If true, it makes best effort to complete, and could leak resources in the process (e.g. silently failing to delete a test-network, test-VM, etc.).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.Equals(VMware.Bindings.Srm.Model.CleanupTestPlanSpec)">
            <summary>
            Returns true if CleanupTestPlanSpec instances are equal
            </summary>
            <param name="input">Instance of CleanupTestPlanSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CleanupTestPlanSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter">
            <summary>
            Details about a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingStatusEnum">
            <summary>
            Last array ping status.&lt;ul&gt;&lt;li&gt;UNKNOWN&lt;/li&gt;&lt;li&gt;SUCCESS&lt;/li&gt;&lt;li&gt;FAILURE&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Last array ping status.&lt;ul&gt;&lt;li&gt;UNKNOWN&lt;/li&gt;&lt;li&gt;SUCCESS&lt;/li&gt;&lt;li&gt;FAILURE&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingStatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingStatusEnum.FAILURE">
            <summary>
            Enum FAILURE for value: FAILURE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingStatus">
            <summary>
            Last array ping status.&lt;ul&gt;&lt;li&gt;UNKNOWN&lt;/li&gt;&lt;li&gt;SUCCESS&lt;/li&gt;&lt;li&gt;FAILURE&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Last array ping status.&lt;ul&gt;&lt;li&gt;UNKNOWN&lt;/li&gt;&lt;li&gt;SUCCESS&lt;/li&gt;&lt;li&gt;FAILURE&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Id">
            <summary>
            ID of the storage replication adapter (SRA).
            </summary>
            <value>ID of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter._Version">
            <summary>
            Version of the storage replication adapter (SRA).
            </summary>
            <value>Version of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Name">
            <summary>
            Name of the storage replication adapter (SRA).
            </summary>
            <value>Name of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Vendor">
            <summary>
            Vendor of the storage replication adapter (SRA).
            </summary>
            <value>Vendor of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.VendorUrl">
            <summary>
            Vendor URL of the storage replication adapter (SRA).
            </summary>
            <value>Vendor URL of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PeerStorageAdapter">
            <summary>
            Gets or Sets PeerStorageAdapter
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.ConnectionSpecAddress">
            <summary>
            Connection address for this storage replication adapter provided by the user.
            </summary>
            <value>Connection address for this storage replication adapter provided by the user.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingFault">
            <summary>
            Fault occurred during the most recent array discovery, if any.
            </summary>
            <value>Fault occurred during the most recent array discovery, if any.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.PingDate">
            <summary>
            The start time of the most recent discovery of the storage devices, in milliseconds.
            </summary>
            <value>The start time of the most recent discovery of the storage devices, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Equals(VMware.Bindings.Srm.Model.ConfiguredStorageAdapter)">
            <summary>
            Returns true if ConfiguredStorageAdapter instances are equal
            </summary>
            <param name="input">Instance of ConfiguredStorageAdapter to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConfiguredStorageAdapter.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConnectionParam">
            <summary>
            Connection parameter used to connect to a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConnectionParam.TypeEnum">
            <summary>
            Type of connection parameter used to connect to a storage replication adapter (SRA):&lt;un&gt;&lt;li&gt;USER_NAME - User name.&lt;li&gt;PASSWORD - Password.&lt;li&gt;OPAQUE - Opaque.&lt;li&gt;ADDRESS - Address.&lt;/ul&gt;
            </summary>
            <value>Type of connection parameter used to connect to a storage replication adapter (SRA):&lt;un&gt;&lt;li&gt;USER_NAME - User name.&lt;li&gt;PASSWORD - Password.&lt;li&gt;OPAQUE - Opaque.&lt;li&gt;ADDRESS - Address.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConnectionParam.TypeEnum.USERNAME">
            <summary>
            Enum USERNAME for value: USER_NAME
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConnectionParam.TypeEnum.PASSWORD">
            <summary>
            Enum PASSWORD for value: PASSWORD
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConnectionParam.TypeEnum.OPAQUE">
            <summary>
            Enum OPAQUE for value: OPAQUE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ConnectionParam.TypeEnum.ADDRESS">
            <summary>
            Enum ADDRESS for value: ADDRESS
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Type">
            <summary>
            Type of connection parameter used to connect to a storage replication adapter (SRA):&lt;un&gt;&lt;li&gt;USER_NAME - User name.&lt;li&gt;PASSWORD - Password.&lt;li&gt;OPAQUE - Opaque.&lt;li&gt;ADDRESS - Address.&lt;/ul&gt;
            </summary>
            <value>Type of connection parameter used to connect to a storage replication adapter (SRA):&lt;un&gt;&lt;li&gt;USER_NAME - User name.&lt;li&gt;PASSWORD - Password.&lt;li&gt;OPAQUE - Opaque.&lt;li&gt;ADDRESS - Address.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ConnectionParam" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Key">
            <summary>
            Key of the connection parameter.
            </summary>
            <value>Key of the connection parameter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Name">
            <summary>
            Name of the connection parameter.
            </summary>
            <value>Name of the connection parameter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Hint">
            <summary>
            Hint of the connection parameter.
            </summary>
            <value>Hint of the connection parameter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Value">
            <summary>
            Value of the connection parameter.
            </summary>
            <value>Value of the connection parameter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.Optional">
            <summary>
            Denotes if the connection parameter is optional.
            </summary>
            <value>Denotes if the connection parameter is optional.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParam.PasswordParam">
            <summary>
            Denotes if the connection parameter is a password
            </summary>
            <value>Denotes if the connection parameter is a password</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.Equals(VMware.Bindings.Srm.Model.ConnectionParam)">
            <summary>
            Returns true if ConnectionParam instances are equal
            </summary>
            <param name="input">Instance of ConnectionParam to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParam.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConnectionParamGroup">
            <summary>
            Connection parameters group used to connect to a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ConnectionParamGroup" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroup.Name">
            <summary>
            Name of the connection parameters group.
            </summary>
            <value>Name of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroup.Hint">
            <summary>
            Hint of the connection parameters group.
            </summary>
            <value>Hint of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroup.Key">
            <summary>
            Key of the connection parameters group.
            </summary>
            <value>Key of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroup.ConnectionParams">
            <summary>
            Array of connection parameters used to connect to a storage replication adapter (SRA).
            </summary>
            <value>Array of connection parameters used to connect to a storage replication adapter (SRA).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.Equals(VMware.Bindings.Srm.Model.ConnectionParamGroup)">
            <summary>
            Returns true if ConnectionParamGroup instances are equal
            </summary>
            <param name="input">Instance of ConnectionParamGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroup.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity">
            <summary>
            Connection parameters group used to connect to a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Name">
            <summary>
            Name of the connection parameters group.
            </summary>
            <value>Name of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Hint">
            <summary>
            Hint of the connection parameters group.
            </summary>
            <value>Hint of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Key">
            <summary>
            Key of the connection parameters group.
            </summary>
            <value>Key of the connection parameters group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.ConnectionParams">
            <summary>
            Array of connection parameters used to connect to a storage replication adapter (SRA).
            </summary>
            <value>Array of connection parameters used to connect to a storage replication adapter (SRA).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity)">
            <summary>
            Returns true if ConnectionParamGroupDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ConnectionParamGroupDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList">
            <summary>
            List of entities about: Connection parameters group used to connect to a storage replication adapter (SRA).
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.Equals(VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList)">
            <summary>
            Returns true if ConnectionParamGroupDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ConnectionParamGroupDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ConnectionParamGroupDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.CreateFolderSpec">
            <summary>
            A spec to create a folder.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.CreateFolderSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CreateFolderSpec.Name">
            <summary>
            The name of the folder to create. The name must be unique amongst the peer children nodes.
            </summary>
            <value>The name of the folder to create. The name must be unique amongst the peer children nodes.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.CreateFolderSpec.Location">
            <summary>
            Target location where the recovery plan folder will be placed. If not specified - the root folder will be used.
            </summary>
            <value>Target location where the recovery plan folder will be placed. If not specified - the root folder will be used.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.Equals(VMware.Bindings.Srm.Model.CreateFolderSpec)">
            <summary>
            Returns true if CreateFolderSpec instances are equal
            </summary>
            <param name="input">Instance of CreateFolderSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.CreateFolderSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreCapacityDetails">
            <summary>
            The capacity data for a datastore.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreCapacityDetails" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.TotalCapacity">
            <summary>
            The total capacity.
            </summary>
            <value>The total capacity.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.UsedSpace">
            <summary>
            The used space.
            </summary>
            <value>The used space.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.Equals(VMware.Bindings.Srm.Model.DatastoreCapacityDetails)">
            <summary>
            Returns true if DatastoreCapacityDetails instances are equal
            </summary>
            <param name="input">Instance of DatastoreCapacityDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreCapacityDetails.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails">
            <summary>
            Details of a datastore of a datastore group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueTypeEnum">
            <summary>
            Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueTypeEnum.NONE">
            <summary>
            Enum NONE for value: NONE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueTypeEnum.MISSINGPROTECTION">
            <summary>
            Enum MISSINGPROTECTION for value: MISSING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueTypeEnum.CONFLICT">
            <summary>
            Enum CONFLICT for value: CONFLICT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueTypeEnum.NOTREPLICATED">
            <summary>
            Enum NOTREPLICATED for value: NOT_REPLICATED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.IssueType">
            <summary>
            Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.Id">
            <summary>
            An ID of the datastore.
            </summary>
            <value>An ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.Name">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.ConflictProtectionGroup">
            <summary>
            An ID of the conflict protection group, if any. &lt;p&gt;Only available when &lt;code&gt;issueType&lt;/code&gt; is CONFLICT.
            </summary>
            <value>An ID of the conflict protection group, if any. &lt;p&gt;Only available when &lt;code&gt;issueType&lt;/code&gt; is CONFLICT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.ConflictProtectionGroupName">
            <summary>
            The name of the protection group this entity is in conflict with.&lt;p&gt;Only available when &lt;code&gt;issueType&lt;/code&gt; is CONFLICT.
            </summary>
            <value>The name of the protection group this entity is in conflict with.&lt;p&gt;Only available when &lt;code&gt;issueType&lt;/code&gt; is CONFLICT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.CapacityDetails">
            <summary>
            Gets or Sets CapacityDetails
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.Equals(VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails)">
            <summary>
            Returns true if DatastoreGroupDatastoreDetails instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupDatastoreDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupDatastoreDetails.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupInfo">
            <summary>
            Information about a datastore group. Available for Array-Based Replication protection groups.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupInfo.StatusEnum">
            <summary>
            A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfo.StatusEnum.UNASSIGNED">
            <summary>
            Enum UNASSIGNED for value: UNASSIGNED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfo.StatusEnum.COMPLETE">
            <summary>
            Enum COMPLETE for value: COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfo.StatusEnum.INCOMPLETE">
            <summary>
            Enum INCOMPLETE for value: INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfo.StatusEnum.SPLIT">
            <summary>
            Enum SPLIT for value: SPLIT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Status">
            <summary>
            A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Id">
            <summary>
            An identifier of the datastore group.
            </summary>
            <value>An identifier of the datastore group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.ArrayPair">
            <summary>
            An ID of the array pair.
            </summary>
            <value>An ID of the array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Datastores">
            <summary>
            A list of details of the datastores that are part of this datastore group.
            </summary>
            <value>A list of details of the datastores that are part of this datastore group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.VmInfos">
            <summary>
            A list of virtual machines in this datastore group. Contains all virtual machines with home directory on one of the datastores in the group.
            </summary>
            <value>A list of virtual machines in this datastore group. Contains all virtual machines with home directory on one of the datastores in the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.PotentialVmToAddInfos">
            <summary>
            A list of VM IDs that are part of the datastore group, but are not part of the Protection Group. We can have such VMs when a new disk is added to a VM that is already protected in the group, and afterwards it spans a datastore that is not currently protected in the protection group.
            </summary>
            <value>A list of VM IDs that are part of the datastore group, but are not part of the Protection Group. We can have such VMs when a new disk is added to a VM that is already protected in the group, and afterwards it spans a datastore that is not currently protected in the protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.RdmKeys">
            <summary>
            A list of RDMs in this datastore group. Contains all RDM devices backed by replicated LUNs and attached to virtual machines from this group.
            </summary>
            <value>A list of RDMs in this datastore group. Contains all RDM devices backed by replicated LUNs and attached to virtual machines from this group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfo.ProtectionGroups">
            <summary>
            A list of protection groups containing datastores from this datastore group.&lt;p&gt;The following guarantees are made depending on the status of the group:&lt;ul&gt;&lt;li&gt;&lt;code&gt;UNASSIGNED&lt;/code&gt; - This list is empty.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETE&lt;/code&gt; or &lt;code&gt;INCOMPLETE&lt;/code&gt; - This list contains exactly one group.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SPLIT&lt;/code&gt; - This list contains two or more groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A list of protection groups containing datastores from this datastore group.&lt;p&gt;The following guarantees are made depending on the status of the group:&lt;ul&gt;&lt;li&gt;&lt;code&gt;UNASSIGNED&lt;/code&gt; - This list is empty.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETE&lt;/code&gt; or &lt;code&gt;INCOMPLETE&lt;/code&gt; - This list contains exactly one group.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SPLIT&lt;/code&gt; - This list contains two or more groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Equals(VMware.Bindings.Srm.Model.DatastoreGroupInfo)">
            <summary>
            Returns true if DatastoreGroupInfo instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity">
            <summary>
            Information about a datastore group. Available for Array-Based Replication protection groups.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.StatusEnum">
            <summary>
            A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.StatusEnum.UNASSIGNED">
            <summary>
            Enum UNASSIGNED for value: UNASSIGNED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.StatusEnum.COMPLETE">
            <summary>
            Enum COMPLETE for value: COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.StatusEnum.INCOMPLETE">
            <summary>
            Enum INCOMPLETE for value: INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.StatusEnum.SPLIT">
            <summary>
            Enum SPLIT for value: SPLIT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Status">
            <summary>
            A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A status of a datastore group:&lt;ul&gt;&lt;li&gt;UNASSIGNED - No datastore is part of any protection group yet.&lt;/li&gt;&lt;li&gt;COMPLETE - All datastores are part of a single protection group.&lt;/li&gt;&lt;li&gt;INCOMPLETE - One or more datastores are missing from the protection group and need to be added.&lt;/li&gt;&lt;li&gt;SPLIT - Different datastores are part of different protection groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Id">
            <summary>
            An identifier of the datastore group.
            </summary>
            <value>An identifier of the datastore group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.ArrayPair">
            <summary>
            An ID of the array pair.
            </summary>
            <value>An ID of the array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Datastores">
            <summary>
            A list of details of the datastores that are part of this datastore group.
            </summary>
            <value>A list of details of the datastores that are part of this datastore group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.VmInfos">
            <summary>
            A list of virtual machines in this datastore group. Contains all virtual machines with home directory on one of the datastores in the group.
            </summary>
            <value>A list of virtual machines in this datastore group. Contains all virtual machines with home directory on one of the datastores in the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.PotentialVmToAddInfos">
            <summary>
            A list of VM IDs that are part of the datastore group, but are not part of the Protection Group. We can have such VMs when a new disk is added to a VM that is already protected in the group, and afterwards it spans a datastore that is not currently protected in the protection group.
            </summary>
            <value>A list of VM IDs that are part of the datastore group, but are not part of the Protection Group. We can have such VMs when a new disk is added to a VM that is already protected in the group, and afterwards it spans a datastore that is not currently protected in the protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.RdmKeys">
            <summary>
            A list of RDMs in this datastore group. Contains all RDM devices backed by replicated LUNs and attached to virtual machines from this group.
            </summary>
            <value>A list of RDMs in this datastore group. Contains all RDM devices backed by replicated LUNs and attached to virtual machines from this group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.ProtectionGroups">
            <summary>
            A list of protection groups containing datastores from this datastore group.&lt;p&gt;The following guarantees are made depending on the status of the group:&lt;ul&gt;&lt;li&gt;&lt;code&gt;UNASSIGNED&lt;/code&gt; - This list is empty.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETE&lt;/code&gt; or &lt;code&gt;INCOMPLETE&lt;/code&gt; - This list contains exactly one group.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SPLIT&lt;/code&gt; - This list contains two or more groups.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>A list of protection groups containing datastores from this datastore group.&lt;p&gt;The following guarantees are made depending on the status of the group:&lt;ul&gt;&lt;li&gt;&lt;code&gt;UNASSIGNED&lt;/code&gt; - This list is empty.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETE&lt;/code&gt; or &lt;code&gt;INCOMPLETE&lt;/code&gt; - This list contains exactly one group.&lt;/li&gt;&lt;li&gt;&lt;code&gt;SPLIT&lt;/code&gt; - This list contains two or more groups.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity)">
            <summary>
            Returns true if DatastoreGroupInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList">
            <summary>
            List of entities about: Information about a datastore group. Available for Array-Based Replication protection groups.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList)">
            <summary>
            Returns true if DatastoreGroupInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo">
            <summary>
            Information about the RDM found in a datastore group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueTypeEnum">
            <summary>
            Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueTypeEnum.NONE">
            <summary>
            Enum NONE for value: NONE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueTypeEnum.MISSINGPROTECTION">
            <summary>
            Enum MISSINGPROTECTION for value: MISSING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueTypeEnum.CONFLICT">
            <summary>
            Enum CONFLICT for value: CONFLICT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueTypeEnum.NOTREPLICATED">
            <summary>
            Enum NOTREPLICATED for value: NOT_REPLICATED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.IssueType">
            <summary>
            Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection group configuration issue types:&lt;ul&gt;&lt;li&gt;NONE: No configuration is present.&lt;/li&gt;&lt;li&gt;MISSING_PROTECTION: Unassigned datastore needs to be added to the protection group.&lt;/li&gt;&lt;li&gt;CONFLICT: Datastore is missing from the protection group but cannot be included because it is currently protected in a different protection group.&lt;/li&gt;&lt;li&gt;NOT_REPLICATED: Cannot protect datastore because underlying storage devices are not configured for replication.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.Id">
            <summary>
            An identifier of the entity.
            </summary>
            <value>An identifier of the entity.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.Name">
            <summary>
            A name of the entity.
            </summary>
            <value>A name of the entity.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.Equals(VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo)">
            <summary>
            Returns true if DatastoreGroupRdmInfo instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupRdmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupRdmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo">
            <summary>
            Details about VM in the context of a datastore group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionStatusEnum">
            <summary>
            Protection status of a VM in the context of the current datastore group:&lt;ul&gt;&lt;li&gt;PROTECTED&lt;/li&gt;&lt;li&gt;NOT_PROTECTED&lt;/li&gt;&lt;li&gt;NOT_REPLICATED&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection status of a VM in the context of the current datastore group:&lt;ul&gt;&lt;li&gt;PROTECTED&lt;/li&gt;&lt;li&gt;NOT_PROTECTED&lt;/li&gt;&lt;li&gt;NOT_REPLICATED&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionStatusEnum.PROTECTED">
            <summary>
            Enum PROTECTED for value: PROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionStatusEnum.NOTPROTECTED">
            <summary>
            Enum NOTPROTECTED for value: NOT_PROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionStatusEnum.NOTREPLICATED">
            <summary>
            Enum NOTREPLICATED for value: NOT_REPLICATED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionStatus">
            <summary>
            Protection status of a VM in the context of the current datastore group:&lt;ul&gt;&lt;li&gt;PROTECTED&lt;/li&gt;&lt;li&gt;NOT_PROTECTED&lt;/li&gt;&lt;li&gt;NOT_REPLICATED&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection status of a VM in the context of the current datastore group:&lt;ul&gt;&lt;li&gt;PROTECTED&lt;/li&gt;&lt;li&gt;NOT_PROTECTED&lt;/li&gt;&lt;li&gt;NOT_REPLICATED&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Datastores">
            <summary>
            Datastores that have disks of this VM.
            </summary>
            <value>Datastores that have disks of this VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ProtectionIssues">
            <summary>
            A list of the protection issues with this VM in the context of the current datastore group.
            </summary>
            <value>A list of the protection issues with this VM in the context of the current datastore group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Equals(VMware.Bindings.Srm.Model.DatastoreGroupVmInfo)">
            <summary>
            Returns true if DatastoreGroupVmInfo instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupVmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue">
            <summary>
            Protection issue for a VM in a datastore group
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum">
            <summary>
            Protection issue type of a VM that is part of s datastore group in an Array-Based Replication protection group.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;DATASTORE_MISSING_PROTECTION - Virtual machine has a disk on the replicated datastore outside of the protection group&lt;/li&gt;&lt;li&gt;DATASTORE_PROTECTION_CONFLICT - Virtual machine has a disk on the replicated datastore that is part of a different protection group&lt;/li&gt;&lt;li&gt;DATASTORE_NOT_REPLICATED - Virtual machine uses a non-replicated datastore protected by the protection group. The non-replicated datastore is not the VM&#39;s home datastore.&lt;/li&gt;&lt;li&gt;VM_HOME_NOT_REPLICATED - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s device uses RDM backing&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_NON_DATASTORE_BACKING - Virtual disk&#39;s backing file does not reside on a datastore&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection issue type of a VM that is part of s datastore group in an Array-Based Replication protection group.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;DATASTORE_MISSING_PROTECTION - Virtual machine has a disk on the replicated datastore outside of the protection group&lt;/li&gt;&lt;li&gt;DATASTORE_PROTECTION_CONFLICT - Virtual machine has a disk on the replicated datastore that is part of a different protection group&lt;/li&gt;&lt;li&gt;DATASTORE_NOT_REPLICATED - Virtual machine uses a non-replicated datastore protected by the protection group. The non-replicated datastore is not the VM&#39;s home datastore.&lt;/li&gt;&lt;li&gt;VM_HOME_NOT_REPLICATED - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s device uses RDM backing&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_NON_DATASTORE_BACKING - Virtual disk&#39;s backing file does not reside on a datastore&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.DATASTOREMISSINGPROTECTION">
            <summary>
            Enum DATASTOREMISSINGPROTECTION for value: DATASTORE_MISSING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.DATASTOREPROTECTIONCONFLICT">
            <summary>
            Enum DATASTOREPROTECTIONCONFLICT for value: DATASTORE_PROTECTION_CONFLICT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.DATASTORENOTREPLICATED">
            <summary>
            Enum DATASTORENOTREPLICATED for value: DATASTORE_NOT_REPLICATED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.VMHOMENOTREPLICATED">
            <summary>
            Enum VMHOMENOTREPLICATED for value: VM_HOME_NOT_REPLICATED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.VMDEVICEUSINGRDMBACKING">
            <summary>
            Enum VMDEVICEUSINGRDMBACKING for value: VM_DEVICE_USING_RDM_BACKING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.TypeEnum.VMDEVICEUSINGNONDATASTOREBACKING">
            <summary>
            Enum VMDEVICEUSINGNONDATASTOREBACKING for value: VM_DEVICE_USING_NON_DATASTORE_BACKING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.Type">
            <summary>
            Protection issue type of a VM that is part of s datastore group in an Array-Based Replication protection group.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;DATASTORE_MISSING_PROTECTION - Virtual machine has a disk on the replicated datastore outside of the protection group&lt;/li&gt;&lt;li&gt;DATASTORE_PROTECTION_CONFLICT - Virtual machine has a disk on the replicated datastore that is part of a different protection group&lt;/li&gt;&lt;li&gt;DATASTORE_NOT_REPLICATED - Virtual machine uses a non-replicated datastore protected by the protection group. The non-replicated datastore is not the VM&#39;s home datastore.&lt;/li&gt;&lt;li&gt;VM_HOME_NOT_REPLICATED - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s device uses RDM backing&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_NON_DATASTORE_BACKING - Virtual disk&#39;s backing file does not reside on a datastore&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Protection issue type of a VM that is part of s datastore group in an Array-Based Replication protection group.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;DATASTORE_MISSING_PROTECTION - Virtual machine has a disk on the replicated datastore outside of the protection group&lt;/li&gt;&lt;li&gt;DATASTORE_PROTECTION_CONFLICT - Virtual machine has a disk on the replicated datastore that is part of a different protection group&lt;/li&gt;&lt;li&gt;DATASTORE_NOT_REPLICATED - Virtual machine uses a non-replicated datastore protected by the protection group. The non-replicated datastore is not the VM&#39;s home datastore.&lt;/li&gt;&lt;li&gt;VM_HOME_NOT_REPLICATED - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s home datastore is no longer replicated&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_RDM_BACKING - Virtual machine&#39;s device uses RDM backing&lt;/li&gt;&lt;li&gt;VM_DEVICE_USING_NON_DATASTORE_BACKING - Virtual disk&#39;s backing file does not reside on a datastore&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.DatastoreName">
            <summary>
            The name of the datastore that is related to the issue.
            </summary>
            <value>The name of the datastore that is related to the issue.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.DeviceId">
            <summary>
            The device key of the virtual device. Applicable for some issues.
            </summary>
            <value>The device key of the virtual device. Applicable for some issues.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.DiskKey">
            <summary>
            The disk key of the virtual disk. Applicable for some issues.
            </summary>
            <value>The disk key of the virtual disk. Applicable for some issues.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.Datastore">
            <summary>
            The ID of the datastore that is related to the issue.
            </summary>
            <value>The ID of the datastore that is related to the issue.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.Equals(VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue)">
            <summary>
            Returns true if DatastoreGroupVmProtectionIssue instances are equal
            </summary>
            <param name="input">Instance of DatastoreGroupVmProtectionIssue to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreGroupVmProtectionIssue.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DatastoreNameDetails">
            <summary>
            Data object with datastore identifier and name.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DatastoreNameDetails" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreNameDetails.Id">
            <summary>
            Identifier of the datastore.
            </summary>
            <value>Identifier of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DatastoreNameDetails.Name">
            <summary>
            Name of the datastore.
            </summary>
            <value>Name of the datastore.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.Equals(VMware.Bindings.Srm.Model.DatastoreNameDetails)">
            <summary>
            Returns true if DatastoreNameDetails instances are equal
            </summary>
            <param name="input">Instance of DatastoreNameDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DatastoreNameDetails.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVm">
            <summary>
            Details about a dependent protected VM in the context of a given protected VM.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVm.StatusEnum">
            <summary>
            Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.StatusEnum.NOTINPLAN">
            <summary>
            Enum NOTINPLAN for value: NOT_IN_PLAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.StatusEnum.LOWERPRIORITY">
            <summary>
            Enum LOWERPRIORITY for value: LOWER_PRIORITY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.StatusEnum.HIGHERPRIORITY">
            <summary>
            Enum HIGHERPRIORITY for value: HIGHER_PRIORITY
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.Status">
            <summary>
            Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVm.PriorityGroupEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.PriorityGroup">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DependentVm" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVm.ProtectionGroupName">
            <summary>
            Name of the protection group that is protecting the VM.
            </summary>
            <value>Name of the protection group that is protecting the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.Equals(VMware.Bindings.Srm.Model.DependentVm)">
            <summary>
            Returns true if DependentVm instances are equal
            </summary>
            <param name="input">Instance of DependentVm to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVm.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity">
            <summary>
            Details about a dependent protected VM in the context of a given protected VM.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.StatusEnum">
            <summary>
            Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.StatusEnum.NOTINPLAN">
            <summary>
            Enum NOTINPLAN for value: NOT_IN_PLAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.StatusEnum.LOWERPRIORITY">
            <summary>
            Enum LOWERPRIORITY for value: LOWER_PRIORITY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.StatusEnum.HIGHERPRIORITY">
            <summary>
            Enum HIGHERPRIORITY for value: HIGHER_PRIORITY
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Status">
            <summary>
            Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VM status.&lt;br&gt;&lt;ul&gt;&lt;li&gt;OK - The dependent protected VM and the source protected VM are in the same plan and in the same priority group&lt;/li&gt;&lt;li&gt;NOT_IN_PLAN - The dependent protected VM and the source protected VM are in different recovery plans&lt;/li&gt;&lt;li&gt;LOWER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a lower priority group&lt;/li&gt;&lt;li&gt;HIGHER_PRIORITY - The VMs are in the same recovery plan, but the dependent VM is in a higher priority group&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroupEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.PriorityGroup">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.ProtectionGroupName">
            <summary>
            Name of the protection group that is protecting the VM.
            </summary>
            <value>Name of the protection group that is protecting the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Equals(VMware.Bindings.Srm.Model.DependentVmDrResponseEntity)">
            <summary>
            Returns true if DependentVmDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of DependentVmDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmDrResponseList">
            <summary>
            List of entities about: Details about a dependent protected VM in the context of a given protected VM.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DependentVmDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.Equals(VMware.Bindings.Srm.Model.DependentVmDrResponseList)">
            <summary>
            Returns true if DependentVmDrResponseList instances are equal
            </summary>
            <param name="input">Instance of DependentVmDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmSpec">
            <summary>
            A spec describing a list of dependent VMs.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DependentVmSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmSpec.DependentVms">
            <summary>
            A list of dependent VM IDs.
            </summary>
            <value>A list of dependent VM IDs.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.Equals(VMware.Bindings.Srm.Model.DependentVmSpec)">
            <summary>
            Returns true if DependentVmSpec instances are equal
            </summary>
            <param name="input">Instance of DependentVmSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmsValidationResult">
            <summary>
            Validation result when checking if dependent VMs selection is valid.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DependentVmsValidationResult.IssueTypeEnum">
            <summary>
            Dependent VMs validation issue details.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;CYCLE_DETECTED - A cycle was found in the dependency list.&lt;/li&gt;&lt;li&gt;NO_PERMISSION - Missing permission to validate dependent VMs.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VMs validation issue details.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;CYCLE_DETECTED - A cycle was found in the dependency list.&lt;/li&gt;&lt;li&gt;NO_PERMISSION - Missing permission to validate dependent VMs.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmsValidationResult.IssueTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmsValidationResult.IssueTypeEnum.CYCLEDETECTED">
            <summary>
            Enum CYCLEDETECTED for value: CYCLE_DETECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DependentVmsValidationResult.IssueTypeEnum.NOPERMISSION">
            <summary>
            Enum NOPERMISSION for value: NO_PERMISSION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmsValidationResult.IssueType">
            <summary>
            Dependent VMs validation issue details.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;CYCLE_DETECTED - A cycle was found in the dependency list.&lt;/li&gt;&lt;li&gt;NO_PERMISSION - Missing permission to validate dependent VMs.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Dependent VMs validation issue details.&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown issue&lt;/li&gt;&lt;li&gt;CYCLE_DETECTED - A cycle was found in the dependency list.&lt;/li&gt;&lt;li&gt;NO_PERMISSION - Missing permission to validate dependent VMs.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DependentVmsValidationResult" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DependentVmsValidationResult.Valid">
            <summary>
            Whether the validation is successful or not
            </summary>
            <value>Whether the validation is successful or not</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.Equals(VMware.Bindings.Srm.Model.DependentVmsValidationResult)">
            <summary>
            Returns true if DependentVmsValidationResult instances are equal
            </summary>
            <param name="input">Instance of DependentVmsValidationResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DependentVmsValidationResult.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DnsSetting">
            <summary>
            DNS settings
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.DnsSetting.TypeEnum">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DnsSetting.TypeEnum.DHCP">
            <summary>
            Enum DHCP for value: DHCP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.DnsSetting.TypeEnum.STATIC">
            <summary>
            Enum STATIC for value: STATIC
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DnsSetting.Type">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.DnsSetting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DnsSetting.PreferredServer">
            <summary>
            The address for the preferred DNS server.
            </summary>
            <value>The address for the preferred DNS server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DnsSetting.AlternateServer">
            <summary>
            The address of the alternate DNS server.
            </summary>
            <value>The address of the alternate DNS server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.DnsSetting.Suffixes">
            <summary>
            DNS Suffixes for this DNS setting. The suffixes should be listed in order of preference.
            </summary>
            <value>DNS Suffixes for this DNS setting. The suffixes should be listed in order of preference.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.Equals(VMware.Bindings.Srm.Model.DnsSetting)">
            <summary>
            Returns true if DnsSetting instances are equal
            </summary>
            <param name="input">Instance of DnsSetting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.DnsSetting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.EnvironmentBrowserData">
            <summary>
            The result of the browsing datastore request.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum">
            <summary>
            File type.
            </summary>
            <value>File type.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.FLOPPYIMAGE">
            <summary>
            Enum FLOPPYIMAGE for value: FLOPPY_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.VMDISK">
            <summary>
            Enum VMDISK for value: VM_DISK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.VMLOG">
            <summary>
            Enum VMLOG for value: VM_LOG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.VMNVRAM">
            <summary>
            Enum VMNVRAM for value: VM_NVRAM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.ISOIMAGE">
            <summary>
            Enum ISOIMAGE for value: ISO_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.VMSNAPSHOT">
            <summary>
            Enum VMSNAPSHOT for value: VM_SNAPSHOT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.TEMPLATEVMCONFIG">
            <summary>
            Enum TEMPLATEVMCONFIG for value: TEMPLATE_VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.VMCONFIG">
            <summary>
            Enum VMCONFIG for value: VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserData.TypeEnum.FILE">
            <summary>
            Enum FILE for value: FILE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Type">
            <summary>
            File type.
            </summary>
            <value>File type.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.EnvironmentBrowserData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Name">
            <summary>
            File name
            </summary>
            <value>File name</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Path">
            <summary>
            File path used by the user to perform browse operations.
            </summary>
            <value>File path used by the user to perform browse operations.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Owner">
            <summary>
            File owner name.
            </summary>
            <value>File owner name.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Size">
            <summary>
            File size
            </summary>
            <value>File size</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Modification">
            <summary>
            Last file modification date time in milliseconds.
            </summary>
            <value>Last file modification date time in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.DatastoreName">
            <summary>
            Datastore name.
            </summary>
            <value>Datastore name.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserData.DatastoreId">
            <summary>
            Datastore id.
            </summary>
            <value>Datastore id.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Equals(VMware.Bindings.Srm.Model.EnvironmentBrowserData)">
            <summary>
            Returns true if EnvironmentBrowserData instances are equal
            </summary>
            <param name="input">Instance of EnvironmentBrowserData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity">
            <summary>
            The result of the browsing datastore request.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum">
            <summary>
            File type.
            </summary>
            <value>File type.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.FLOPPYIMAGE">
            <summary>
            Enum FLOPPYIMAGE for value: FLOPPY_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.VMDISK">
            <summary>
            Enum VMDISK for value: VM_DISK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.VMLOG">
            <summary>
            Enum VMLOG for value: VM_LOG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.VMNVRAM">
            <summary>
            Enum VMNVRAM for value: VM_NVRAM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.ISOIMAGE">
            <summary>
            Enum ISOIMAGE for value: ISO_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.VMSNAPSHOT">
            <summary>
            Enum VMSNAPSHOT for value: VM_SNAPSHOT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.TEMPLATEVMCONFIG">
            <summary>
            Enum TEMPLATEVMCONFIG for value: TEMPLATE_VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.VMCONFIG">
            <summary>
            Enum VMCONFIG for value: VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.TypeEnum.FILE">
            <summary>
            Enum FILE for value: FILE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Type">
            <summary>
            File type.
            </summary>
            <value>File type.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Name">
            <summary>
            File name
            </summary>
            <value>File name</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Path">
            <summary>
            File path used by the user to perform browse operations.
            </summary>
            <value>File path used by the user to perform browse operations.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Owner">
            <summary>
            File owner name.
            </summary>
            <value>File owner name.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Size">
            <summary>
            File size
            </summary>
            <value>File size</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Modification">
            <summary>
            Last file modification date time in milliseconds.
            </summary>
            <value>Last file modification date time in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.DatastoreName">
            <summary>
            Datastore name.
            </summary>
            <value>Datastore name.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.DatastoreId">
            <summary>
            Datastore id.
            </summary>
            <value>Datastore id.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Equals(VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity)">
            <summary>
            Returns true if EnvironmentBrowserDataDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of EnvironmentBrowserDataDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList">
            <summary>
            List of entities about: The result of the browsing datastore request.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.Equals(VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList)">
            <summary>
            Returns true if EnvironmentBrowserDataDrResponseList instances are equal
            </summary>
            <param name="input">Instance of EnvironmentBrowserDataDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.EnvironmentBrowserDataDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData">
            <summary>
            Details about the VMware vSphere Virtual Volumes (vVols) replication group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.FaultDomainId">
            <summary>
            The fault domain ID.
            </summary>
            <value>The fault domain ID.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.DeviceGroupId">
            <summary>
            The Device group ID.
            </summary>
            <value>The Device group ID.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.Name">
            <summary>
            The name of the replication group.
            </summary>
            <value>The name of the replication group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.Equals(VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData)">
            <summary>
            Returns true if ExtendedVvolReplicationGroupData instances are equal
            </summary>
            <param name="input">Instance of ExtendedVvolReplicationGroupData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ExtendedVvolReplicationGroupData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMapping">
            <summary>
            Details about a folder inventory mapping.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMapping.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMapping.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMapping.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMapping.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.FolderMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMapping.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.Equals(VMware.Bindings.Srm.Model.FolderMapping)">
            <summary>
            Returns true if FolderMapping instances are equal
            </summary>
            <param name="input">Instance of FolderMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity">
            <summary>
            Details about a folder inventory mapping.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity)">
            <summary>
            Returns true if FolderMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of FolderMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMappingDrResponseList">
            <summary>
            List of entities about: Details about a folder inventory mapping.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.FolderMappingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.Equals(VMware.Bindings.Srm.Model.FolderMappingDrResponseList)">
            <summary>
            Returns true if FolderMappingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of FolderMappingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FolderMappingsSpec">
            <summary>
            Folder mapping settings to be used for the create operation.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.FolderMappingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingsSpec.MappingSourceObject">
            <summary>
            Mapping of the source object.
            </summary>
            <value>Mapping of the source object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FolderMappingsSpec.MappingTargetObject">
            <summary>
            Mapping the target object.
            </summary>
            <value>Mapping the target object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.Equals(VMware.Bindings.Srm.Model.FolderMappingsSpec)">
            <summary>
            Returns true if FolderMappingsSpec instances are equal
            </summary>
            <param name="input">Instance of FolderMappingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FolderMappingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.FriendlyDatastorePathData">
            <summary>
            Data object that is used to fully qualify a datastore path.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.FriendlyDatastorePathData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Datastore">
            <summary>
            An ID of the datastore.
            </summary>
            <value>An ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.DatastoreName">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Path">
            <summary>
            Path to the file
            </summary>
            <value>Path to the file</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Filename">
            <summary>
            File name
            </summary>
            <value>File name</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.FriendlyPath">
            <summary>
            Path to the VM with friendly name for guid-backed volumes (vSAN and vVols).
            </summary>
            <value>Path to the VM with friendly name for guid-backed volumes (vSAN and vVols).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Equals(VMware.Bindings.Srm.Model.FriendlyDatastorePathData)">
            <summary>
            Returns true if FriendlyDatastorePathData instances are equal
            </summary>
            <param name="input">Instance of FriendlyDatastorePathData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.FriendlyDatastorePathData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.GeneralIpV4Setting">
            <summary>
            GeneralIpV4Setting
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.GeneralIpV4Setting.TypeEnum">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.GeneralIpV4Setting.TypeEnum.DHCP">
            <summary>
            Enum DHCP for value: DHCP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.GeneralIpV4Setting.TypeEnum.STATIC">
            <summary>
            Enum STATIC for value: STATIC
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV4Setting.Type">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.GeneralIpV4Setting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV4Setting.IpAddress">
            <summary>
            IP address
            </summary>
            <value>IP address</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV4Setting.DefaultGateway">
            <summary>
            Default gateway address. Applicable only for static IP address assignment.
            </summary>
            <value>Default gateway address. Applicable only for static IP address assignment.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV4Setting.AlternateGateway">
            <summary>
            Alternate gateway address. Applicable only for static IP address assignment.
            </summary>
            <value>Alternate gateway address. Applicable only for static IP address assignment.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV4Setting.SubnetMask">
            <summary>
            Subnet mask for this IP setting.
            </summary>
            <value>Subnet mask for this IP setting.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.Equals(VMware.Bindings.Srm.Model.GeneralIpV4Setting)">
            <summary>
            Returns true if GeneralIpV4Setting instances are equal
            </summary>
            <param name="input">Instance of GeneralIpV4Setting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV4Setting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.GeneralIpV6Setting">
            <summary>
            GeneralIpV6Setting
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.GeneralIpV6Setting.TypeEnum">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.GeneralIpV6Setting.TypeEnum.DHCP">
            <summary>
            Enum DHCP for value: DHCP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.GeneralIpV6Setting.TypeEnum.STATIC">
            <summary>
            Enum STATIC for value: STATIC
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV6Setting.Type">
            <summary>
            Type of IP address assignment
            </summary>
            <value>Type of IP address assignment</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.GeneralIpV6Setting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV6Setting.IpAddress">
            <summary>
            IPv6 address
            </summary>
            <value>IPv6 address</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV6Setting.DefaultGateway">
            <summary>
            Default gateway IPv6 address. Applicable only for STATIC IP address assignment.
            </summary>
            <value>Default gateway IPv6 address. Applicable only for STATIC IP address assignment.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV6Setting.AlternateGateway">
            <summary>
            Alternate gateway IPv6 address. Applicable only for static IP address assignment.
            </summary>
            <value>Alternate gateway IPv6 address. Applicable only for static IP address assignment.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.GeneralIpV6Setting.SubnetPrefixLength">
            <summary>
            Prefix length for the IP subnet.
            </summary>
            <value>Prefix length for the IP subnet.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.Equals(VMware.Bindings.Srm.Model.GeneralIpV6Setting)">
            <summary>
            Returns true if GeneralIpV6Setting instances are equal
            </summary>
            <param name="input">Instance of GeneralIpV6Setting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.GeneralIpV6Setting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec">
            <summary>
            Host-based replication details for creation or modification of the protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.Vms">
            <summary>
            The list of VMs to protect with this protection group.
            </summary>
            <value>The list of VMs to protect with this protection group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.Equals(VMware.Bindings.Srm.Model.HbrProtectionGroupSpec)">
            <summary>
            Returns true if HbrProtectionGroupSpec instances are equal
            </summary>
            <param name="input">Instance of HbrProtectionGroupSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HbrProtectionGroupSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReport">
            <summary>
            Details about a recovery run history report.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReport.OperationTypeEnum">
            <summary>
            The details of the kind of operation.
            </summary>
            <value>The details of the kind of operation.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.OperationTypeEnum.TEST">
            <summary>
            Enum TEST for value: TEST
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.OperationTypeEnum.CLEANUP">
            <summary>
            Enum CLEANUP for value: CLEANUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.OperationTypeEnum.FAILOVER">
            <summary>
            Enum FAILOVER for value: FAILOVER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.OperationTypeEnum.REPROTECT">
            <summary>
            Enum REPROTECT for value: REPROTECT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.OperationType">
            <summary>
            The details of the kind of operation.
            </summary>
            <value>The details of the kind of operation.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReport.ResultStateEnum">
            <summary>
            The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;
            </summary>
            <value>The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.ResultStateEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.ResultStateEnum.WARNINGS">
            <summary>
            Enum WARNINGS for value: WARNINGS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.ResultStateEnum.ERRORS">
            <summary>
            Enum ERRORS for value: ERRORS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReport.ResultStateEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.ResultState">
            <summary>
            The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;
            </summary>
            <value>The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.HistoryReport" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.PlanName">
            <summary>
            Recovery plan name when the result was recorded.
            </summary>
            <value>Recovery plan name when the result was recorded.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.Username">
            <summary>
            The name of the user who initiated the operation.
            </summary>
            <value>The name of the user who initiated the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.StartTimeMs">
            <summary>
            The time when the recovery was started, in milliseconds.
            </summary>
            <value>The time when the recovery was started, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.HumanFriendlyDuration">
            <summary>
            Present elapsed time in one of the two following formats:&lt;p&gt;[&#39;days&#39; d [&#39;hours&#39; h [&#39;minutes&#39; m &#39;seconds&#39; s]]]]
            </summary>
            <value>Present elapsed time in one of the two following formats:&lt;p&gt;[&#39;days&#39; d [&#39;hours&#39; h [&#39;minutes&#39; m &#39;seconds&#39; s]]]]</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.DurationMs">
            <summary>
            Total execution time in milliseconds.
            </summary>
            <value>Total execution time in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.ErrorCount">
            <summary>
            The count of error-level faults that were generated by the operation.
            </summary>
            <value>The count of error-level faults that were generated by the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.WarningCount">
            <summary>
            The count of warning-level faults that were generated by the operation.
            </summary>
            <value>The count of warning-level faults that were generated by the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.RunKey">
            <summary>
            A unique identifier of this recovery history report.
            </summary>
            <value>A unique identifier of this recovery history report.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.ErrorsList">
            <summary>
            The errors encountered for this recovery plan.
            </summary>
            <value>The errors encountered for this recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReport.WarningsList">
            <summary>
            The warnings encountered for this recovery plan.
            </summary>
            <value>The warnings encountered for this recovery plan.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.Equals(VMware.Bindings.Srm.Model.HistoryReport)">
            <summary>
            Returns true if HistoryReport instances are equal
            </summary>
            <param name="input">Instance of HistoryReport to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReport.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity">
            <summary>
            Details about a recovery run history report.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationTypeEnum">
            <summary>
            The details of the kind of operation.
            </summary>
            <value>The details of the kind of operation.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationTypeEnum.TEST">
            <summary>
            Enum TEST for value: TEST
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationTypeEnum.CLEANUP">
            <summary>
            Enum CLEANUP for value: CLEANUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationTypeEnum.FAILOVER">
            <summary>
            Enum FAILOVER for value: FAILOVER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationTypeEnum.REPROTECT">
            <summary>
            Enum REPROTECT for value: REPROTECT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.OperationType">
            <summary>
            The details of the kind of operation.
            </summary>
            <value>The details of the kind of operation.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultStateEnum">
            <summary>
            The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;
            </summary>
            <value>The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultStateEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultStateEnum.WARNINGS">
            <summary>
            Enum WARNINGS for value: WARNINGS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultStateEnum.ERRORS">
            <summary>
            Enum ERRORS for value: ERRORS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultStateEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ResultState">
            <summary>
            The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;
            </summary>
            <value>The result state. This will only be &lt;code&gt;final&lt;/code&gt; state indicating success or failure.&lt;ul&gt;&lt;li&gt;SUCCESS - The operation completed with no warnings.&lt;li&gt;WARNINGS - The operation completed with one or more warnings.&lt;li&gt;ERRORS - The operation failed to complete due to one or more errors.&lt;li&gt;CANCELLED - The operation was cancelled.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.PlanName">
            <summary>
            Recovery plan name when the result was recorded.
            </summary>
            <value>Recovery plan name when the result was recorded.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.Username">
            <summary>
            The name of the user who initiated the operation.
            </summary>
            <value>The name of the user who initiated the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.StartTimeMs">
            <summary>
            The time when the recovery was started, in milliseconds.
            </summary>
            <value>The time when the recovery was started, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.HumanFriendlyDuration">
            <summary>
            Present elapsed time in one of the two following formats:&lt;p&gt;[&#39;days&#39; d [&#39;hours&#39; h [&#39;minutes&#39; m &#39;seconds&#39; s]]]]
            </summary>
            <value>Present elapsed time in one of the two following formats:&lt;p&gt;[&#39;days&#39; d [&#39;hours&#39; h [&#39;minutes&#39; m &#39;seconds&#39; s]]]]</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.DurationMs">
            <summary>
            Total execution time in milliseconds.
            </summary>
            <value>Total execution time in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ErrorCount">
            <summary>
            The count of error-level faults that were generated by the operation.
            </summary>
            <value>The count of error-level faults that were generated by the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.WarningCount">
            <summary>
            The count of warning-level faults that were generated by the operation.
            </summary>
            <value>The count of warning-level faults that were generated by the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.RunKey">
            <summary>
            A unique identifier of this recovery history report.
            </summary>
            <value>A unique identifier of this recovery history report.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ErrorsList">
            <summary>
            The errors encountered for this recovery plan.
            </summary>
            <value>The errors encountered for this recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.WarningsList">
            <summary>
            The warnings encountered for this recovery plan.
            </summary>
            <value>The warnings encountered for this recovery plan.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.Equals(VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity)">
            <summary>
            Returns true if HistoryReportDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of HistoryReportDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HistoryReportDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.HrefDrData">
            <summary>
            Previous entity link
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.HrefDrData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.HrefDrData.Href">
            <summary>
            Gets or Sets Href
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.Equals(VMware.Bindings.Srm.Model.HrefDrData)">
            <summary>
            Returns true if HrefDrData instances are equal
            </summary>
            <param name="input">Instance of HrefDrData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.HrefDrData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IPMapping">
            <summary>
            IPMapping defines the rule(s) used to translate VM&#39;s IP settings between protection and recovery sites. IPMapping can be associated with a protected site&#39;s network mapped to a recovery site&#39;s network at inventory mapping level. This allows IP settings for the recovered VMs to be deduced based on the IP subnet parameters without a need to configure IP settings for each protected VM individually.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IPMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IPMapping.Name">
            <summary>
            Name of the IP mapping.
            </summary>
            <value>Name of the IP mapping.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IPMapping.Rules">
            <summary>
            Gets or Sets Rules
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.Equals(VMware.Bindings.Srm.Model.IPMapping)">
            <summary>
            Returns true if IPMapping instances are equal
            </summary>
            <param name="input">Instance of IPMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity">
            <summary>
            IPMapping defines the rule(s) used to translate VM\\&#39;s IP settings between protection and recovery sites. IPMapping can be associated with a protected site\\&#39;s network mapped to a recovery site\\&#39;s network at inventory mapping level. This allows IP settings for the recovered VMs to be deduced based on the IP subnet parameters without a need to configure IP settings for each protected VM individually.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Name">
            <summary>
            Name of the IP mapping.
            </summary>
            <value>Name of the IP mapping.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Rules">
            <summary>
            Gets or Sets Rules
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.IPMappingDrResponseEntity)">
            <summary>
            Returns true if IPMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of IPMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IPMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IpSettings">
            <summary>
            IP settings for an adapter.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IpSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IpSettings.IpV4">
            <summary>
            Gets or Sets IpV4
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IpSettings.IpV6">
            <summary>
            Gets or Sets IpV6
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IpSettings.Dns">
            <summary>
            Gets or Sets Dns
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IpSettings.Wins">
            <summary>
            Gets or Sets Wins
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.Equals(VMware.Bindings.Srm.Model.IpSettings)">
            <summary>
            Returns true if IpSettings instances are equal
            </summary>
            <param name="input">Instance of IpSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IpSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfo">
            <summary>
            Issue information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfo.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum">
            <summary>
            Defines IssueType
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.VC">
            <summary>
            Enum VC for value: VC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.VRS">
            <summary>
            Enum VRS for value: VRS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.VRMS">
            <summary>
            Enum VRMS for value: VRMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.SRM">
            <summary>
            Enum SRM for value: SRM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.PROTECTIONGROUP">
            <summary>
            Enum PROTECTIONGROUP for value: PROTECTION_GROUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.RECOVERYPLAN">
            <summary>
            Enum RECOVERYPLAN for value: RECOVERY_PLAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfo.IssueTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.IssueType">
            <summary>
            Gets or Sets IssueType
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IssueInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.Entity">
            <summary>
            The ID of the entity this issue is about.
            </summary>
            <value>The ID of the entity this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.EntityName">
            <summary>
            Entity name this issue is about.
            </summary>
            <value>Entity name this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.Description">
            <summary>
            Description of the issue.
            </summary>
            <value>Description of the issue.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfo.Timestamp">
            <summary>
            The timestamp of the issue, in milliseconds.
            </summary>
            <value>The timestamp of the issue, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.Equals(VMware.Bindings.Srm.Model.IssueInfo)">
            <summary>
            Returns true if IssueInfo instances are equal
            </summary>
            <param name="input">Instance of IssueInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity">
            <summary>
            Issue information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum">
            <summary>
            Defines IssueType
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VC">
            <summary>
            Enum VC for value: VC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VRS">
            <summary>
            Enum VRS for value: VRS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VRMS">
            <summary>
            Enum VRMS for value: VRMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.SRM">
            <summary>
            Enum SRM for value: SRM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.PROTECTIONGROUP">
            <summary>
            Enum PROTECTIONGROUP for value: PROTECTION_GROUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.RECOVERYPLAN">
            <summary>
            Enum RECOVERYPLAN for value: RECOVERY_PLAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.IssueType">
            <summary>
            Gets or Sets IssueType
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Entity">
            <summary>
            The ID of the entity this issue is about.
            </summary>
            <value>The ID of the entity this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.EntityName">
            <summary>
            Entity name this issue is about.
            </summary>
            <value>Entity name this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Description">
            <summary>
            Description of the issue.
            </summary>
            <value>Description of the issue.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Timestamp">
            <summary>
            The timestamp of the issue, in milliseconds.
            </summary>
            <value>The timestamp of the issue, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity)">
            <summary>
            Returns true if IssueInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of IssueInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseList">
            <summary>
            List of entities about: Issue information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.IssueInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.IssueInfoDrResponseList)">
            <summary>
            Returns true if IssueInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of IssueInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.IssueInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Metadata">
            <summary>
            Response meta data. Contains data about the response payload data.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.Metadata" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Metadata.Errors">
            <summary>
            Response payload data errors.
            </summary>
            <value>Response payload data errors.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.Equals(VMware.Bindings.Srm.Model.Metadata)">
            <summary>
            Returns true if Metadata instances are equal
            </summary>
            <param name="input">Instance of Metadata to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Metadata.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.MetadataList">
            <summary>
            List metadata
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.MetadataList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetadataList.Errors">
            <summary>
            Response payload data errors.
            </summary>
            <value>Response payload data errors.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetadataList.Total">
            <summary>
            Total number of entities
            </summary>
            <value>Total number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetadataList.Offset">
            <summary>
            Offset number of entities
            </summary>
            <value>Offset number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetadataList.Limit">
            <summary>
            Limit number of entities
            </summary>
            <value>Limit number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetadataList.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.Equals(VMware.Bindings.Srm.Model.MetadataList)">
            <summary>
            Returns true if MetadataList instances are equal
            </summary>
            <param name="input">Instance of MetadataList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetadataList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.MetaError">
            <summary>
            Response metadata error
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.MetaError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaError.Code">
            <summary>
            Error code
            </summary>
            <value>Error code</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaError.Message">
            <summary>
            Error message
            </summary>
            <value>Error message</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaError.Field">
            <summary>
            JSONPath of the entity field that causes this error.
            </summary>
            <value>JSONPath of the entity field that causes this error.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.Equals(VMware.Bindings.Srm.Model.MetaError)">
            <summary>
            Returns true if MetaError instances are equal
            </summary>
            <param name="input">Instance of MetaError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.MetaLinks">
            <summary>
            Response meta links
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.MetaLinks" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaLinks.Next">
            <summary>
            Gets or Sets Next
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MetaLinks.Previous">
            <summary>
            Gets or Sets Previous
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.Equals(VMware.Bindings.Srm.Model.MetaLinks)">
            <summary>
            Returns true if MetaLinks instances are equal
            </summary>
            <param name="input">Instance of MetaLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MetaLinks.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.MoveObjectSpec">
            <summary>
            Spec to move a Site Recovery Manager object.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.MoveObjectSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.MoveObjectSpec.DestinationParent">
            <summary>
            Destination parent folder for the movement operation.
            </summary>
            <value>Destination parent folder for the movement operation.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.Equals(VMware.Bindings.Srm.Model.MoveObjectSpec)">
            <summary>
            Returns true if MoveObjectSpec instances are equal
            </summary>
            <param name="input">Instance of MoveObjectSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.MoveObjectSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMapping">
            <summary>
            Details about a network inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMapping.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMapping.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMapping.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMapping.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.NetworkMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.TestNetworkMapping">
            <summary>
            Gets or Sets TestNetworkMapping
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMapping.IpMapping">
            <summary>
            Gets or Sets IpMapping
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.Equals(VMware.Bindings.Srm.Model.NetworkMapping)">
            <summary>
            Returns true if NetworkMapping instances are equal
            </summary>
            <param name="input">Instance of NetworkMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity">
            <summary>
            Details about a network inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.TestNetworkMapping">
            <summary>
            Gets or Sets TestNetworkMapping
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.IpMapping">
            <summary>
            Gets or Sets IpMapping
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity)">
            <summary>
            Returns true if NetworkMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of NetworkMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList">
            <summary>
            List of entities about: Details about a network inventory mapping
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.Equals(VMware.Bindings.Srm.Model.NetworkMappingDrResponseList)">
            <summary>
            Returns true if NetworkMappingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of NetworkMappingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NetworkMappingsSpec">
            <summary>
            Network mapping settings to be used for create operation.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.NetworkMappingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingsSpec.MappingSourceObject">
            <summary>
            Mapping of the source object.
            </summary>
            <value>Mapping of the source object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NetworkMappingsSpec.MappingTargetObject">
            <summary>
            Mapping the target object.
            </summary>
            <value>Mapping the target object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.Equals(VMware.Bindings.Srm.Model.NetworkMappingsSpec)">
            <summary>
            Returns true if NetworkMappingsSpec instances are equal
            </summary>
            <param name="input">Instance of NetworkMappingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NetworkMappingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.NicSettings">
            <summary>
            Contains information about IP settings for each NIC.&lt;ul&gt;&lt;li&gt;&lt;code&gt;primary_ip_settings&lt;/code&gt; contains information required to customize the network adapters on the virtual machine when migrating back to the source vCenter Server&lt;/li&gt;&lt;li&gt;&lt;code&gt;secondary_ip_settings&lt;/code&gt; contains information required to customize the network adapters on the virtual machine when migrating to a new vCenter Server&lt;/li&gt;&lt;/ul&gt;
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.NicSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NicSettings.DeviceId">
            <summary>
            The ID of the NIC.
            </summary>
            <value>The ID of the NIC.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NicSettings.PrimaryIpSettings">
            <summary>
            Gets or Sets PrimaryIpSettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.NicSettings.SecondaryIpSettings">
            <summary>
            Gets or Sets SecondaryIpSettings
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.Equals(VMware.Bindings.Srm.Model.NicSettings)">
            <summary>
            Returns true if NicSettings instances are equal
            </summary>
            <param name="input">Instance of NicSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.NicSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Pairing">
            <summary>
            Site Recovery Manager pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.Pairing" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Pairing.PairingId">
            <summary>
            Gets or Sets PairingId
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Pairing.LocalVcServer">
            <summary>
            Gets or Sets LocalVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Pairing.RemoteVcServer">
            <summary>
            Gets or Sets RemoteVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Pairing.LocalSrmServer">
            <summary>
            Gets or Sets LocalSrmServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Pairing.RemoteSrmServer">
            <summary>
            Gets or Sets RemoteSrmServer
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.Equals(VMware.Bindings.Srm.Model.Pairing)">
            <summary>
            Returns true if Pairing instances are equal
            </summary>
            <param name="input">Instance of Pairing to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Pairing.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PairingDrResponseEntity">
            <summary>
            Site Recovery Manager pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PairingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.PairingId">
            <summary>
            Gets or Sets PairingId
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.LocalVcServer">
            <summary>
            Gets or Sets LocalVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.RemoteVcServer">
            <summary>
            Gets or Sets RemoteVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.LocalSrmServer">
            <summary>
            Gets or Sets LocalSrmServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseEntity.RemoteSrmServer">
            <summary>
            Gets or Sets RemoteSrmServer
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.PairingDrResponseEntity)">
            <summary>
            Returns true if PairingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of PairingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PairingDrResponseList">
            <summary>
            List of entities about: Site Recovery Manager pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PairingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.Equals(VMware.Bindings.Srm.Model.PairingDrResponseList)">
            <summary>
            Returns true if PairingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of PairingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PairingSpec">
            <summary>
            Details of a remote Site Recovery Manager server to pair with.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PairingSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpec.PairPscInfo">
            <summary>
            Gets or Sets PairPscInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpec.PairVcGuid">
            <summary>
            Server guid of the remote vCenter Server.
            </summary>
            <value>Server guid of the remote vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpec.PairSrmThumbprint">
            <summary>
            The expected thumbprint of the remote Site Recovery Manager. Used to match against the actual thumbprint of the remote Site Recovery Manager, when the remote Site Recovery Manager certificate is not trusted. Should not be undefined, empty string or string only with spaces, when attribute &lt;b&gt;pair_srm_url&lt;b&gt; has a meaningful value. Can be &lt;b&gt;null&lt;b&gt; when the remote Site Recovery Manager certificates are trusted.
            </summary>
            <value>The expected thumbprint of the remote Site Recovery Manager. Used to match against the actual thumbprint of the remote Site Recovery Manager, when the remote Site Recovery Manager certificate is not trusted. Should not be undefined, empty string or string only with spaces, when attribute &lt;b&gt;pair_srm_url&lt;b&gt; has a meaningful value. Can be &lt;b&gt;null&lt;b&gt; when the remote Site Recovery Manager certificates are trusted.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpec.PairSrmUrl">
            <summary>
            The expected URL of the remote Site Recovery Manager. Used to match against the actual URL of the remote Site Recovery Manager, when the remote Site Recovery Manager certificate is not trusted. Should not be undefined, empty string or string only with spaces, when attribute &lt;b&gt;pair_srm_thumbprint&lt;b&gt; has a meaningful value. Can be &lt;b&gt;null&lt;b&gt; when the remote Site Recovery Manager certificates are trusted.
            </summary>
            <value>The expected URL of the remote Site Recovery Manager. Used to match against the actual URL of the remote Site Recovery Manager, when the remote Site Recovery Manager certificate is not trusted. Should not be undefined, empty string or string only with spaces, when attribute &lt;b&gt;pair_srm_thumbprint&lt;b&gt; has a meaningful value. Can be &lt;b&gt;null&lt;b&gt; when the remote Site Recovery Manager certificates are trusted.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.Equals(VMware.Bindings.Srm.Model.PairingSpec)">
            <summary>
            Returns true if PairingSpec instances are equal
            </summary>
            <param name="input">Instance of PairingSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo">
            <summary>
            Details of a pair Platform Services Controller.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Url">
            <summary>
            Get Platform Services Controller URL.
            </summary>
            <value>Get Platform Services Controller URL.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Port">
            <summary>
            Platform Services Controller port. Default is 443.
            </summary>
            <value>Platform Services Controller port. Default is 443.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Thumbprint">
            <summary>
            The thumbprint of the Platform Services Controller.
            </summary>
            <value>The thumbprint of the Platform Services Controller.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Username">
            <summary>
            Platform Services Controller credentials username.
            </summary>
            <value>Platform Services Controller credentials username.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Password">
            <summary>
            Platform Services Controller credentials password.
            </summary>
            <value>Platform Services Controller credentials password.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Equals(VMware.Bindings.Srm.Model.PairingSpecPairPscInfo)">
            <summary>
            Returns true if PairingSpecPairPscInfo instances are equal
            </summary>
            <param name="input">Instance of PairingSpecPairPscInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PairingSpecPairPscInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastore">
            <summary>
            Site Recovery Manager placeholder datastore.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatusEnum">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastore.OverallStatus">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PlaceholderDatastore" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastore.Id">
            <summary>
            An identifier of the placeholder datastore.
            </summary>
            <value>An identifier of the placeholder datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastore.Name">
            <summary>
            The name of the placeholder datastore.
            </summary>
            <value>The name of the placeholder datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastore.VisibleTo">
            <summary>
            The list of hosts and clusters that can access this datastore. If a cluster is included in this list, it means that this datastore is accessible to all hosts in this cluster. In most cases this list can not be empty. The only reason for this field to be optional is to be able to return placeholder datastores that have become invalid because there are no clusters or hosts that can see this datastore. This could happen, for example, if the user were to add a host to a cluster and this host could not see some of the datastores that were previously visible to all hosts in the cluster.
            </summary>
            <value>The list of hosts and clusters that can access this datastore. If a cluster is included in this list, it means that this datastore is accessible to all hosts in this cluster. In most cases this list can not be empty. The only reason for this field to be optional is to be able to return placeholder datastores that have become invalid because there are no clusters or hosts that can see this datastore. This could happen, for example, if the user were to add a host to a cluster and this host could not see some of the datastores that were previously visible to all hosts in the cluster.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.Equals(VMware.Bindings.Srm.Model.PlaceholderDatastore)">
            <summary>
            Returns true if PlaceholderDatastore instances are equal
            </summary>
            <param name="input">Instance of PlaceholderDatastore to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastore.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity">
            <summary>
            Site Recovery Manager placeholder datastore.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatusEnum">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.OverallStatus">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Id">
            <summary>
            An identifier of the placeholder datastore.
            </summary>
            <value>An identifier of the placeholder datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Name">
            <summary>
            The name of the placeholder datastore.
            </summary>
            <value>The name of the placeholder datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.VisibleTo">
            <summary>
            The list of hosts and clusters that can access this datastore. If a cluster is included in this list, it means that this datastore is accessible to all hosts in this cluster. In most cases this list can not be empty. The only reason for this field to be optional is to be able to return placeholder datastores that have become invalid because there are no clusters or hosts that can see this datastore. This could happen, for example, if the user were to add a host to a cluster and this host could not see some of the datastores that were previously visible to all hosts in the cluster.
            </summary>
            <value>The list of hosts and clusters that can access this datastore. If a cluster is included in this list, it means that this datastore is accessible to all hosts in this cluster. In most cases this list can not be empty. The only reason for this field to be optional is to be able to return placeholder datastores that have become invalid because there are no clusters or hosts that can see this datastore. This could happen, for example, if the user were to add a host to a cluster and this host could not see some of the datastores that were previously visible to all hosts in the cluster.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Equals(VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity)">
            <summary>
            Returns true if PlaceholderDatastoreDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of PlaceholderDatastoreDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList">
            <summary>
            List of entities about: Site Recovery Manager placeholder datastore.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.Equals(VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList)">
            <summary>
            Returns true if PlaceholderDatastoreDrResponseList instances are equal
            </summary>
            <param name="input">Instance of PlaceholderDatastoreDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo">
            <summary>
            Information about a host or cluster that can access a datastore. If this is a cluster, it means that the datastore is accessible to all hosts in this cluster.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Name">
            <summary>
            The name of the host or cluster.
            </summary>
            <value>The name of the host or cluster.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Status">
            <summary>
            The status of the object - gray, green, red, or yellow.
            </summary>
            <value>The status of the object - gray, green, red, or yellow.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Id">
            <summary>
            The ID of the host or cluster.
            </summary>
            <value>The ID of the host or cluster.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Equals(VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo)">
            <summary>
            Returns true if PlaceholderDatastoreVisibleTo instances are equal
            </summary>
            <param name="input">Instance of PlaceholderDatastoreVisibleTo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlaceholderDatastoreVisibleTo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlanCalloutPosition">
            <summary>
            The position spec for the step if it is a callout, null otherwise.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum">
            <summary>
            Describes a position between the automatically generated recovery steps where users can inject custom commands.&lt;ul&gt;&lt;li&gt;AT_BEGIN - Internal callout position that is used only by the server All new recovery plan positions should be added after atBegin This position is invalid for callouts.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_RU_METADATA_SYNC - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_METADATA - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_PRESYNC_STORAGE - Before the initial synchronization steps. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORING_HOSTS_FOR_MIGRATION - Before the restore hosts operation that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS_FOR_MIGRATION - Before the suspend recovery site VMs group that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE_FOR_VMOTION - Before preparing storage for vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_VMOTION_VMS - Before performing the vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_DISABLE_PROTECTED_SITE_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SHUTDOWN_PROTECTED_SITE_VMS - Before the shutdown protected site VMs group. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_PROTECTED_SITE_VMS - Before the resume protected site VMs group. Workflow: failove.r&lt;/li&gt;&lt;li&gt;BEFORE_POWER_OFF_RECOVERY_SITE_VMS - Before the power off recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_RECOVERY_SITE_VMS - Before the resume recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_POST_PROCESS_AFTER_DEACTIVATE - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_PRIMARY_SITE_HOSTS - Before the preparation of hosts at the primary site. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_STORAGE - Before the initial storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_STORAGE - Before the sync storage operations. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_HOSTS - Before the restore hosts group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE -Before the prepare storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_STORAGE - Before the restore storage operation. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_PIGGYBACK_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS - Before the suspend recovery site VMs group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_PROTECTED_SITE_VMS - Before the suspend protected site VMs group. Workflow: rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CONFIGURE_STORAGE - Before configuring the recovery site storage Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_IMPORT_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_APPLYING_POLICIES - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_1_VMS - Before the priority 1 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_2_VMS - Before the priority 2 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_3_VMS - Before the priority 3 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_4_VMS - Before the priority 4 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_5_VMS - Before the priority 5 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CREATE_PLACEHOLDER_VMS - Before the create placeholder VMs group. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_FINALIZE_STORAGE - Before the final storage operation. This is really the final synchronization of storage. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_REVERSE_REPLICATION - Before the reverse replication operation. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;AT_END - At the end of plan execution. Workflow: failover and test.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Describes a position between the automatically generated recovery steps where users can inject custom commands.&lt;ul&gt;&lt;li&gt;AT_BEGIN - Internal callout position that is used only by the server All new recovery plan positions should be added after atBegin This position is invalid for callouts.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_RU_METADATA_SYNC - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_METADATA - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_PRESYNC_STORAGE - Before the initial synchronization steps. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORING_HOSTS_FOR_MIGRATION - Before the restore hosts operation that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS_FOR_MIGRATION - Before the suspend recovery site VMs group that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE_FOR_VMOTION - Before preparing storage for vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_VMOTION_VMS - Before performing the vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_DISABLE_PROTECTED_SITE_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SHUTDOWN_PROTECTED_SITE_VMS - Before the shutdown protected site VMs group. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_PROTECTED_SITE_VMS - Before the resume protected site VMs group. Workflow: failove.r&lt;/li&gt;&lt;li&gt;BEFORE_POWER_OFF_RECOVERY_SITE_VMS - Before the power off recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_RECOVERY_SITE_VMS - Before the resume recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_POST_PROCESS_AFTER_DEACTIVATE - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_PRIMARY_SITE_HOSTS - Before the preparation of hosts at the primary site. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_STORAGE - Before the initial storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_STORAGE - Before the sync storage operations. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_HOSTS - Before the restore hosts group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE -Before the prepare storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_STORAGE - Before the restore storage operation. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_PIGGYBACK_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS - Before the suspend recovery site VMs group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_PROTECTED_SITE_VMS - Before the suspend protected site VMs group. Workflow: rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CONFIGURE_STORAGE - Before configuring the recovery site storage Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_IMPORT_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_APPLYING_POLICIES - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_1_VMS - Before the priority 1 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_2_VMS - Before the priority 2 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_3_VMS - Before the priority 3 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_4_VMS - Before the priority 4 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_5_VMS - Before the priority 5 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CREATE_PLACEHOLDER_VMS - Before the create placeholder VMs group. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_FINALIZE_STORAGE - Before the final storage operation. This is really the final synchronization of storage. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_REVERSE_REPLICATION - Before the reverse replication operation. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;AT_END - At the end of plan execution. Workflow: failover and test.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.ATBEGIN">
            <summary>
            Enum ATBEGIN for value: AT_BEGIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREDISCOVERRUMETADATASYNC">
            <summary>
            Enum BEFOREDISCOVERRUMETADATASYNC for value: BEFORE_DISCOVER_RU_METADATA_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESYNCMETADATA">
            <summary>
            Enum BEFORESYNCMETADATA for value: BEFORE_SYNC_METADATA
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREPRESYNCSTORAGE">
            <summary>
            Enum BEFOREPRESYNCSTORAGE for value: BEFORE_PRESYNC_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERESTORINGHOSTSFORMIGRATION">
            <summary>
            Enum BEFORERESTORINGHOSTSFORMIGRATION for value: BEFORE_RESTORING_HOSTS_FOR_MIGRATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESUSPENDRECOVERYSITEVMSFORMIGRATION">
            <summary>
            Enum BEFORESUSPENDRECOVERYSITEVMSFORMIGRATION for value: BEFORE_SUSPEND_RECOVERY_SITE_VMS_FOR_MIGRATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREPREPARESTORAGEFORVMOTION">
            <summary>
            Enum BEFOREPREPARESTORAGEFORVMOTION for value: BEFORE_PREPARE_STORAGE_FOR_VMOTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREVMOTIONVMS">
            <summary>
            Enum BEFOREVMOTIONVMS for value: BEFORE_VMOTION_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREDISABLEPROTECTEDSITEVMS">
            <summary>
            Enum BEFOREDISABLEPROTECTEDSITEVMS for value: BEFORE_DISABLE_PROTECTED_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESHUTDOWNPROTECTEDSITEVMS">
            <summary>
            Enum BEFORESHUTDOWNPROTECTEDSITEVMS for value: BEFORE_SHUTDOWN_PROTECTED_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERESUMEPROTECTEDSITEVMS">
            <summary>
            Enum BEFORERESUMEPROTECTEDSITEVMS for value: BEFORE_RESUME_PROTECTED_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREPOWEROFFRECOVERYSITEVMS">
            <summary>
            Enum BEFOREPOWEROFFRECOVERYSITEVMS for value: BEFORE_POWER_OFF_RECOVERY_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERESUMERECOVERYSITEVMS">
            <summary>
            Enum BEFORERESUMERECOVERYSITEVMS for value: BEFORE_RESUME_RECOVERY_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREDEACTIVATERECOVERYUNITS">
            <summary>
            Enum BEFOREDEACTIVATERECOVERYUNITS for value: BEFORE_DEACTIVATE_RECOVERY_UNITS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREPOSTPROCESSAFTERDEACTIVATE">
            <summary>
            Enum BEFOREPOSTPROCESSAFTERDEACTIVATE for value: BEFORE_POST_PROCESS_AFTER_DEACTIVATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREDEACTIVATECONSISTENCYGROUPS">
            <summary>
            Enum BEFOREDEACTIVATECONSISTENCYGROUPS for value: BEFORE_DEACTIVATE_CONSISTENCY_GROUPS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREBEGINPREPAREPRIMARYSITEHOSTS">
            <summary>
            Enum BEFOREBEGINPREPAREPRIMARYSITEHOSTS for value: BEFORE_BEGIN_PREPARE_PRIMARY_SITE_HOSTS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREBEGINPREPARESTORAGE">
            <summary>
            Enum BEFOREBEGINPREPARESTORAGE for value: BEFORE_BEGIN_PREPARE_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESYNCSTORAGE">
            <summary>
            Enum BEFORESYNCSTORAGE for value: BEFORE_SYNC_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERESTOREHOSTS">
            <summary>
            Enum BEFORERESTOREHOSTS for value: BEFORE_RESTORE_HOSTS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREPREPARESTORAGE">
            <summary>
            Enum BEFOREPREPARESTORAGE for value: BEFORE_PREPARE_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERESTORESTORAGE">
            <summary>
            Enum BEFORERESTORESTORAGE for value: BEFORE_RESTORE_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREDISCOVERPIGGYBACKUNITS">
            <summary>
            Enum BEFOREDISCOVERPIGGYBACKUNITS for value: BEFORE_DISCOVER_PIGGYBACK_UNITS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORECLEANUPRECOVERYUNITS">
            <summary>
            Enum BEFORECLEANUPRECOVERYUNITS for value: BEFORE_CLEANUP_RECOVERY_UNITS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORECLEANUPCONSISTENCYGROUPS">
            <summary>
            Enum BEFORECLEANUPCONSISTENCYGROUPS for value: BEFORE_CLEANUP_CONSISTENCY_GROUPS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESUSPENDRECOVERYSITEVMS">
            <summary>
            Enum BEFORESUSPENDRECOVERYSITEVMS for value: BEFORE_SUSPEND_RECOVERY_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORESUSPENDPROTECTEDSITEVMS">
            <summary>
            Enum BEFORESUSPENDPROTECTEDSITEVMS for value: BEFORE_SUSPEND_PROTECTED_SITE_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORECONFIGURESTORAGE">
            <summary>
            Enum BEFORECONFIGURESTORAGE for value: BEFORE_CONFIGURE_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREIMPORTVMS">
            <summary>
            Enum BEFOREIMPORTVMS for value: BEFORE_IMPORT_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREAPPLYINGPOLICIES">
            <summary>
            Enum BEFOREAPPLYINGPOLICIES for value: BEFORE_APPLYING_POLICIES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERECOVERPRIORITY1VMS">
            <summary>
            Enum BEFORERECOVERPRIORITY1VMS for value: BEFORE_RECOVER_PRIORITY_1_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERECOVERPRIORITY2VMS">
            <summary>
            Enum BEFORERECOVERPRIORITY2VMS for value: BEFORE_RECOVER_PRIORITY_2_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERECOVERPRIORITY3VMS">
            <summary>
            Enum BEFORERECOVERPRIORITY3VMS for value: BEFORE_RECOVER_PRIORITY_3_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERECOVERPRIORITY4VMS">
            <summary>
            Enum BEFORERECOVERPRIORITY4VMS for value: BEFORE_RECOVER_PRIORITY_4_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORERECOVERPRIORITY5VMS">
            <summary>
            Enum BEFORERECOVERPRIORITY5VMS for value: BEFORE_RECOVER_PRIORITY_5_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFORECREATEPLACEHOLDERVMS">
            <summary>
            Enum BEFORECREATEPLACEHOLDERVMS for value: BEFORE_CREATE_PLACEHOLDER_VMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREFINALIZESTORAGE">
            <summary>
            Enum BEFOREFINALIZESTORAGE for value: BEFORE_FINALIZE_STORAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.BEFOREREVERSEREPLICATION">
            <summary>
            Enum BEFOREREVERSEREPLICATION for value: BEFORE_REVERSE_REPLICATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPositionEnum.ATEND">
            <summary>
            Enum ATEND for value: AT_END
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecPosition">
            <summary>
            Describes a position between the automatically generated recovery steps where users can inject custom commands.&lt;ul&gt;&lt;li&gt;AT_BEGIN - Internal callout position that is used only by the server All new recovery plan positions should be added after atBegin This position is invalid for callouts.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_RU_METADATA_SYNC - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_METADATA - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_PRESYNC_STORAGE - Before the initial synchronization steps. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORING_HOSTS_FOR_MIGRATION - Before the restore hosts operation that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS_FOR_MIGRATION - Before the suspend recovery site VMs group that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE_FOR_VMOTION - Before preparing storage for vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_VMOTION_VMS - Before performing the vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_DISABLE_PROTECTED_SITE_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SHUTDOWN_PROTECTED_SITE_VMS - Before the shutdown protected site VMs group. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_PROTECTED_SITE_VMS - Before the resume protected site VMs group. Workflow: failove.r&lt;/li&gt;&lt;li&gt;BEFORE_POWER_OFF_RECOVERY_SITE_VMS - Before the power off recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_RECOVERY_SITE_VMS - Before the resume recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_POST_PROCESS_AFTER_DEACTIVATE - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_PRIMARY_SITE_HOSTS - Before the preparation of hosts at the primary site. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_STORAGE - Before the initial storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_STORAGE - Before the sync storage operations. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_HOSTS - Before the restore hosts group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE -Before the prepare storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_STORAGE - Before the restore storage operation. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_PIGGYBACK_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS - Before the suspend recovery site VMs group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_PROTECTED_SITE_VMS - Before the suspend protected site VMs group. Workflow: rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CONFIGURE_STORAGE - Before configuring the recovery site storage Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_IMPORT_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_APPLYING_POLICIES - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_1_VMS - Before the priority 1 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_2_VMS - Before the priority 2 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_3_VMS - Before the priority 3 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_4_VMS - Before the priority 4 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_5_VMS - Before the priority 5 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CREATE_PLACEHOLDER_VMS - Before the create placeholder VMs group. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_FINALIZE_STORAGE - Before the final storage operation. This is really the final synchronization of storage. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_REVERSE_REPLICATION - Before the reverse replication operation. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;AT_END - At the end of plan execution. Workflow: failover and test.&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>Describes a position between the automatically generated recovery steps where users can inject custom commands.&lt;ul&gt;&lt;li&gt;AT_BEGIN - Internal callout position that is used only by the server All new recovery plan positions should be added after atBegin This position is invalid for callouts.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_RU_METADATA_SYNC - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_METADATA - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_PRESYNC_STORAGE - Before the initial synchronization steps. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORING_HOSTS_FOR_MIGRATION - Before the restore hosts operation that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS_FOR_MIGRATION - Before the suspend recovery site VMs group that occurs before migration. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE_FOR_VMOTION - Before preparing storage for vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_VMOTION_VMS - Before performing the vMotion. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_DISABLE_PROTECTED_SITE_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SHUTDOWN_PROTECTED_SITE_VMS - Before the shutdown protected site VMs group. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_PROTECTED_SITE_VMS - Before the resume protected site VMs group. Workflow: failove.r&lt;/li&gt;&lt;li&gt;BEFORE_POWER_OFF_RECOVERY_SITE_VMS - Before the power off recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_RESUME_RECOVERY_SITE_VMS - Before the resume recovery site VMs group. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_POST_PROCESS_AFTER_DEACTIVATE - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_DEACTIVATE_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_PRIMARY_SITE_HOSTS - Before the preparation of hosts at the primary site. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_BEGIN_PREPARE_STORAGE - Before the initial storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SYNC_STORAGE - Before the sync storage operations. Workflow: failover.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_HOSTS - Before the restore hosts group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_PREPARE_STORAGE -Before the prepare storage operations. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_RESTORE_STORAGE - Before the restore storage operation. Workflow: cleanup.&lt;/li&gt;&lt;li&gt;BEFORE_DISCOVER_PIGGYBACK_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_RECOVERY_UNITS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_CLEANUP_CONSISTENCY_GROUPS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_RECOVERY_SITE_VMS - Before the suspend recovery site VMs group. Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_SUSPEND_PROTECTED_SITE_VMS - Before the suspend protected site VMs group. Workflow: rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CONFIGURE_STORAGE - Before configuring the recovery site storage Workflow: failover, test.&lt;/li&gt;&lt;li&gt;BEFORE_IMPORT_VMS - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_APPLYING_POLICIES - NOT USED. Kept for backward compatability.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_1_VMS - Before the priority 1 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_2_VMS - Before the priority 2 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_3_VMS - Before the priority 3 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_4_VMS - Before the priority 4 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_RECOVER_PRIORITY_5_VMS - Before the priority 5 recovery group. Workflow: failover, test, rollback.&lt;/li&gt;&lt;li&gt;BEFORE_CREATE_PLACEHOLDER_VMS - Before the create placeholder VMs group. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_FINALIZE_STORAGE - Before the final storage operation. This is really the final synchronization of storage. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;BEFORE_REVERSE_REPLICATION - Before the reverse replication operation. Workflow: reprotect and rollback.&lt;/li&gt;&lt;li&gt;AT_END - At the end of plan execution. Workflow: failover and test.&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PlanCalloutPosition" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PlanCalloutPosition.PositionSpecIndex">
            <summary>
            The position spec index of the Callout.
            </summary>
            <value>The position spec index of the Callout.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.Equals(VMware.Bindings.Srm.Model.PlanCalloutPosition)">
            <summary>
            Returns true if PlanCalloutPosition instances are equal
            </summary>
            <param name="input">Instance of PlanCalloutPosition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PlanCalloutPosition.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PriorityGroupData">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupData.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PriorityGroupData.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PriorityGroupData" /> class.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.Equals(VMware.Bindings.Srm.Model.PriorityGroupData)">
            <summary>
            Returns true if PriorityGroupData instances are equal
            </summary>
            <param name="input">Instance of PriorityGroupData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities.\\nThe recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.Equals(VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity)">
            <summary>
            Returns true if PriorityGroupDataDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of PriorityGroupDataDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.PriorityGroupDataDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec">
            <summary>
            A spec to create the protection group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationTypeEnum">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationTypeEnum.ABR">
            <summary>
            Enum ABR for value: ABR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationTypeEnum.HBR">
            <summary>
            Enum HBR for value: HBR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ReplicationType">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Name">
            <summary>
            The name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Description">
            <summary>
            The description of the group.
            </summary>
            <value>The description of the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.AbrSpec">
            <summary>
            Gets or Sets AbrSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.HbrSpec">
            <summary>
            Gets or Sets HbrSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.VvolSpec">
            <summary>
            Gets or Sets VvolSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Location">
            <summary>
            The target location where the protection group will be placed. If not specified - the root folder will be used.
            </summary>
            <value>The target location where the protection group will be placed. If not specified - the root folder will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ProtectedVcGuid">
            <summary>
            The GUID of the protected site VC.
            </summary>
            <value>The GUID of the protected site VC.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Equals(VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec)">
            <summary>
            Returns true if ProtectionGroupCreateSpec instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupCreateSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupCreateSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec">
            <summary>
            A spec to edit the protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.Name">
            <summary>
            The name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.Description">
            <summary>
            The description of the group.
            </summary>
            <value>The description of the group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.AbrSpec">
            <summary>
            Gets or Sets AbrSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.HbrSpec">
            <summary>
            Gets or Sets HbrSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.VvolSpec">
            <summary>
            Gets or Sets VvolSpec
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.Equals(VMware.Bindings.Srm.Model.ProtectionGroupEditSpec)">
            <summary>
            Returns true if ProtectionGroupEditSpec instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupEditSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupEditSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfo">
            <summary>
            Detailed information about a protection group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationTypeEnum">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationTypeEnum.ABR">
            <summary>
            Enum ABR for value: ABR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationTypeEnum.HBR">
            <summary>
            Enum HBR for value: HBR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ReplicationType">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum">
            <summary>
            Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.CLEANUP">
            <summary>
            Enum CLEANUP for value: CLEANUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.PARTIALLYRECOVERED">
            <summary>
            Enum PARTIALLYRECOVERED for value: PARTIALLY_RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.READY">
            <summary>
            Enum READY for value: READY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.RECOVERYCOMPLETE">
            <summary>
            Enum RECOVERYCOMPLETE for value: RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.PARTIALLYREPROTECTED">
            <summary>
            Enum PARTIALLYREPROTECTED for value: PARTIALLY_REPROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryStatus">
            <summary>
            Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum">
            <summary>
            The protection group status.
            </summary>
            <value>The protection group status.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.NOTCONFIGURED">
            <summary>
            Enum NOTCONFIGURED for value: NOT_CONFIGURED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.CONFIGURINGPROTECTION">
            <summary>
            Enum CONFIGURINGPROTECTION for value: CONFIGURING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.REMOVINGPROTECTION">
            <summary>
            Enum REMOVINGPROTECTION for value: REMOVING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.RESTORINGPLACEHOLDERS">
            <summary>
            Enum RESTORINGPLACEHOLDERS for value: RESTORING_PLACEHOLDERS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.OPERATIONSINPROGRESS">
            <summary>
            Enum OPERATIONSINPROGRESS for value: OPERATIONS_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.TESTING">
            <summary>
            Enum TESTING for value: TESTING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.CLEANINGUP">
            <summary>
            Enum CLEANINGUP for value: CLEANING_UP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.RECOVERING">
            <summary>
            Enum RECOVERING for value: RECOVERING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.PARTIALLYRECOVERED">
            <summary>
            Enum PARTIALLYRECOVERED for value: PARTIALLY_RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.RECOVERED">
            <summary>
            Enum RECOVERED for value: RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.REPROTECTING">
            <summary>
            Enum REPROTECTING for value: REPROTECTING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.PARTIALLYREPROTECTED">
            <summary>
            Enum PARTIALLYREPROTECTED for value: PARTIALLY_REPROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.READY">
            <summary>
            Enum READY for value: READY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfo.StatusEnum.LOADING">
            <summary>
            Enum LOADING for value: LOADING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Status">
            <summary>
            The protection group status.
            </summary>
            <value>The protection group status.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Id">
            <summary>
            An ID of the protection group.
            </summary>
            <value>An ID of the protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ProtectedSiteName">
            <summary>
            The name of the protected site.
            </summary>
            <value>The name of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoverySiteName">
            <summary>
            The name of the recovery site.
            </summary>
            <value>The name of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ProtectedVcGuid">
            <summary>
            The ID of the protected vCenter.
            </summary>
            <value>The ID of the protected vCenter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.RecoveryVcGuid">
            <summary>
            The ID of the recovery vCenter.
            </summary>
            <value>The ID of the recovery vCenter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Name">
            <summary>
            The name of the plan.
            </summary>
            <value>The name of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Description">
            <summary>
            The description of the plan.
            </summary>
            <value>The description of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Location">
            <summary>
            The location where the protection group is placed.
            </summary>
            <value>The location where the protection group is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.LocationName">
            <summary>
            The name of the location where the plan is placed.
            </summary>
            <value>The name of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.TotalVms">
            <summary>
            Gets or Sets TotalVms
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ArrayPair">
            <summary>
            Related array pair if this is ABR protection group.
            </summary>
            <value>Related array pair if this is ABR protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfo.DomainId">
            <summary>
            The current fault domain if the group &lt;code&gt;replicationType&lt;/code&gt; is vVols.
            </summary>
            <value>The current fault domain if the group &lt;code&gt;replicationType&lt;/code&gt; is vVols.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Equals(VMware.Bindings.Srm.Model.ProtectionGroupInfo)">
            <summary>
            Returns true if ProtectionGroupInfo instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity">
            <summary>
            Detailed information about a protection group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationTypeEnum">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationTypeEnum.ABR">
            <summary>
            Enum ABR for value: ABR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationTypeEnum.HBR">
            <summary>
            Enum HBR for value: HBR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ReplicationType">
            <summary>
            Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;
            </summary>
            <value>Underlying replication type of the protection group:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown replication.&lt;li&gt;ABR - Array-based replication.&lt;li&gt;HBR - Host-based replication replication.&lt;li&gt;VVOL - VVOL-based replication.&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum">
            <summary>
            Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.CLEANUP">
            <summary>
            Enum CLEANUP for value: CLEANUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.PARTIALLYRECOVERED">
            <summary>
            Enum PARTIALLYRECOVERED for value: PARTIALLY_RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.READY">
            <summary>
            Enum READY for value: READY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.RECOVERYCOMPLETE">
            <summary>
            Enum RECOVERYCOMPLETE for value: RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.PARTIALLYREPROTECTED">
            <summary>
            Enum PARTIALLYREPROTECTED for value: PARTIALLY_REPROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryStatus">
            <summary>
            Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Describes the recovery status of a protection group&lt;ul&gt;&lt;li&gt;UNKNOWN - Recovery status could not be determined&lt;/li&gt; &lt;li&gt;CLEANUP - Cleanup recovery is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_RECOVERED - Some of the group&#39;s VMs have been successfully failed over, while others have not.&lt;/li&gt; &lt;li&gt;READY - Protection group is ready for recovery&lt;/li&gt; &lt;li&gt;RECOVERY_COMPLETE - Recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;RECOVERY_IN_PROGRESS - Recovery of the protection group is in progress&lt;/li&gt; &lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect of the protection group is in progress&lt;/li&gt; &lt;li&gt;PARTIALLY_REPROTECTED - Some of the group&#39;s VMs have been successfully reprotected, while others have not.&lt;/li&gt; &lt;li&gt;TEST_COMPLETE - Test recovery of the protection group has completed&lt;/li&gt; &lt;li&gt;TEST_IN_PROGRESS - Test recovery of the protection group is in progress&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum">
            <summary>
            The protection group status.
            </summary>
            <value>The protection group status.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.NOTCONFIGURED">
            <summary>
            Enum NOTCONFIGURED for value: NOT_CONFIGURED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.CONFIGURINGPROTECTION">
            <summary>
            Enum CONFIGURINGPROTECTION for value: CONFIGURING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.REMOVINGPROTECTION">
            <summary>
            Enum REMOVINGPROTECTION for value: REMOVING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.RESTORINGPLACEHOLDERS">
            <summary>
            Enum RESTORINGPLACEHOLDERS for value: RESTORING_PLACEHOLDERS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.OPERATIONSINPROGRESS">
            <summary>
            Enum OPERATIONSINPROGRESS for value: OPERATIONS_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.TESTING">
            <summary>
            Enum TESTING for value: TESTING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.CLEANINGUP">
            <summary>
            Enum CLEANINGUP for value: CLEANING_UP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.RECOVERING">
            <summary>
            Enum RECOVERING for value: RECOVERING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.PARTIALLYRECOVERED">
            <summary>
            Enum PARTIALLYRECOVERED for value: PARTIALLY_RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.RECOVERED">
            <summary>
            Enum RECOVERED for value: RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.REPROTECTING">
            <summary>
            Enum REPROTECTING for value: REPROTECTING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.PARTIALLYREPROTECTED">
            <summary>
            Enum PARTIALLYREPROTECTED for value: PARTIALLY_REPROTECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.READY">
            <summary>
            Enum READY for value: READY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.StatusEnum.LOADING">
            <summary>
            Enum LOADING for value: LOADING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Status">
            <summary>
            The protection group status.
            </summary>
            <value>The protection group status.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Id">
            <summary>
            An ID of the protection group.
            </summary>
            <value>An ID of the protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ProtectedSiteName">
            <summary>
            The name of the protected site.
            </summary>
            <value>The name of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoverySiteName">
            <summary>
            The name of the recovery site.
            </summary>
            <value>The name of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ProtectedVcGuid">
            <summary>
            The ID of the protected vCenter.
            </summary>
            <value>The ID of the protected vCenter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.RecoveryVcGuid">
            <summary>
            The ID of the recovery vCenter.
            </summary>
            <value>The ID of the recovery vCenter.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Name">
            <summary>
            The name of the plan.
            </summary>
            <value>The name of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Description">
            <summary>
            The description of the plan.
            </summary>
            <value>The description of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Location">
            <summary>
            The location where the protection group is placed.
            </summary>
            <value>The location where the protection group is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.LocationName">
            <summary>
            The name of the location where the plan is placed.
            </summary>
            <value>The name of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.TotalVms">
            <summary>
            Gets or Sets TotalVms
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ArrayPair">
            <summary>
            Related array pair if this is ABR protection group.
            </summary>
            <value>Related array pair if this is ABR protection group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.DomainId">
            <summary>
            The current fault domain if the group &lt;code&gt;replicationType&lt;/code&gt; is vVols.
            </summary>
            <value>The current fault domain if the group &lt;code&gt;replicationType&lt;/code&gt; is vVols.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity)">
            <summary>
            Returns true if ProtectionGroupInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList">
            <summary>
            List of entities about: Detailed information about a protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList)">
            <summary>
            Returns true if ProtectionGroupInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo">
            <summary>
            Details about a VM and its protection settings within a protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.ProtectionInfo">
            <summary>
            Gets or Sets ProtectionInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.ProtectionStatusDetails">
            <summary>
            Gets or Sets ProtectionStatusDetails
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.VvolReplicationGroupData">
            <summary>
            VMware vSphere Virtual Volumes (vVols) replication groups this VM is part of. Null if the VM is not part of the vVols protection group.
            </summary>
            <value>VMware vSphere Virtual Volumes (vVols) replication groups this VM is part of. Null if the VM is not part of the vVols protection group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Equals(VMware.Bindings.Srm.Model.ProtectionGroupVmInfo)">
            <summary>
            Returns true if ProtectionGroupVmInfo instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupVmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity">
            <summary>
            Details about a VM and its protection settings within a protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.ProtectionInfo">
            <summary>
            Gets or Sets ProtectionInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.ProtectionStatusDetails">
            <summary>
            Gets or Sets ProtectionStatusDetails
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.VvolReplicationGroupData">
            <summary>
            VMware vSphere Virtual Volumes (vVols) replication groups this VM is part of. Null if the VM is not part of the vVols protection group.
            </summary>
            <value>VMware vSphere Virtual Volumes (vVols) replication groups this VM is part of. Null if the VM is not part of the vVols protection group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity)">
            <summary>
            Returns true if ProtectionGroupVmInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupVmInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList">
            <summary>
            List of entities about: Details about a VM and its protection settings within a protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList)">
            <summary>
            Returns true if ProtectionGroupVmInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ProtectionGroupVmInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionGroupVmInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionInventoryItem">
            <summary>
            Inventory object related to protection, such as folder or protection group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionInventoryItem.TypeEnum">
            <summary>
            Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;
            </summary>
            <value>Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionInventoryItem.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionInventoryItem.TypeEnum.PROTECTIONGROUP">
            <summary>
            Enum PROTECTIONGROUP for value: PROTECTION_GROUP
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Type">
            <summary>
            Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;
            </summary>
            <value>Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionInventoryItem" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Id">
            <summary>
            ID of the inventory item.
            </summary>
            <value>ID of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Name">
            <summary>
            Name of the inventory item.
            </summary>
            <value>Name of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Path">
            <summary>
            Path to the inventory item.
            </summary>
            <value>Path to the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Parent">
            <summary>
            Parent of the inventory item.
            </summary>
            <value>Parent of the inventory item.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Equals(VMware.Bindings.Srm.Model.ProtectionInventoryItem)">
            <summary>
            Returns true if ProtectionInventoryItem instances are equal
            </summary>
            <param name="input">Instance of ProtectionInventoryItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItem.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity">
            <summary>
            Inventory object related to protection, such as folder or protection group.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.TypeEnum">
            <summary>
            Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;
            </summary>
            <value>Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.TypeEnum.PROTECTIONGROUP">
            <summary>
            Enum PROTECTIONGROUP for value: PROTECTION_GROUP
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Type">
            <summary>
            Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;
            </summary>
            <value>Protection inventory item type:&lt;ul&gt;&lt;li&gt;FOLDER - .&lt;li&gt;PROTECTION_GROUP - .&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Id">
            <summary>
            ID of the inventory item.
            </summary>
            <value>ID of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Name">
            <summary>
            Name of the inventory item.
            </summary>
            <value>Name of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Path">
            <summary>
            Path to the inventory item.
            </summary>
            <value>Path to the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Parent">
            <summary>
            Parent of the inventory item.
            </summary>
            <value>Parent of the inventory item.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity)">
            <summary>
            Returns true if ProtectionInventoryItemDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ProtectionInventoryItemDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList">
            <summary>
            List of entities about: Inventory object related to protection, such as folder or protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.Equals(VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList)">
            <summary>
            Returns true if ProtectionInventoryItemDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ProtectionInventoryItemDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ProtectionInventoryItemDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoverPlanSpec">
            <summary>
            A spec specifying recover operation settings.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoverPlanSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoverPlanSpec.SkipProtectionSiteOperations">
            <summary>
            Skips all recovery plan operation that involve communication with the protection site. These include: shutting down of protected VMs, syncing, and deactivating. If set to true, &lt;code&gt;sync_data&lt;/code&gt; setting is ignored and assumed to be false. This flag is ignored if &lt;code&gt;planned_failover&lt;/code&gt; is set to true. In order to set to true, first activate &lt;code&gt;recovery.forceRecovery&lt;/code&gt; advanced setting.
            </summary>
            <value>Skips all recovery plan operation that involve communication with the protection site. These include: shutting down of protected VMs, syncing, and deactivating. If set to true, &lt;code&gt;sync_data&lt;/code&gt; setting is ignored and assumed to be false. This flag is ignored if &lt;code&gt;planned_failover&lt;/code&gt; is set to true. In order to set to true, first activate &lt;code&gt;recovery.forceRecovery&lt;/code&gt; advanced setting.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoverPlanSpec.MigrateEligibleVms">
            <summary>
            Whether we should perform xVC-vMotion for eligible VMs during the planned failover workflow. If this option is set, failover will attempt to use xVC-vMotion for all protected powered on VMs residing on stretched storage at the protected site. If this option is not set, failover will be performed using the regular recovery workflow for replicated LUNs (including stretched devices). This option will be available only for planned failover. If xVC-vMotion fails for any reason, the recovery plan will stop with appropriate error. Must be true if vMotion is supported.
            </summary>
            <value>Whether we should perform xVC-vMotion for eligible VMs during the planned failover workflow. If this option is set, failover will attempt to use xVC-vMotion for all protected powered on VMs residing on stretched storage at the protected site. If this option is not set, failover will be performed using the regular recovery workflow for replicated LUNs (including stretched devices). This option will be available only for planned failover. If xVC-vMotion fails for any reason, the recovery plan will stop with appropriate error. Must be true if vMotion is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoverPlanSpec.SyncData">
            <summary>
            Whether to call the replication providers to synchronize the outstanding data before the operation.
            </summary>
            <value>Whether to call the replication providers to synchronize the outstanding data before the operation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoverPlanSpec.PlannedFailover">
            <summary>
            Whether this recover operation is a planned failover. Planned failovers will attempt to restore the protection site to the original state if an error (or user cancellation) occurs before the storage steps.
            </summary>
            <value>Whether this recover operation is a planned failover. Planned failovers will attempt to restore the protection site to the original state if an error (or user cancellation) occurs before the storage steps.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.Equals(VMware.Bindings.Srm.Model.RecoverPlanSpec)">
            <summary>
            Returns true if RecoverPlanSpec instances are equal
            </summary>
            <param name="input">Instance of RecoverPlanSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoverPlanSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryInventoryItem">
            <summary>
            Inventory object related to recovery, such as folder or recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryInventoryItem.TypeEnum">
            <summary>
            Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;
            </summary>
            <value>Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryInventoryItem.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryInventoryItem.TypeEnum.RECOVERYPLAN">
            <summary>
            Enum RECOVERYPLAN for value: RECOVERY_PLAN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Type">
            <summary>
            Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;
            </summary>
            <value>Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryInventoryItem" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Id">
            <summary>
            ID of the inventory item.
            </summary>
            <value>ID of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Name">
            <summary>
            Name of the inventory item.
            </summary>
            <value>Name of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Path">
            <summary>
            Path to the inventory item.
            </summary>
            <value>Path to the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Parent">
            <summary>
            Parent of the inventory item.
            </summary>
            <value>Parent of the inventory item.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Equals(VMware.Bindings.Srm.Model.RecoveryInventoryItem)">
            <summary>
            Returns true if RecoveryInventoryItem instances are equal
            </summary>
            <param name="input">Instance of RecoveryInventoryItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItem.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity">
            <summary>
            Inventory object related to recovery, such as folder or recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.TypeEnum">
            <summary>
            Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;
            </summary>
            <value>Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.TypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.TypeEnum.RECOVERYPLAN">
            <summary>
            Enum RECOVERYPLAN for value: RECOVERY_PLAN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Type">
            <summary>
            Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;
            </summary>
            <value>Type of inventory item:&lt;ul&gt;&lt;li&gt;FOLDER - folder.&lt;li&gt;RECOVERY_PLAN - recovery plan.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Id">
            <summary>
            ID of the inventory item.
            </summary>
            <value>ID of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Name">
            <summary>
            Name of the inventory item.
            </summary>
            <value>Name of the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Path">
            <summary>
            Path to the inventory item.
            </summary>
            <value>Path to the inventory item.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Parent">
            <summary>
            Parent of the inventory item.
            </summary>
            <value>Parent of the inventory item.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Equals(VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity)">
            <summary>
            Returns true if RecoveryInventoryItemDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of RecoveryInventoryItemDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList">
            <summary>
            List of entities about: Inventory object related to recovery, such as folder or recovery plan.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.Equals(VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList)">
            <summary>
            Returns true if RecoveryInventoryItemDrResponseList instances are equal
            </summary>
            <param name="input">Instance of RecoveryInventoryItemDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryInventoryItemDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec">
            <summary>
            A spec to create recovery plan under a given folder &lt;code&gt;location&lt;/code&gt;.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Location">
            <summary>
            Target location where the recovery plan will be placed. If not specified - the root folder will be used.
            </summary>
            <value>Target location where the recovery plan will be placed. If not specified - the root folder will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Name">
            <summary>
            Name of the recovery plan
            </summary>
            <value>Name of the recovery plan</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Description">
            <summary>
            Description of the recovery plan.
            </summary>
            <value>Description of the recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.ProtectedVcGuid">
            <summary>
            GUID of the protected site VC.
            </summary>
            <value>GUID of the protected site VC.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.ProtectionGroups">
            <summary>
            A list of protection groups to be added to the recovery plan.
            </summary>
            <value>A list of protection groups to be added to the recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.TestNetworkMappings">
            <summary>
            A list of test network mappings to be added to the recovery plan.
            </summary>
            <value>A list of test network mappings to be added to the recovery plan.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Equals(VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec)">
            <summary>
            Returns true if RecoveryPlanCreateSpec instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanCreateSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanCreateSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec">
            <summary>
            A spec to edit the recovery plan.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.Name">
            <summary>
            Name of the recovery plan. If null - the name will not be changed.
            </summary>
            <value>Name of the recovery plan. If null - the name will not be changed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.Description">
            <summary>
            Description of the recovery plan. If null - the description will not be updated.
            </summary>
            <value>Description of the recovery plan. If null - the description will not be updated.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.ProtectedVcGuid">
            <summary>
            GUID of the protected site vCenter Server. Use in order to change recovery plan direction. Plan direction change is possible when there are no protection groups in the plan. If null - will not try to change the direction of the recovery plan.
            </summary>
            <value>GUID of the protected site vCenter Server. Use in order to change recovery plan direction. Plan direction change is possible when there are no protection groups in the plan. If null - will not try to change the direction of the recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.ProtectionGroups">
            <summary>
            A list of protection groups to be added to the recovery plan.Protection groups currently in the recovery plan and not in this list will be removed from the recovery plan.If null - no change in the protection groups will be done.
            </summary>
            <value>A list of protection groups to be added to the recovery plan.Protection groups currently in the recovery plan and not in this list will be removed from the recovery plan.If null - no change in the protection groups will be done.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.TestNetworkMappings">
            <summary>
            A list of test network mappings to be used for the recovery plan.If existing test network mapping is not part of the list - it will be removed from the recovery plan and site-level mapping will be used.If at site level there is no test network mapping defined, an isolated test network will be created during test operation.If null - no changes in the test network mappings will be done.
            </summary>
            <value>A list of test network mappings to be used for the recovery plan.If existing test network mapping is not part of the list - it will be removed from the recovery plan and site-level mapping will be used.If at site level there is no test network mapping defined, an isolated test network will be created during test operation.If null - no changes in the test network mappings will be done.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.VmsToSuspend">
            <summary>
             A list of VMs to be suspended during recovery. Must contain references for VMs from the recovery site.If a currently suspended VM is not part of this spec when modifying the recovery plan, it will not be suspended anymore.If null - VMs to be suspended will not be changed.
            </summary>
            <value> A list of VMs to be suspended during recovery. Must contain references for VMs from the recovery site.If a currently suspended VM is not part of this spec when modifying the recovery plan, it will not be suspended anymore.If null - VMs to be suspended will not be changed.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.Equals(VMware.Bindings.Srm.Model.RecoveryPlanEditSpec)">
            <summary>
            Returns true if RecoveryPlanEditSpec instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanEditSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanEditSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanInfo">
            <summary>
            Detailed information about a recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum">
            <summary>
            The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;
            </summary>
            <value>The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.READYSTATE">
            <summary>
            Enum READYSTATE for value: READY_STATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.NOPROTECTIONGROUPS">
            <summary>
            Enum NOPROTECTIONGROUPS for value: NO_PROTECTION_GROUPS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.DIRECTIONERROR">
            <summary>
            Enum DIRECTIONERROR for value: DIRECTION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.DELETING">
            <summary>
            Enum DELETING for value: DELETING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.WAITINGFORUSERINPUT">
            <summary>
            Enum WAITINGFORUSERINPUT for value: WAITING_FOR_USER_INPUT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.CANCELINPROGRESS">
            <summary>
            Enum CANCELINPROGRESS for value: CANCEL_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.PROTECTIONGROUPSINUSE">
            <summary>
            Enum PROTECTIONGROUPSINUSE for value: PROTECTION_GROUPS_IN_USE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.TESTINTERRUPTED">
            <summary>
            Enum TESTINTERRUPTED for value: TEST_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.CLEANUPINPROGRESS">
            <summary>
            Enum CLEANUPINPROGRESS for value: CLEANUP_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.CLEANUPINCOMPLETE">
            <summary>
            Enum CLEANUPINCOMPLETE for value: CLEANUP_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.CLEANUPINTERRUPTED">
            <summary>
            Enum CLEANUPINTERRUPTED for value: CLEANUP_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.RECOVERYCOMPLETE">
            <summary>
            Enum RECOVERYCOMPLETE for value: RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.RECOVERYSTARTED">
            <summary>
            Enum RECOVERYSTARTED for value: RECOVERY_STARTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.PARTIALRECOVERY">
            <summary>
            Enum PARTIALRECOVERY for value: PARTIAL_RECOVERY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.RECOVERYSPLITBRAIN">
            <summary>
            Enum RECOVERYSPLITBRAIN for value: RECOVERY_SPLIT_BRAIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.DISASTERRECOVERYCOMPLETE">
            <summary>
            Enum DISASTERRECOVERYCOMPLETE for value: DISASTER_RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.INCOMPLETERECOVERY">
            <summary>
            Enum INCOMPLETERECOVERY for value: INCOMPLETE_RECOVERY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.RECOVERYINTERRUPTED">
            <summary>
            Enum RECOVERYINTERRUPTED for value: RECOVERY_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.INCOMPLETEREPROTECT">
            <summary>
            Enum INCOMPLETEREPROTECT for value: INCOMPLETE_REPROTECT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.PARTIALREPROTECT">
            <summary>
            Enum PARTIALREPROTECT for value: PARTIAL_REPROTECT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.REPROTECTINTERRUPTED">
            <summary>
            Enum REPROTECTINTERRUPTED for value: REPROTECT_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.UNKNOWNSTATE">
            <summary>
            Enum UNKNOWNSTATE for value: UNKNOWN_STATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfo.StatusEnum.SYNCCONFLICT">
            <summary>
            Enum SYNCCONFLICT for value: SYNC_CONFLICT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Status">
            <summary>
            The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;
            </summary>
            <value>The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Id">
            <summary>
            An ID of the recovery plan.
            </summary>
            <value>An ID of the recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.ProtectedSiteName">
            <summary>
            The name of the protected site.
            </summary>
            <value>The name of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.RecoverySiteName">
            <summary>
            The name of the recovery site.
            </summary>
            <value>The name of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.ProtectedVcGuid">
            <summary>
            An ID of the protected site.
            </summary>
            <value>An ID of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.RecoveryVcGuid">
            <summary>
            An ID of the recovery site.
            </summary>
            <value>An ID of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Name">
            <summary>
            The Name of the plan.
            </summary>
            <value>The Name of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Description">
            <summary>
            The description of the plan.
            </summary>
            <value>The description of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Location">
            <summary>
            The ID of the location where the plan is placed.
            </summary>
            <value>The ID of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.LocationName">
            <summary>
            The name of the location where the plan is placed.
            </summary>
            <value>The name of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Progress">
            <summary>
            The current progress if the plan is running.
            </summary>
            <value>The current progress if the plan is running.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfo.IsRunning">
            <summary>
            Whether the plan is currently running.
            </summary>
            <value>Whether the plan is currently running.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Equals(VMware.Bindings.Srm.Model.RecoveryPlanInfo)">
            <summary>
            Returns true if RecoveryPlanInfo instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity">
            <summary>
            Detailed information about a recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum">
            <summary>
            The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;
            </summary>
            <value>The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.READYSTATE">
            <summary>
            Enum READYSTATE for value: READY_STATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.NOPROTECTIONGROUPS">
            <summary>
            Enum NOPROTECTIONGROUPS for value: NO_PROTECTION_GROUPS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.DIRECTIONERROR">
            <summary>
            Enum DIRECTIONERROR for value: DIRECTION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.DELETING">
            <summary>
            Enum DELETING for value: DELETING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.WAITINGFORUSERINPUT">
            <summary>
            Enum WAITINGFORUSERINPUT for value: WAITING_FOR_USER_INPUT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.CANCELINPROGRESS">
            <summary>
            Enum CANCELINPROGRESS for value: CANCEL_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.PROTECTIONGROUPSINUSE">
            <summary>
            Enum PROTECTIONGROUPSINUSE for value: PROTECTION_GROUPS_IN_USE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.TESTCOMPLETE">
            <summary>
            Enum TESTCOMPLETE for value: TEST_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.TESTINTERRUPTED">
            <summary>
            Enum TESTINTERRUPTED for value: TEST_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.CLEANUPINPROGRESS">
            <summary>
            Enum CLEANUPINPROGRESS for value: CLEANUP_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.CLEANUPINCOMPLETE">
            <summary>
            Enum CLEANUPINCOMPLETE for value: CLEANUP_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.CLEANUPINTERRUPTED">
            <summary>
            Enum CLEANUPINTERRUPTED for value: CLEANUP_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.RECOVERYCOMPLETE">
            <summary>
            Enum RECOVERYCOMPLETE for value: RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.RECOVERYSTARTED">
            <summary>
            Enum RECOVERYSTARTED for value: RECOVERY_STARTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.PARTIALRECOVERY">
            <summary>
            Enum PARTIALRECOVERY for value: PARTIAL_RECOVERY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.RECOVERYSPLITBRAIN">
            <summary>
            Enum RECOVERYSPLITBRAIN for value: RECOVERY_SPLIT_BRAIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.DISASTERRECOVERYCOMPLETE">
            <summary>
            Enum DISASTERRECOVERYCOMPLETE for value: DISASTER_RECOVERY_COMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.INCOMPLETERECOVERY">
            <summary>
            Enum INCOMPLETERECOVERY for value: INCOMPLETE_RECOVERY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.RECOVERYINTERRUPTED">
            <summary>
            Enum RECOVERYINTERRUPTED for value: RECOVERY_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.INCOMPLETEREPROTECT">
            <summary>
            Enum INCOMPLETEREPROTECT for value: INCOMPLETE_REPROTECT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.PARTIALREPROTECT">
            <summary>
            Enum PARTIALREPROTECT for value: PARTIAL_REPROTECT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.REPROTECTINTERRUPTED">
            <summary>
            Enum REPROTECTINTERRUPTED for value: REPROTECT_INTERRUPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.UNKNOWNSTATE">
            <summary>
            Enum UNKNOWNSTATE for value: UNKNOWN_STATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.StatusEnum.SYNCCONFLICT">
            <summary>
            Enum SYNCCONFLICT for value: SYNC_CONFLICT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Status">
            <summary>
            The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;
            </summary>
            <value>The current status of the plan&lt;ul&gt;&lt;li&gt;READY_STATE - This plan is ready for test or recovery&lt;li&gt;NO_PROTECTION_GROUPS - This plan cannot be run because it does not contain any protection groups. To addprotection groups to this plan, press the Edit Recovery Plan button, which will open the wizard for editing the plan.&lt;li&gt;DIRECTION_ERROR - This plan contains protection groups that are not all configured for replication in thesame direction. This might have been caused by running other recovery plans that contain the same protection groups.To resolve this issue, remove protection groups from this plan so that all protection groups in this plan areconfigured for the same direction.&lt;li&gt;DELETING - Deleting&lt;li&gt;WAITING_FOR_USER_INPUT - The test or recoveryhas paused at a user prompt. Dismiss the prompt to resume the recovery.&lt;li&gt;CANCEL_IN_PROGRESS - Cancel inprogress&lt;li&gt;TEST_IN_PROGRESS - A test of this plan is currently in progress.&lt;li&gt;PROTECTION_GROUPS_IN_USE - This plan contains protection groups that are in use by another recovery planthat is either currently running or in the Test Complete state.&lt;li&gt;TEST_COMPLETE - The virtual machines havebeen recovered in a test environment at the recovery site. Review the plan history to view any errors or warnings.When you are ready to remove the test environment, run cleanup on this plan.&lt;li&gt;TEST_INTERRUPTED - Run testagain immediately. SRM Server did not complete a test that was in progress.&lt;li&gt;CLEANUP_IN_PROGRESS - Cleanupin progress&lt;li&gt;CLEANUP_INCOMPLETE - The cleanup operation did not complete successfully, possibly due tostorage issues. Review the plan history to view any errors or warnings. After fixing the issues, press Cleanup to runthe cleanup operation again.&lt;li&gt;CLEANUP_INTERRUPTED - Run cleanup again immediately. SRM server did notcomplete a cleanup that was in progress.&lt;li&gt;RECOVERY_IN_PROGRESS - Recovery in progress&lt;li&gt;RECOVERY_COMPLETE - The recovery has completed. Review the plan history to view any errors or warnings. Youcan now press Reprotect to configure protection in the reverse direction. Note that if you plan to failback thevirtual machines to the original site, you must first run the plan in the reprotect mode, then once protection isconfigured in reverse, you can run the plan in recovery mode to failback the virtual machines to the original site.&lt;li&gt;RECOVERY_STARTED - A recovery was started but not completed. The sites might have been disconnected duringthe recovery operation. Log into the recovery site or reconnect the sites to complete the recovery.&lt;li&gt;PARTIAL_RECOVERY - Some of the protection groups in this plan have been recovered by another recovery plan.&lt;li&gt;RECOVERY_SPLIT_BRAIN - Run recovery again. The recovery operation could not complete all of the stepsat the protected site. If the plan was run while the sites were disconnected, run the plan again immediately. If thesites were connected during recovery, there might be errors with the VMs. Check the plan history to view errors thatmight need to be corrected before running the plan again. Running recovery again will not affect the recovered VMs atthe recovery site.&lt;li&gt;DISASTER_RECOVERY_COMPLETE - Disaster recovery has completed. Review the plan history toview any errors or warnings. The recovery plan was not able to shut down the original protected VMs at the protectedsite because the sites were not connected. If the sites are reconnected, you will be prompted to run this recoveryplan again to resolve this issue.&lt;li&gt;INCOMPLETE_RECOVERY - The recovery operation encountered errors. Reviewthe plan history to view any errors or warnings. Once the cause of the errors has been fixed, you can press Recoveryagain. Virtual machines that have already been successfully recovered will not be affected by running the recoveryagain.&lt;li&gt;RECOVERY_INTERRUPTED - Recovery operation was interrupted and did not complete. Run recovery againimmediately to prevent environment inconsistency issues.&lt;li&gt;REPROTECT_IN_PROGRESS - Reprotect in progress&lt;li&gt;INCOMPLETE_REPROTECT - The reprotect operation encountered errors. Review the plan history to view anyerrors or warnings. Once the cause of the errors has been fixed, you can run reprotect again. Items that have alreadybeen successfully reprotected will not be affected by running reprotect again.&lt;li&gt;PARTIAL_REPROTECT - Some ofthe protection groups in this plan have been reprotected by another recovery plan.&lt;li&gt;REPROTECT_INTERRUPTED -Run reprotect again immediately. SRM server did not complete a reprotect operation that was in progress.&lt;li&gt;UNKNOWN_STATE - An unexpected error occurred. This may be due to corrupt data. Contact customer support.&lt;li&gt;SYNC_CONFLICT - Changes have been made to this plan at both sites. Review the current settings by editingthe plan to correct the problem.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Id">
            <summary>
            An ID of the recovery plan.
            </summary>
            <value>An ID of the recovery plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.ProtectedSiteName">
            <summary>
            The name of the protected site.
            </summary>
            <value>The name of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.RecoverySiteName">
            <summary>
            The name of the recovery site.
            </summary>
            <value>The name of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.ProtectedVcGuid">
            <summary>
            An ID of the protected site.
            </summary>
            <value>An ID of the protected site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.RecoveryVcGuid">
            <summary>
            An ID of the recovery site.
            </summary>
            <value>An ID of the recovery site.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Name">
            <summary>
            The Name of the plan.
            </summary>
            <value>The Name of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Description">
            <summary>
            The description of the plan.
            </summary>
            <value>The description of the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Location">
            <summary>
            The ID of the location where the plan is placed.
            </summary>
            <value>The ID of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.LocationName">
            <summary>
            The name of the location where the plan is placed.
            </summary>
            <value>The name of the location where the plan is placed.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Progress">
            <summary>
            The current progress if the plan is running.
            </summary>
            <value>The current progress if the plan is running.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.IsRunning">
            <summary>
            Whether the plan is currently running.
            </summary>
            <value>Whether the plan is currently running.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity)">
            <summary>
            Returns true if RecoveryPlanInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList">
            <summary>
            List of entities about: Detailed information about a recovery plan.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList)">
            <summary>
            Returns true if RecoveryPlanInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo">
            <summary>
            Details about a VM within a recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum">
            <summary>
            Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;
            </summary>
            <value>Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.READYTORECOVER">
            <summary>
            Enum READYTORECOVER for value: READY_TO_RECOVER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.TESTERROR">
            <summary>
            Enum TESTERROR for value: TEST_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.TESTWARNING">
            <summary>
            Enum TESTWARNING for value: TEST_WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.TESTSUCCEEDED">
            <summary>
            Enum TESTSUCCEEDED for value: TEST_SUCCEEDED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.TESTINCOMPLETE">
            <summary>
            Enum TESTINCOMPLETE for value: TEST_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.CLEANUPINPROGRESS">
            <summary>
            Enum CLEANUPINPROGRESS for value: CLEANUP_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.CLEANUPERROR">
            <summary>
            Enum CLEANUPERROR for value: CLEANUP_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.CLEANUPINCOMPLETE">
            <summary>
            Enum CLEANUPINCOMPLETE for value: CLEANUP_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.RECOVERYERROR">
            <summary>
            Enum RECOVERYERROR for value: RECOVERY_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.RECOVERYWARNING">
            <summary>
            Enum RECOVERYWARNING for value: RECOVERY_WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.RECOVERYSUCCEEDED">
            <summary>
            Enum RECOVERYSUCCEEDED for value: RECOVERY_SUCCEEDED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.RECOVERYINCOMPLETE">
            <summary>
            Enum RECOVERYINCOMPLETE for value: RECOVERY_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.REPROTECTERROR">
            <summary>
            Enum REPROTECTERROR for value: REPROTECT_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.REPROTECTINCOMPLETE">
            <summary>
            Enum REPROTECTINCOMPLETE for value: REPROTECT_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Status">
            <summary>
            Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;
            </summary>
            <value>Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Id">
            <summary>
            The identifier of the virtual machine
            </summary>
            <value>The identifier of the virtual machine</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Name">
            <summary>
            The name of the virtual machine
            </summary>
            <value>The name of the virtual machine</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.RecoverySettings">
            <summary>
            Gets or Sets RecoverySettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.ManagingRecoveryPlan">
            <summary>
            Name of the plan which was run last on this VM.
            </summary>
            <value>Name of the plan which was run last on this VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.ProtectionGroupName">
            <summary>
            Name of the protection group which is protecting the VM.
            </summary>
            <value>Name of the protection group which is protecting the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.ProtectionGroup">
            <summary>
            The ID of the protection group which is protecting the VM.
            </summary>
            <value>The ID of the protection group which is protecting the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Equals(VMware.Bindings.Srm.Model.RecoveryPlanVmInfo)">
            <summary>
            Returns true if RecoveryPlanVmInfo instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanVmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity">
            <summary>
            Details about a VM within a recovery plan.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum">
            <summary>
            Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;
            </summary>
            <value>Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.READYTORECOVER">
            <summary>
            Enum READYTORECOVER for value: READY_TO_RECOVER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.TESTINPROGRESS">
            <summary>
            Enum TESTINPROGRESS for value: TEST_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.TESTERROR">
            <summary>
            Enum TESTERROR for value: TEST_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.TESTWARNING">
            <summary>
            Enum TESTWARNING for value: TEST_WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.TESTSUCCEEDED">
            <summary>
            Enum TESTSUCCEEDED for value: TEST_SUCCEEDED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.TESTINCOMPLETE">
            <summary>
            Enum TESTINCOMPLETE for value: TEST_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.CLEANUPINPROGRESS">
            <summary>
            Enum CLEANUPINPROGRESS for value: CLEANUP_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.CLEANUPERROR">
            <summary>
            Enum CLEANUPERROR for value: CLEANUP_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.CLEANUPINCOMPLETE">
            <summary>
            Enum CLEANUPINCOMPLETE for value: CLEANUP_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.RECOVERYINPROGRESS">
            <summary>
            Enum RECOVERYINPROGRESS for value: RECOVERY_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.RECOVERYERROR">
            <summary>
            Enum RECOVERYERROR for value: RECOVERY_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.RECOVERYWARNING">
            <summary>
            Enum RECOVERYWARNING for value: RECOVERY_WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.RECOVERYSUCCEEDED">
            <summary>
            Enum RECOVERYSUCCEEDED for value: RECOVERY_SUCCEEDED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.RECOVERYINCOMPLETE">
            <summary>
            Enum RECOVERYINCOMPLETE for value: RECOVERY_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.REPROTECTINPROGRESS">
            <summary>
            Enum REPROTECTINPROGRESS for value: REPROTECT_IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.REPROTECTERROR">
            <summary>
            Enum REPROTECTERROR for value: REPROTECT_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.REPROTECTINCOMPLETE">
            <summary>
            Enum REPROTECTINCOMPLETE for value: REPROTECT_INCOMPLETE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Status">
            <summary>
            Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;
            </summary>
            <value>Recovery status of the protected virtual machine:&lt;ul&gt;&lt;li&gt;READY_TO_RECOVER&lt;li&gt;TEST_IN_PROGRESS&lt;li&gt;TEST_ERROR&lt;li&gt;TEST_WARNING&lt;li&gt;TEST_SUCCEEDED&lt;li&gt;TEST_INCOMPLETE&lt;li&gt;CLEANUP_IN_PROGRESS&lt;li&gt;CLEANUP_ERROR&lt;li&gt;CLEANUP_INCOMPLETE&lt;li&gt;RECOVERY_IN_PROGRESS&lt;li&gt;RECOVERY_ERROR&lt;li&gt;RECOVERY_WARNING&lt;li&gt;RECOVERY_SUCCEEDED&lt;li&gt;RECOVERY_INCOMPLETE&lt;li&gt;REPROTECT_IN_PROGRESS&lt;li&gt;REPROTECT_ERROR&lt;li&gt;REPROTECT_INCOMPLETE&lt;li&gt;UNKNOWN&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Id">
            <summary>
            The identifier of the virtual machine
            </summary>
            <value>The identifier of the virtual machine</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Name">
            <summary>
            The name of the virtual machine
            </summary>
            <value>The name of the virtual machine</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.RecoverySettings">
            <summary>
            Gets or Sets RecoverySettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.ManagingRecoveryPlan">
            <summary>
            Name of the plan which was run last on this VM.
            </summary>
            <value>Name of the plan which was run last on this VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.ProtectionGroupName">
            <summary>
            Name of the protection group which is protecting the VM.
            </summary>
            <value>Name of the protection group which is protecting the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.ProtectionGroup">
            <summary>
            The ID of the protection group which is protecting the VM.
            </summary>
            <value>The ID of the protection group which is protecting the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity)">
            <summary>
            Returns true if RecoveryPlanVmInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanVmInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList">
            <summary>
            List of entities about: Details about a VM within a recovery plan.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList)">
            <summary>
            Returns true if RecoveryPlanVmInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of RecoveryPlanVmInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryPlanVmInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryStep">
            <summary>
            Information about a recovery step.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum">
            <summary>
            The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;
            </summary>
            <value>The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.INACTIVE">
            <summary>
            Enum INACTIVE for value: INACTIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.SKIPPED">
            <summary>
            Enum SKIPPED for value: SKIPPED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.ALREADYDONE">
            <summary>
            Enum ALREADYDONE for value: ALREADY_DONE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStep.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Status">
            <summary>
            The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;
            </summary>
            <value>The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryStep" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.PlanCalloutPositionSpec">
            <summary>
            Gets or Sets PlanCalloutPositionSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.VmCalloutPositionSpec">
            <summary>
            Gets or Sets VmCalloutPositionSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Title">
            <summary>
            Title of the recovery step.
            </summary>
            <value>Title of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.StepNumber">
            <summary>
            Step number of the recovery step.
            </summary>
            <value>Step number of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.ChildCount">
            <summary>
            Number of child steps.
            </summary>
            <value>Number of child steps.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Depth">
            <summary>
            Depth of the recovery step.
            </summary>
            <value>Depth of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.FinishTime">
            <summary>
            The finish time of the step if is finished, in milliseconds.
            </summary>
            <value>The finish time of the step if is finished, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.StartTime">
            <summary>
            The start time of the step if it is started, in milliseconds.
            </summary>
            <value>The start time of the step if it is started, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Expanded">
            <summary>
            Whether this recovery step is expanded.
            </summary>
            <value>Whether this recovery step is expanded.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Id">
            <summary>
            ID of the recovery step.
            </summary>
            <value>ID of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Progress">
            <summary>
            The current progress of the recovery step if it is currently running.
            </summary>
            <value>The current progress of the recovery step if it is currently running.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Warnings">
            <summary>
            All warnings for the recovery step.
            </summary>
            <value>All warnings for the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.Errors">
            <summary>
            Errors for the recovery step.
            </summary>
            <value>Errors for the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStep.ReferredObject">
            <summary>
            Referred object.
            </summary>
            <value>Referred object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.Equals(VMware.Bindings.Srm.Model.RecoveryStep)">
            <summary>
            Returns true if RecoveryStep instances are equal
            </summary>
            <param name="input">Instance of RecoveryStep to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStep.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity">
            <summary>
            Information about a recovery step.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum">
            <summary>
            The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;
            </summary>
            <value>The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.INACTIVE">
            <summary>
            Enum INACTIVE for value: INACTIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.SKIPPED">
            <summary>
            Enum SKIPPED for value: SKIPPED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.ALREADYDONE">
            <summary>
            Enum ALREADYDONE for value: ALREADY_DONE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Status">
            <summary>
            The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;
            </summary>
            <value>The runtime status of the recovery step.&lt;ul&gt;&lt;li&gt;INACTIVE - This item is not running now.&lt;li&gt;RUNNING - This item is running now.&lt;li&gt;CANCELLED - This item was canceled.&lt;li&gt;SKIPPED - This item was intentionally skipped, and will not be run.&lt;li&gt;ALREADY_DONE - This item was finished in a previous run.&lt;li&gt;SUCCESS - This item is now finished and all went well.&lt;li&gt;WARNING - This item is now finished. It was successful, but there were warnings.&lt;li&gt;ERROR - This item is now finished and there was an error.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.PlanCalloutPositionSpec">
            <summary>
            Gets or Sets PlanCalloutPositionSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.VmCalloutPositionSpec">
            <summary>
            Gets or Sets VmCalloutPositionSpec
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Title">
            <summary>
            Title of the recovery step.
            </summary>
            <value>Title of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StepNumber">
            <summary>
            Step number of the recovery step.
            </summary>
            <value>Step number of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.ChildCount">
            <summary>
            Number of child steps.
            </summary>
            <value>Number of child steps.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Depth">
            <summary>
            Depth of the recovery step.
            </summary>
            <value>Depth of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.FinishTime">
            <summary>
            The finish time of the step if is finished, in milliseconds.
            </summary>
            <value>The finish time of the step if is finished, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.StartTime">
            <summary>
            The start time of the step if it is started, in milliseconds.
            </summary>
            <value>The start time of the step if it is started, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Expanded">
            <summary>
            Whether this recovery step is expanded.
            </summary>
            <value>Whether this recovery step is expanded.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Id">
            <summary>
            ID of the recovery step.
            </summary>
            <value>ID of the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Progress">
            <summary>
            The current progress of the recovery step if it is currently running.
            </summary>
            <value>The current progress of the recovery step if it is currently running.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Warnings">
            <summary>
            All warnings for the recovery step.
            </summary>
            <value>All warnings for the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Errors">
            <summary>
            Errors for the recovery step.
            </summary>
            <value>Errors for the recovery step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.ReferredObject">
            <summary>
            Referred object.
            </summary>
            <value>Referred object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Equals(VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity)">
            <summary>
            Returns true if RecoveryStepDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of RecoveryStepDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList">
            <summary>
            List of entities about: Information about a recovery step.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.Equals(VMware.Bindings.Srm.Model.RecoveryStepDrResponseList)">
            <summary>
            Returns true if RecoveryStepDrResponseList instances are equal
            </summary>
            <param name="input">Instance of RecoveryStepDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecoveryStepDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse">
            <summary>
            Recreate all placeholder VMs response.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.Errors">
            <summary>
            A list of errors that prevented recreate placeholder VM tasks from starting.
            </summary>
            <value>A list of errors that prevented recreate placeholder VM tasks from starting.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.Tasks">
            <summary>
            A list of recreate placeholder VM tasks.
            </summary>
            <value>A list of recreate placeholder VM tasks.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.Equals(VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse)">
            <summary>
            Returns true if RecreateAllPlaceholderVmsResponse instances are equal
            </summary>
            <param name="input">Instance of RecreateAllPlaceholderVmsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponse.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity">
            <summary>
            Recreate all placeholder VMs response.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Errors">
            <summary>
            A list of errors that prevented recreate placeholder VM tasks from starting.
            </summary>
            <value>A list of errors that prevented recreate placeholder VM tasks from starting.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Tasks">
            <summary>
            A list of recreate placeholder VM tasks.
            </summary>
            <value>A list of recreate placeholder VM tasks.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Equals(VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity)">
            <summary>
            Returns true if RecreateAllPlaceholderVmsResponseDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of RecreateAllPlaceholderVmsResponseDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RecreateAllPlaceholderVmsResponseDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RemoteIpSetting">
            <summary>
            Remote IP settings for a subnet rule.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RemoteIpSetting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RemoteIpSetting.IpV4">
            <summary>
            Gets or Sets IpV4
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RemoteIpSetting.Dns">
            <summary>
            Gets or Sets Dns
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RemoteIpSetting.Wins">
            <summary>
            Gets or Sets Wins
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.Equals(VMware.Bindings.Srm.Model.RemoteIpSetting)">
            <summary>
            Returns true if RemoteIpSetting instances are equal
            </summary>
            <param name="input">Instance of RemoteIpSetting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoteIpSetting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RemoveDatastoreResult">
            <summary>
            Details about the datastores which are not configured as placeholder datastores.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RemoveDatastoreResult" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RemoveDatastoreResult.NotConfiguredDatastores">
            <summary>
            The list of datastores that are not configured as placeholder datastores.
            </summary>
            <value>The list of datastores that are not configured as placeholder datastores.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.Equals(VMware.Bindings.Srm.Model.RemoveDatastoreResult)">
            <summary>
            Returns true if RemoveDatastoreResult instances are equal
            </summary>
            <param name="input">Instance of RemoveDatastoreResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RemoveDatastoreResult.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.RenameObjectSpec">
            <summary>
            Spec to rename a Site Recovery Manager object.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.RenameObjectSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.RenameObjectSpec.Name">
            <summary>
            The new name of the object. The name must be unique amongst peer children nodes.
            </summary>
            <value>The new name of the object. The name must be unique amongst peer children nodes.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.Equals(VMware.Bindings.Srm.Model.RenameObjectSpec)">
            <summary>
            Returns true if RenameObjectSpec instances are equal
            </summary>
            <param name="input">Instance of RenameObjectSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.RenameObjectSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicatedArrayPair">
            <summary>
            Details about a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicatedArrayPair" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.Id">
            <summary>
            ID of the replicated array pair.
            </summary>
            <value>ID of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.LocalStorageArrayKey">
            <summary>
            Local storage array key of the replicated array pair.
            </summary>
            <value>Local storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.LocalStorageArrayName">
            <summary>
            Local storage array name of the replicated array pair.
            </summary>
            <value>Local storage array name of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.RemoteStorageArrayKey">
            <summary>
            Remote storage array key of the replicated array pair.
            </summary>
            <value>Remote storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.RemoteStorageArrayName">
            <summary>
            Remote storage array name of the replicated array pair.
            </summary>
            <value>Remote storage array name of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.HasReplicatedDatastores">
            <summary>
            Denotes if there are any replicated datastores residing on the array pair.
            </summary>
            <value>Denotes if there are any replicated datastores residing on the array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.DiscoveringDevices">
            <summary>
            Denotes if there is a running task for the device discovery.
            </summary>
            <value>Denotes if there is a running task for the device discovery.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.StretchedStorageSupported">
            <summary>
            Denotes if the array pair supports stretched storage.
            </summary>
            <value>Denotes if the array pair supports stretched storage.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.LocalArrayManager">
            <summary>
            Gets or Sets LocalArrayManager
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.RemoteArrayManager">
            <summary>
            Gets or Sets RemoteArrayManager
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPair.Name">
            <summary>
            Name of the replicated array pair.
            </summary>
            <value>Name of the replicated array pair.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.Equals(VMware.Bindings.Srm.Model.ReplicatedArrayPair)">
            <summary>
            Returns true if ReplicatedArrayPair instances are equal
            </summary>
            <param name="input">Instance of ReplicatedArrayPair to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPair.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase">
            <summary>
            Details about a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.Id">
            <summary>
            ID of the replicated array pair.
            </summary>
            <value>ID of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.LocalStorageArrayKey">
            <summary>
            Local storage array key of the replicated array pair.
            </summary>
            <value>Local storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.LocalStorageArrayName">
            <summary>
            Local storage array name of the replicated array pair.
            </summary>
            <value>Local storage array name of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.RemoteStorageArrayKey">
            <summary>
            Remote storage array key of the replicated array pair.
            </summary>
            <value>Remote storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.RemoteStorageArrayName">
            <summary>
            Remote storage array name of the replicated array pair.
            </summary>
            <value>Remote storage array name of the replicated array pair.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.Equals(VMware.Bindings.Srm.Model.ReplicatedArrayPairBase)">
            <summary>
            Returns true if ReplicatedArrayPairBase instances are equal
            </summary>
            <param name="input">Instance of ReplicatedArrayPairBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairBase.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity">
            <summary>
            Details about a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Id">
            <summary>
            ID of the replicated array pair.
            </summary>
            <value>ID of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.LocalStorageArrayKey">
            <summary>
            Local storage array key of the replicated array pair.
            </summary>
            <value>Local storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.LocalStorageArrayName">
            <summary>
            Local storage array name of the replicated array pair.
            </summary>
            <value>Local storage array name of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.RemoteStorageArrayKey">
            <summary>
            Remote storage array key of the replicated array pair.
            </summary>
            <value>Remote storage array key of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.RemoteStorageArrayName">
            <summary>
            Remote storage array name of the replicated array pair.
            </summary>
            <value>Remote storage array name of the replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.HasReplicatedDatastores">
            <summary>
            Denotes if there are any replicated datastores residing on the array pair.
            </summary>
            <value>Denotes if there are any replicated datastores residing on the array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.DiscoveringDevices">
            <summary>
            Denotes if there is a running task for the device discovery.
            </summary>
            <value>Denotes if there is a running task for the device discovery.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.StretchedStorageSupported">
            <summary>
            Denotes if the array pair supports stretched storage.
            </summary>
            <value>Denotes if the array pair supports stretched storage.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.LocalArrayManager">
            <summary>
            Gets or Sets LocalArrayManager
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.RemoteArrayManager">
            <summary>
            Gets or Sets RemoteArrayManager
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Name">
            <summary>
            Name of the replicated array pair.
            </summary>
            <value>Name of the replicated array pair.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity)">
            <summary>
            Returns true if ReplicatedArrayPairDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ReplicatedArrayPairDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList">
            <summary>
            List of entities about: Details about a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.Equals(VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList)">
            <summary>
            Returns true if ReplicatedArrayPairDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ReplicatedArrayPairDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec">
            <summary>
            Spec to create a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.ArrayManagerId">
            <summary>
            ID of the array manager.
            </summary>
            <value>ID of the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.StorageArrayKey">
            <summary>
            Unique key of the storage array which is local to the array manager.
            </summary>
            <value>Unique key of the storage array which is local to the array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.PeerStorageArrayKey">
            <summary>
            Unique key of the storage array which is on the peer site of the array manager.
            </summary>
            <value>Unique key of the storage array which is on the peer site of the array manager.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.Equals(VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec)">
            <summary>
            Returns true if ReplicatedArrayPairSpec instances are equal
            </summary>
            <param name="input">Instance of ReplicatedArrayPairSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicatedArrayPairSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo">
            <summary>
            Details about the supported version of the storage replication software.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.Name">
            <summary>
            Name of the replication software.
            </summary>
            <value>Name of the replication software.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo._Version">
            <summary>
            Version of the replication software.
            </summary>
            <value>Version of the replication software.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.Equals(VMware.Bindings.Srm.Model.ReplicationSoftwareInfo)">
            <summary>
            Returns true if ReplicationSoftwareInfo instances are equal
            </summary>
            <param name="input">Instance of ReplicationSoftwareInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReplicationSoftwareInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ReprotectPlanSpec">
            <summary>
            Reprotect operations include steps to clean up the original datastores and devices. If you are experiencing errors during cleanup steps, you may choose the force cleanup option to ignore all errors and return the plan to the Ready state. If you use this option, you may need to clean up your storage manually, and you should run a Test as soon as possible.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ReprotectPlanSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ReprotectPlanSpec.Forced">
            <summary>
            Whether to force the cleanup operation. If true, makes best effort to complete, and could leak resources in the process (e.g. silently failing to delete a test-network, test-VM, etc).
            </summary>
            <value>Whether to force the cleanup operation. If true, makes best effort to complete, and could leak resources in the process (e.g. silently failing to delete a test-network, test-VM, etc).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.Equals(VMware.Bindings.Srm.Model.ReprotectPlanSpec)">
            <summary>
            Returns true if ReprotectPlanSpec instances are equal
            </summary>
            <param name="input">Instance of ReprotectPlanSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ReprotectPlanSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMapping">
            <summary>
            Details about a resource inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMapping.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMapping.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMapping.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMapping.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ResourceMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMapping.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.Equals(VMware.Bindings.Srm.Model.ResourceMapping)">
            <summary>
            Returns true if ResourceMapping instances are equal
            </summary>
            <param name="input">Instance of ResourceMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity">
            <summary>
            Details about a resource inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity)">
            <summary>
            Returns true if ResourceMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ResourceMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList">
            <summary>
            List of entities about: Details about a resource inventory mapping
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.Equals(VMware.Bindings.Srm.Model.ResourceMappingDrResponseList)">
            <summary>
            Returns true if ResourceMappingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ResourceMappingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResourceMappingsSpec">
            <summary>
            Resource pool mapping settings to use for create operation.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ResourceMappingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingsSpec.MappingSourceObject">
            <summary>
            Mapping of the source object.
            </summary>
            <value>Mapping of the source object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResourceMappingsSpec.MappingTargetObject">
            <summary>
            Mapping the target object.
            </summary>
            <value>Mapping the target object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.Equals(VMware.Bindings.Srm.Model.ResourceMappingsSpec)">
            <summary>
            Returns true if ResourceMappingsSpec instances are equal
            </summary>
            <param name="input">Instance of ResourceMappingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResourceMappingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ResponseError">
            <summary>
            ResponseError
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ResponseError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResponseError.ErrorCode">
            <summary>
            The code of the error.
            </summary>
            <value>The code of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResponseError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ResponseError.OpId">
            <summary>
            The ID of the operation.
            </summary>
            <value>The ID of the operation.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.Equals(VMware.Bindings.Srm.Model.ResponseError)">
            <summary>
            Returns true if ResponseError instances are equal
            </summary>
            <param name="input">Instance of ResponseError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ResponseError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ServerInfo">
            <summary>
            Information about a given server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ServerInfo.ServerStatusEnum">
            <summary>
            Defines ServerStatus
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfo.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfo.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfo.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.ServerStatus">
            <summary>
            Gets or Sets ServerStatus
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ServerInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.Certificates">
            <summary>
            Gets or Sets Certificates
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo.CertificateWarnings">
            <summary>
            Gets or Sets CertificateWarnings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfo._Version">
            <summary>
            Gets or Sets _Version
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.Equals(VMware.Bindings.Srm.Model.ServerInfo)">
            <summary>
            Returns true if ServerInfo instances are equal
            </summary>
            <param name="input">Instance of ServerInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity">
            <summary>
            Information about a given server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ServerStatusEnum">
            <summary>
            Defines ServerStatus
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ServerStatus">
            <summary>
            Gets or Sets ServerStatus
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Certificates">
            <summary>
            Gets or Sets Certificates
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.CertificateWarnings">
            <summary>
            Gets or Sets CertificateWarnings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity._Version">
            <summary>
            Gets or Sets _Version
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity)">
            <summary>
            Returns true if ServerInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ServerInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ServerInfoDrResponseList">
            <summary>
            List of entities about: Information about a given server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ServerInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.ServerInfoDrResponseList)">
            <summary>
            Returns true if ServerInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ServerInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ServerInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SessionIdData">
            <summary>
            Data including the new session id.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SessionIdData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SessionIdData.SessionId">
            <summary>
            Gets or Sets SessionId
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.Equals(VMware.Bindings.Srm.Model.SessionIdData)">
            <summary>
            Returns true if SessionIdData instances are equal
            </summary>
            <param name="input">Instance of SessionIdData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionIdData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SessionInfo">
            <summary>
            Information about the current session.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SessionInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SessionInfo.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.Equals(VMware.Bindings.Srm.Model.SessionInfo)">
            <summary>
            Returns true if SessionInfo instances are equal
            </summary>
            <param name="input">Instance of SessionInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SessionInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.ShutdownActionSettings">
            <summary>
            Recovery settings related to power off of a VM.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.ShutdownActionSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ShutdownActionSettings.SkipShutdownGuest">
            <summary>
            Configure the shutdown behavior for this workload during real recovery to not attempt a guest shutdown, even if VMware Tools is enabled.&lt;p&gt;If this value is false and VMware Tools is installed, the workload is issued a guest shutdown during recovery. If this value is true or VMware Tools is not installed, the workload is powered off.
            </summary>
            <value>Configure the shutdown behavior for this workload during real recovery to not attempt a guest shutdown, even if VMware Tools is enabled.&lt;p&gt;If this value is false and VMware Tools is installed, the workload is issued a guest shutdown during recovery. If this value is true or VMware Tools is not installed, the workload is powered off.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.ShutdownActionSettings.TimeoutSeconds">
            <summary>
            Configure the timeout for guest shutdown operations for this VM. After guest shutdown, wait for the specified number of seconds before forcibly powering off the VM. This delay is intended to give the application hosted by the VM time to finish gracefully shutting down.&lt;p&gt;The value is in seconds. If not set, the application default value is used.
            </summary>
            <value>Configure the timeout for guest shutdown operations for this VM. After guest shutdown, wait for the specified number of seconds before forcibly powering off the VM. This delay is intended to give the application hosted by the VM time to finish gracefully shutting down.&lt;p&gt;The value is in seconds. If not set, the application default value is used.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.Equals(VMware.Bindings.Srm.Model.ShutdownActionSettings)">
            <summary>
            Returns true if ShutdownActionSettings instances are equal
            </summary>
            <param name="input">Instance of ShutdownActionSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.ShutdownActionSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SrmInfo">
            <summary>
            Detailed information about Site Recovery Manager server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SrmInfo.ServerStatusEnum">
            <summary>
            Defines ServerStatus
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfo.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfo.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfo.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.ServerStatus">
            <summary>
            Gets or Sets ServerStatus
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SrmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.Certificates">
            <summary>
            Gets or Sets Certificates
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.CertificateWarnings">
            <summary>
            Gets or Sets CertificateWarnings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo._Version">
            <summary>
            Gets or Sets _Version
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.VcGuid">
            <summary>
            The guid to the local vCenter Server
            </summary>
            <value>The guid to the local vCenter Server</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.VcName">
            <summary>
            Gets or Sets VcName
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfo.ExtensionKey">
            <summary>
            Gets or Sets ExtensionKey
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.Equals(VMware.Bindings.Srm.Model.SrmInfo)">
            <summary>
            Returns true if SrmInfo instances are equal
            </summary>
            <param name="input">Instance of SrmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity">
            <summary>
            Detailed information about Site Recovery Manager server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ServerStatusEnum">
            <summary>
            Defines ServerStatus
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ServerStatus">
            <summary>
            Gets or Sets ServerStatus
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Certificates">
            <summary>
            Gets or Sets Certificates
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.CertificateWarnings">
            <summary>
            Gets or Sets CertificateWarnings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity._Version">
            <summary>
            Gets or Sets _Version
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.VcGuid">
            <summary>
            The guid to the local vCenter Server
            </summary>
            <value>The guid to the local vCenter Server</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.VcName">
            <summary>
            Gets or Sets VcName
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ExtensionKey">
            <summary>
            Gets or Sets ExtensionKey
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity)">
            <summary>
            Returns true if SrmInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of SrmInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SrmInfoDrResponseList">
            <summary>
            List of entities about: Detailed information about Site Recovery Manager server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SrmInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.SrmInfoDrResponseList)">
            <summary>
            Returns true if SrmInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of SrmInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SrmInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StartupActionSettings">
            <summary>
            Recovery settings related to power-on of a VM
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StartupActionSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StartupActionSettings.PowerOnVmtoolsTimeoutSeconds">
            <summary>
            Configure the maximum timeout for VM Tools to respond with heartbeat. Recovery will continue once a heartbeat is heard, otherwise the recovery of the workload will fail.&lt;p&gt;The value is in seconds. If not set,the application default value is used. If set to 0 (zero), recovery will not wait for VM Tools and will proceed immediately (use &lt;code&gt;delayBeforePowerOnStepsAndDependentVmsSeconds&lt;/code&gt; to add a fixed time delay).
            </summary>
            <value>Configure the maximum timeout for VM Tools to respond with heartbeat. Recovery will continue once a heartbeat is heard, otherwise the recovery of the workload will fail.&lt;p&gt;The value is in seconds. If not set,the application default value is used. If set to 0 (zero), recovery will not wait for VM Tools and will proceed immediately (use &lt;code&gt;delayBeforePowerOnStepsAndDependentVmsSeconds&lt;/code&gt; to add a fixed time delay).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StartupActionSettings.DelayBeforePowerOnStepsAndDependentVmsSeconds">
            <summary>
            Configure the fixed time delay after power-on operations for this workload. After VM Tools responds with a heartbeat the subsequent steps of the recovery of the VM are delayed for the specified amount of time. This delay is intended to give the application hosted by the VM time to finish it&#39;s startup cycle.&lt;p&gt; The value is in seconds. If not set, the application default value is used. If set to 0 (zero), no delay will be introduced.
            </summary>
            <value>Configure the fixed time delay after power-on operations for this workload. After VM Tools responds with a heartbeat the subsequent steps of the recovery of the VM are delayed for the specified amount of time. This delay is intended to give the application hosted by the VM time to finish it&#39;s startup cycle.&lt;p&gt; The value is in seconds. If not set, the application default value is used. If set to 0 (zero), no delay will be introduced.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.Equals(VMware.Bindings.Srm.Model.StartupActionSettings)">
            <summary>
            Returns true if StartupActionSettings instances are equal
            </summary>
            <param name="input">Instance of StartupActionSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StartupActionSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageAdapterDetails">
            <summary>
            Details about a storage replication adapter (SRA) installed on a Site Recovery Manager.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageAdapterDetails.StatusEnum">
            <summary>
            Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;
            </summary>
            <value>Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetails.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetails.StatusEnum.NOTINSTALLED">
            <summary>
            Enum NOTINSTALLED for value: NOT_INSTALLED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetails.StatusEnum.VERSIONMISMATCH">
            <summary>
            Enum VERSIONMISMATCH for value: VERSION_MISMATCH
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetails.StatusEnum.REMOTEBROKEN">
            <summary>
            Enum REMOTEBROKEN for value: REMOTE_BROKEN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.Status">
            <summary>
            Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;
            </summary>
            <value>Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageAdapterDetails" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.Id">
            <summary>
            ID of the storage replication adapter (SRA).
            </summary>
            <value>ID of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails._Version">
            <summary>
            Version of the storage replication adapter (SRA).
            </summary>
            <value>Version of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.Name">
            <summary>
            Name of the storage replication adapter (SRA).
            </summary>
            <value>Name of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.Vendor">
            <summary>
            Vendor of the storage replication adapter (SRA).
            </summary>
            <value>Vendor of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.VendorUrl">
            <summary>
            Vendor URL of the storage replication adapter (SRA).
            </summary>
            <value>Vendor URL of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.PeerStorageAdapter">
            <summary>
            Gets or Sets PeerStorageAdapter
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.InstallLocation">
            <summary>
            Path to the folder containing storage replication adapter (SRA) installation.
            </summary>
            <value>Path to the folder containing storage replication adapter (SRA) installation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.StretchedStorageSupported">
            <summary>
            Denotes if stretched-storage is supported.
            </summary>
            <value>Denotes if stretched-storage is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.SupportedModels">
            <summary>
            Supported storage array models.
            </summary>
            <value>Supported storage array models.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetails.SupportedSoftware">
            <summary>
            Supported versions of the storage replication software.
            </summary>
            <value>Supported versions of the storage replication software.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.Equals(VMware.Bindings.Srm.Model.StorageAdapterDetails)">
            <summary>
            Returns true if StorageAdapterDetails instances are equal
            </summary>
            <param name="input">Instance of StorageAdapterDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetails.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity">
            <summary>
            Details about a storage replication adapter (SRA) installed on a Site Recovery Manager.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StatusEnum">
            <summary>
            Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;
            </summary>
            <value>Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StatusEnum.NOTINSTALLED">
            <summary>
            Enum NOTINSTALLED for value: NOT_INSTALLED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StatusEnum.VERSIONMISMATCH">
            <summary>
            Enum VERSIONMISMATCH for value: VERSION_MISMATCH
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StatusEnum.REMOTEBROKEN">
            <summary>
            Enum REMOTEBROKEN for value: REMOTE_BROKEN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Status">
            <summary>
            Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;
            </summary>
            <value>Status of the SRA:&lt;ul&gt;&lt;li&gt;OK - OK.&lt;li&gt;NOT_INSTALLED - Unable to find SRA at the paired site.&lt;li&gt;VERSION_MISMATCH - SRA version mismatch detected.&lt;li&gt;REMOTE_BROKEN - SRA at remote site is broken.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Id">
            <summary>
            ID of the storage replication adapter (SRA).
            </summary>
            <value>ID of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity._Version">
            <summary>
            Version of the storage replication adapter (SRA).
            </summary>
            <value>Version of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Name">
            <summary>
            Name of the storage replication adapter (SRA).
            </summary>
            <value>Name of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Vendor">
            <summary>
            Vendor of the storage replication adapter (SRA).
            </summary>
            <value>Vendor of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.VendorUrl">
            <summary>
            Vendor URL of the storage replication adapter (SRA).
            </summary>
            <value>Vendor URL of the storage replication adapter (SRA).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.PeerStorageAdapter">
            <summary>
            Gets or Sets PeerStorageAdapter
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.InstallLocation">
            <summary>
            Path to the folder containing storage replication adapter (SRA) installation.
            </summary>
            <value>Path to the folder containing storage replication adapter (SRA) installation.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.StretchedStorageSupported">
            <summary>
            Denotes if stretched-storage is supported.
            </summary>
            <value>Denotes if stretched-storage is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.SupportedModels">
            <summary>
            Supported storage array models.
            </summary>
            <value>Supported storage array models.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.SupportedSoftware">
            <summary>
            Supported versions of the storage replication software.
            </summary>
            <value>Supported versions of the storage replication software.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Equals(VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity)">
            <summary>
            Returns true if StorageAdapterDetailsDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StorageAdapterDetailsDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList">
            <summary>
            List of entities about: Details about a storage replication adapter (SRA) installed on a Site Recovery Manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.Equals(VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList)">
            <summary>
            Returns true if StorageAdapterDetailsDrResponseList instances are equal
            </summary>
            <param name="input">Instance of StorageAdapterDetailsDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageAdapterDetailsDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageArrayKeyData">
            <summary>
            Details about a storage array key of an array manager.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageArrayKeyData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageArrayKeyData.StorageArrayKey">
            <summary>
            Storage array key of an array manager.
            </summary>
            <value>Storage array key of an array manager.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageArrayKeyData.PeerStorageArrayKeys">
            <summary>
            Peer storage array keys of an array manager.
            </summary>
            <value>Peer storage array keys of an array manager.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.Equals(VMware.Bindings.Srm.Model.StorageArrayKeyData)">
            <summary>
            Returns true if StorageArrayKeyData instances are equal
            </summary>
            <param name="input">Instance of StorageArrayKeyData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayKeyData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageArrayModel">
            <summary>
            Details about a storage array model.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageArrayModel" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageArrayModel.Name">
            <summary>
            Name of the storage array.
            </summary>
            <value>Name of the storage array.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageArrayModel.Vendor">
            <summary>
            Vendor of the storage array.
            </summary>
            <value>Vendor of the storage array.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.Equals(VMware.Bindings.Srm.Model.StorageArrayModel)">
            <summary>
            Returns true if StorageArrayModel instances are equal
            </summary>
            <param name="input">Instance of StorageArrayModel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageArrayModel.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageDeviceData">
            <summary>
            Details about a storage device of a replicated array pair.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum">
            <summary>
            Replication state of a storage device of a replicated array pair:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown.&lt;li&gt;OUTGOING - Outgoing.&lt;li&gt;INCOMING - Incoming.&lt;li&gt;PARTIAL - Partial.&lt;li&gt;FAILOVER - Failover.&lt;/ul&gt;
            </summary>
            <value>Replication state of a storage device of a replicated array pair:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown.&lt;li&gt;OUTGOING - Outgoing.&lt;li&gt;INCOMING - Incoming.&lt;li&gt;PARTIAL - Partial.&lt;li&gt;FAILOVER - Failover.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum.OUTGOING">
            <summary>
            Enum OUTGOING for value: OUTGOING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum.INCOMING">
            <summary>
            Enum INCOMING for value: INCOMING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum.PARTIAL">
            <summary>
            Enum PARTIAL for value: PARTIAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationStateEnum.FAILOVER">
            <summary>
            Enum FAILOVER for value: FAILOVER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.ReplicationState">
            <summary>
            Replication state of a storage device of a replicated array pair:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown.&lt;li&gt;OUTGOING - Outgoing.&lt;li&gt;INCOMING - Incoming.&lt;li&gt;PARTIAL - Partial.&lt;li&gt;FAILOVER - Failover.&lt;/ul&gt;
            </summary>
            <value>Replication state of a storage device of a replicated array pair:&lt;ul&gt;&lt;li&gt;UNKNOWN - Unknown.&lt;li&gt;OUTGOING - Outgoing.&lt;li&gt;INCOMING - Incoming.&lt;li&gt;PARTIAL - Partial.&lt;li&gt;FAILOVER - Failover.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageDeviceData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.DeviceName">
            <summary>
            Name of the storage device.
            </summary>
            <value>Name of the storage device.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.PeerDeviceName">
            <summary>
            Name of the peer storage device.
            </summary>
            <value>Name of the peer storage device.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.Error">
            <summary>
            A replication or storage replication adapter (SRA) error.
            </summary>
            <value>A replication or storage replication adapter (SRA) error.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.Source">
            <summary>
            Denotes if the device role in replication relationship is source.
            </summary>
            <value>Denotes if the device role in replication relationship is source.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.Datastores">
            <summary>
            List of elements with datastore identifier and name.
            </summary>
            <value>List of elements with datastore identifier and name.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.Rdms">
            <summary>
            List of RDM virtual device keys for this storage device.
            </summary>
            <value>List of RDM virtual device keys for this storage device.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.ProtectionGroupId">
            <summary>
            Protection group ID to which this storage device belongs to.
            </summary>
            <value>Protection group ID to which this storage device belongs to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.ProtectionGroupName">
            <summary>
            Name of the protection group this storage device belongs to.
            </summary>
            <value>Name of the protection group this storage device belongs to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.ConsistencyGroupName">
            <summary>
            Name of the consistency group this storage device belongs to.
            </summary>
            <value>Name of the consistency group this storage device belongs to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.StretchedStorage">
            <summary>
            Denotes if this storage device is stretched. Applicable if there is a peer device.
            </summary>
            <value>Denotes if this storage device is stretched. Applicable if there is a peer device.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDeviceData.DynamicSitePreference">
            <summary>
            True if the device supports static site preference.&lt;p&gt;When dynamic site preference is involved, the storage replication adapter reports the device pair as source devices at both sites (not source + target).
            </summary>
            <value>True if the device supports static site preference.&lt;p&gt;When dynamic site preference is involved, the storage replication adapter reports the device pair as source devices at both sites (not source + target).</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.Equals(VMware.Bindings.Srm.Model.StorageDeviceData)">
            <summary>
            Returns true if StorageDeviceData instances are equal
            </summary>
            <param name="input">Instance of StorageDeviceData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDeviceData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageDevicesResponseData">
            <summary>
            Report for all storage devices of a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageDevicesResponseData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseData.DiscoveringDevices">
            <summary>
            Denotes if there is a running task for the device discovery.
            </summary>
            <value>Denotes if there is a running task for the device discovery.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseData.StorageDevicesData">
            <summary>
            All storage devices of a replicated array pair.
            </summary>
            <value>All storage devices of a replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseData.Errors">
            <summary>
            A list of error messages.
            </summary>
            <value>A list of error messages.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.Equals(VMware.Bindings.Srm.Model.StorageDevicesResponseData)">
            <summary>
            Returns true if StorageDevicesResponseData instances are equal
            </summary>
            <param name="input">Instance of StorageDevicesResponseData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity">
            <summary>
            Report for all storage devices of a replicated array pair.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.DiscoveringDevices">
            <summary>
            Denotes if there is a running task for the device discovery.
            </summary>
            <value>Denotes if there is a running task for the device discovery.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.StorageDevicesData">
            <summary>
            All storage devices of a replicated array pair.
            </summary>
            <value>All storage devices of a replicated array pair.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.Errors">
            <summary>
            A list of error messages.
            </summary>
            <value>A list of error messages.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.Equals(VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity)">
            <summary>
            Returns true if StorageDevicesResponseDataDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StorageDevicesResponseDataDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StorageDevicesResponseDataDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicy">
            <summary>
            Details about storage policy
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicy" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicy.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicy.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.Equals(VMware.Bindings.Srm.Model.StoragePolicy)">
            <summary>
            Returns true if StoragePolicy instances are equal
            </summary>
            <param name="input">Instance of StoragePolicy to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicy.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity">
            <summary>
            Details about storage policy
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Equals(VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity)">
            <summary>
            Returns true if StoragePolicyDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList">
            <summary>
            List of entities about: Details about storage policy
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.Equals(VMware.Bindings.Srm.Model.StoragePolicyDrResponseList)">
            <summary>
            Returns true if StoragePolicyDrResponseList instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMapping">
            <summary>
            Details about a storage policy inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMapping.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.Equals(VMware.Bindings.Srm.Model.StoragePolicyMapping)">
            <summary>
            Returns true if StoragePolicyMapping instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity">
            <summary>
            Details about a storage policy inventory mapping
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseMappingTypeEnum">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseMappingTypeEnum.YES">
            <summary>
            Enum YES for value: YES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseMappingTypeEnum.DIFFERENT">
            <summary>
            Enum DIFFERENT for value: DIFFERENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseMappingTypeEnum.NO">
            <summary>
            Enum NO for value: NO
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseMappingType">
            <summary>
            The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.
            </summary>
            <value>The type of the mapping between secondary and primary object (reverse mapping).  If there is no reverse mapping will return NO.  If the reverse mapping is between the same entities will return YES.  If the secondary object has mapping to different than primary object, then DIFFERENT is returned.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.PrimaryObject">
            <summary>
            An ID of the object that is mapped.
            </summary>
            <value>An ID of the object that is mapped.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.SecondaryObject">
            <summary>
            An ID of the object that is mapped to.
            </summary>
            <value>An ID of the object that is mapped to.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.PrimaryObjectName">
            <summary>
            The name of the primary object.
            </summary>
            <value>The name of the primary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.SecondaryObjectName">
            <summary>
            The name of the secondary object.
            </summary>
            <value>The name of the secondary object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseRecoveryObject">
            <summary>
            Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Reference to the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ReverseRecoveryObjectName">
            <summary>
            Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.
            </summary>
            <value>Name of the reverse recovery object if reverseMappingType &#x3D;&#x3D; DIFFERENT.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity)">
            <summary>
            Returns true if StoragePolicyMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList">
            <summary>
            List of entities about: Details about a storage policy inventory mapping
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.Equals(VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList)">
            <summary>
            Returns true if StoragePolicyMappingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyMappingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec">
            <summary>
            Storage policy mapping settings to use for create operation.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.MappingSourceObject">
            <summary>
            Mapping of the source object.
            </summary>
            <value>Mapping of the source object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.MappingTargetObject">
            <summary>
            Mapping the target object.
            </summary>
            <value>Mapping the target object.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.Equals(VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec)">
            <summary>
            Returns true if StoragePolicyMappingsSpec instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyMappingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.StoragePolicyMappingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SubnetRule">
            <summary>
            A rule describing mapping between protection side IP parameters to recovery side ones for a single IP subnet. Currently IPv6 customization is not supported. 
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SubnetRule" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRule.Name">
            <summary>
            Name of the SubnetRule
            </summary>
            <value>Name of the SubnetRule</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRule.RemoteSubnet">
            <summary>
            An expression specifying the remote (recovery) site subnet. Currently, only the CIDR notation is supported.
            </summary>
            <value>An expression specifying the remote (recovery) site subnet. Currently, only the CIDR notation is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRule.LocalSubnet">
            <summary>
            An expression specifying the local (protected) site subnet. Currently, only the CIDR notation is supported.
            </summary>
            <value>An expression specifying the local (protected) site subnet. Currently, only the CIDR notation is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRule.RemoteIpSettings">
            <summary>
            Gets or Sets RemoteIpSettings
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.Equals(VMware.Bindings.Srm.Model.SubnetRule)">
            <summary>
            Returns true if SubnetRule instances are equal
            </summary>
            <param name="input">Instance of SubnetRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRule.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting">
            <summary>
            SubnetRuleIpV4Setting
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.DefaultGateway">
            <summary>
            Default gateway address. Applicable only for static IP address assignment.
            </summary>
            <value>Default gateway address. Applicable only for static IP address assignment.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.AlternateGateway">
            <summary>
            Alternate gateway address. Applicable only for static IP address assignment.
            </summary>
            <value>Alternate gateway address. Applicable only for static IP address assignment.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.Equals(VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting)">
            <summary>
            Returns true if SubnetRuleIpV4Setting instances are equal
            </summary>
            <param name="input">Instance of SubnetRuleIpV4Setting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SubnetRuleIpV4Setting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.SuitableDatastoreInfo">
            <summary>
            Details about a datastore and whether it is suitable for a placeholder datastore.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.SuitableDatastoreInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.DatastoreId">
            <summary>
            The ID of the datastore.
            </summary>
            <value>The ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.PlaceholderDatastore">
            <summary>
            Indicates whether this datastore is already configured as a placeholder datastore.
            </summary>
            <value>Indicates whether this datastore is already configured as a placeholder datastore.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.Equals(VMware.Bindings.Srm.Model.SuitableDatastoreInfo)">
            <summary>
            Returns true if SuitableDatastoreInfo instances are equal
            </summary>
            <param name="input">Instance of SuitableDatastoreInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.SuitableDatastoreInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Task">
            <summary>
            Info about a task.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.Task.StatusEnum">
            <summary>
            Status of the task.
            </summary>
            <value>Status of the task.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Task.StatusEnum.QUEUED">
            <summary>
            Enum QUEUED for value: QUEUED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Task.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Task.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Task.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.Task.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Status">
            <summary>
            Status of the task.
            </summary>
            <value>Status of the task.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.Task" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Id">
            <summary>
            ID of the task.
            </summary>
            <value>ID of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Description">
            <summary>
            Description of the task.
            </summary>
            <value>Description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.DescriptionId">
            <summary>
            ID of the description of the task.
            </summary>
            <value>ID of the description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Entity">
            <summary>
            Entity the task is executed upon.
            </summary>
            <value>Entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.EntityName">
            <summary>
            Name of the entity the task is executed upon.
            </summary>
            <value>Name of the entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Error">
            <summary>
            Gets or Sets Error
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Result">
            <summary>
            Information about the task result if the task status is SUCCESS.
            </summary>
            <value>Information about the task result if the task status is SUCCESS.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.Progress">
            <summary>
            The current progress of the task, in percentage number.
            </summary>
            <value>The current progress of the task, in percentage number.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.QueuedTime">
            <summary>
            The queued time of the task, in milliseconds.
            </summary>
            <value>The queued time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.StartTime">
            <summary>
            The start time of the task, in milliseconds.
            </summary>
            <value>The start time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.Task.CompleteTime">
            <summary>
            The complete time of the task, in milliseconds.
            </summary>
            <value>The complete time of the task, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.Equals(VMware.Bindings.Srm.Model.Task)">
            <summary>
            Returns true if Task instances are equal
            </summary>
            <param name="input">Instance of Task to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.Task.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TaskDrResponseEntity">
            <summary>
            Info about a task.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum">
            <summary>
            Status of the task.
            </summary>
            <value>Status of the task.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum.QUEUED">
            <summary>
            Enum QUEUED for value: QUEUED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Status">
            <summary>
            Status of the task.
            </summary>
            <value>Status of the task.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TaskDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Id">
            <summary>
            ID of the task.
            </summary>
            <value>ID of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Description">
            <summary>
            Description of the task.
            </summary>
            <value>Description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.DescriptionId">
            <summary>
            ID of the description of the task.
            </summary>
            <value>ID of the description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Entity">
            <summary>
            Entity the task is executed upon.
            </summary>
            <value>Entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.EntityName">
            <summary>
            Name of the entity the task is executed upon.
            </summary>
            <value>Name of the entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Error">
            <summary>
            Gets or Sets Error
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Result">
            <summary>
            Information about the task result if the task status is SUCCESS.
            </summary>
            <value>Information about the task result if the task status is SUCCESS.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Progress">
            <summary>
            The current progress of the task, in percentage number.
            </summary>
            <value>The current progress of the task, in percentage number.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.QueuedTime">
            <summary>
            The queued time of the task, in milliseconds.
            </summary>
            <value>The queued time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.StartTime">
            <summary>
            The start time of the task, in milliseconds.
            </summary>
            <value>The start time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseEntity.CompleteTime">
            <summary>
            The complete time of the task, in milliseconds.
            </summary>
            <value>The complete time of the task, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Equals(VMware.Bindings.Srm.Model.TaskDrResponseEntity)">
            <summary>
            Returns true if TaskDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of TaskDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TaskDrResponseList">
            <summary>
            List of entities about: Info about a task.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TaskDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.Equals(VMware.Bindings.Srm.Model.TaskDrResponseList)">
            <summary>
            Returns true if TaskDrResponseList instances are equal
            </summary>
            <param name="input">Instance of TaskDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TaskError">
            <summary>
            Detailed information about the error if the task status is ERROR.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TaskError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TaskError.Details">
            <summary>
            The details of the error.
            </summary>
            <value>The details of the error.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.Equals(VMware.Bindings.Srm.Model.TaskError)">
            <summary>
            Returns true if TaskError instances are equal
            </summary>
            <param name="input">Instance of TaskError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TaskError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TestNetworkMapping">
            <summary>
            Details about a test network mapping. If not present, then an isolated network will be used for test recovery.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TestNetworkMapping" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMapping.TargetNetwork">
            <summary>
            Network at the recovery site, for which a test network will be used.
            </summary>
            <value>Network at the recovery site, for which a test network will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMapping.TestNetwork">
            <summary>
            The test network used by the test network mapping
            </summary>
            <value>The test network used by the test network mapping</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMapping.Id">
            <summary>
            Test network mapping identifier
            </summary>
            <value>Test network mapping identifier</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMapping.TestNetworkName">
            <summary>
            The name of the test network
            </summary>
            <value>The name of the test network</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.Equals(VMware.Bindings.Srm.Model.TestNetworkMapping)">
            <summary>
            Returns true if TestNetworkMapping instances are equal
            </summary>
            <param name="input">Instance of TestNetworkMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMapping.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity">
            <summary>
            Details about a test network mapping. If not present, then an isolated network will be used for test recovery.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.TargetNetwork">
            <summary>
            Network at the recovery site, for which a test network will be used.
            </summary>
            <value>Network at the recovery site, for which a test network will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.TestNetwork">
            <summary>
            The test network used by the test network mapping
            </summary>
            <value>The test network used by the test network mapping</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.Id">
            <summary>
            Test network mapping identifier
            </summary>
            <value>Test network mapping identifier</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.TestNetworkName">
            <summary>
            The name of the test network
            </summary>
            <value>The name of the test network</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.Equals(VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity)">
            <summary>
            Returns true if TestNetworkMappingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of TestNetworkMappingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList">
            <summary>
            List of entities about: Details about a test network mapping. If not present, then an isolated network will be used for test recovery.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.Equals(VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList)">
            <summary>
            Returns true if TestNetworkMappingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of TestNetworkMappingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec">
            <summary>
            Test network mapping settings to use for create operation.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.TargetNetwork">
            <summary>
            Network at the recovery site, for which a test network will be used.
            </summary>
            <value>Network at the recovery site, for which a test network will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.TestNetwork">
            <summary>
            The test network used by the test network mapping
            </summary>
            <value>The test network used by the test network mapping</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.Equals(VMware.Bindings.Srm.Model.TestNetworkMappingsSpec)">
            <summary>
            Returns true if TestNetworkMappingsSpec instances are equal
            </summary>
            <param name="input">Instance of TestNetworkMappingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestNetworkMappingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.TestPlanSpec">
            <summary>
            Spec specifying test recovery operation settings.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.TestPlanSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.TestPlanSpec.SyncData">
            <summary>
            Whether to call the replication providers to synchronize the outstanding data before the operation
            </summary>
            <value>Whether to call the replication providers to synchronize the outstanding data before the operation</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.Equals(VMware.Bindings.Srm.Model.TestPlanSpec)">
            <summary>
            Returns true if TestPlanSpec instances are equal
            </summary>
            <param name="input">Instance of TestPlanSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.TestPlanSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.UserPrompt">
            <summary>
            User prompt waiting for acknowledgment
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.UserPrompt" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPrompt.Id">
            <summary>
            Identifier of the object.
            </summary>
            <value>Identifier of the object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPrompt.RaisedTime">
            <summary>
            The time when the prompt was initially raised, in milliseconds.
            </summary>
            <value>The time when the prompt was initially raised, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPrompt.Description">
            <summary>
            Description about the prompt.
            </summary>
            <value>Description about the prompt.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPrompt.CalloutId">
            <summary>
            Associated callout id.
            </summary>
            <value>Associated callout id.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPrompt.PromptText">
            <summary>
            Text to display while running a recovery operation.
            </summary>
            <value>Text to display while running a recovery operation.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.Equals(VMware.Bindings.Srm.Model.UserPrompt)">
            <summary>
            Returns true if UserPrompt instances are equal
            </summary>
            <param name="input">Instance of UserPrompt to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPrompt.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity">
            <summary>
            User prompt waiting for acknowledgment
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Id">
            <summary>
            Identifier of the object.
            </summary>
            <value>Identifier of the object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.RaisedTime">
            <summary>
            The time when the prompt was initially raised, in milliseconds.
            </summary>
            <value>The time when the prompt was initially raised, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Description">
            <summary>
            Description about the prompt.
            </summary>
            <value>Description about the prompt.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.CalloutId">
            <summary>
            Associated callout id.
            </summary>
            <value>Associated callout id.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.PromptText">
            <summary>
            Text to display while running a recovery operation.
            </summary>
            <value>Text to display while running a recovery operation.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Equals(VMware.Bindings.Srm.Model.UserPromptDrResponseEntity)">
            <summary>
            Returns true if UserPromptDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of UserPromptDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.UserPromptDrResponseList">
            <summary>
            List of entities about: User prompt waiting for acknowledgment
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.UserPromptDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.UserPromptDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.Equals(VMware.Bindings.Srm.Model.UserPromptDrResponseList)">
            <summary>
            Returns true if UserPromptDrResponseList instances are equal
            </summary>
            <param name="input">Instance of UserPromptDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.UserPromptDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItem">
            <summary>
            Details about a vCenter Server datastore item
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum">
            <summary>
            File system type
            </summary>
            <value>File system type</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.VMFS">
            <summary>
            Enum VMFS for value: VMFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.NFS">
            <summary>
            Enum NFS for value: NFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.NFS41">
            <summary>
            Enum NFS41 for value: NFS41
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.CIFS">
            <summary>
            Enum CIFS for value: CIFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.VSAN">
            <summary>
            Enum VSAN for value: VSAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.VFFS">
            <summary>
            Enum VFFS for value: VFFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.PMEM">
            <summary>
            Enum PMEM for value: PMEM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.VSAND">
            <summary>
            Enum VSAND for value: VSAN_D
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemTypeEnum.OTHER">
            <summary>
            Enum OTHER for value: OTHER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.FileSystemType">
            <summary>
            File system type
            </summary>
            <value>File system type</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItem.TypeEnum">
            <summary>
            Type of the datastore object
            </summary>
            <value>Type of the datastore object</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.TypeEnum.STORAGEPOD">
            <summary>
            Enum STORAGEPOD for value: STORAGE_POD
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.TypeEnum.DATASTORE">
            <summary>
            Enum DATASTORE for value: DATASTORE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Type">
            <summary>
            Type of the datastore object
            </summary>
            <value>Type of the datastore object</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatusEnum">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.OverallStatus">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterDatastoreItem" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Path">
            <summary>
            Path to the object
            </summary>
            <value>Path to the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Parent">
            <summary>
            ID of the parent object
            </summary>
            <value>ID of the parent object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.CapacityDetails">
            <summary>
            Gets or Sets CapacityDetails
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.MaintenanceMode">
            <summary>
            Whether the datastore object is in maintenance mode
            </summary>
            <value>Whether the datastore object is in maintenance mode</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Accessible">
            <summary>
            Whether the datastore object is accessible. Applicable only if type is DATASTORE.
            </summary>
            <value>Whether the datastore object is accessible. Applicable only if type is DATASTORE.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Equals(VMware.Bindings.Srm.Model.VcenterDatastoreItem)">
            <summary>
            Returns true if VcenterDatastoreItem instances are equal
            </summary>
            <param name="input">Instance of VcenterDatastoreItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItem.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity">
            <summary>
            Details about a vCenter Server datastore item
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum">
            <summary>
            File system type
            </summary>
            <value>File system type</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.VMFS">
            <summary>
            Enum VMFS for value: VMFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.NFS">
            <summary>
            Enum NFS for value: NFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.NFS41">
            <summary>
            Enum NFS41 for value: NFS41
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.CIFS">
            <summary>
            Enum CIFS for value: CIFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.VSAN">
            <summary>
            Enum VSAN for value: VSAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.VFFS">
            <summary>
            Enum VFFS for value: VFFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.PMEM">
            <summary>
            Enum PMEM for value: PMEM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.VSAND">
            <summary>
            Enum VSAND for value: VSAN_D
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemTypeEnum.OTHER">
            <summary>
            Enum OTHER for value: OTHER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.FileSystemType">
            <summary>
            File system type
            </summary>
            <value>File system type</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.TypeEnum">
            <summary>
            Type of the datastore object
            </summary>
            <value>Type of the datastore object</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.TypeEnum.STORAGEPOD">
            <summary>
            Enum STORAGEPOD for value: STORAGE_POD
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.TypeEnum.DATASTORE">
            <summary>
            Enum DATASTORE for value: DATASTORE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Type">
            <summary>
            Type of the datastore object
            </summary>
            <value>Type of the datastore object</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatusEnum">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.OverallStatus">
            <summary>
            General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;
            </summary>
            <value>General health of this datastore.&lt;p&gt;The overall status of the datastore is computed as the worst status among its alarms and the configuration issues detected on the datastore.&lt;ul&gt;&lt;li&gt;RED - The datastore has alarms or configuration issues with a red status.&lt;li&gt;YELLOW - The datastore does not have alarms or configuration issues with a red status, and has at least one with an yellow status.&lt;li&gt;GREEN - The datastore does not have alarms or configuration issues with a red or yellow status, and has at least one with a green status.&lt;li&gt;GRAY - All of the datastore&#39;s alarms have a gray status and the configuration status of the datastore is not being monitored.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Path">
            <summary>
            Path to the object
            </summary>
            <value>Path to the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Parent">
            <summary>
            ID of the parent object
            </summary>
            <value>ID of the parent object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.CapacityDetails">
            <summary>
            Gets or Sets CapacityDetails
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.MaintenanceMode">
            <summary>
            Whether the datastore object is in maintenance mode
            </summary>
            <value>Whether the datastore object is in maintenance mode</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Accessible">
            <summary>
            Whether the datastore object is accessible. Applicable only if type is DATASTORE.
            </summary>
            <value>Whether the datastore object is accessible. Applicable only if type is DATASTORE.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity)">
            <summary>
            Returns true if VcenterDatastoreItemDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VcenterDatastoreItemDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList">
            <summary>
            List of entities about: Details about a vCenter Server datastore item
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.Equals(VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList)">
            <summary>
            Returns true if VcenterDatastoreItemDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VcenterDatastoreItemDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterDatastoreItemDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterNetwork">
            <summary>
            vCenter Network details
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum">
            <summary>
            The type of the network.
            </summary>
            <value>The type of the network.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum.NETWORK">
            <summary>
            Enum NETWORK for value: NETWORK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum.OPAQUENETWORK">
            <summary>
            Enum OPAQUENETWORK for value: OPAQUE_NETWORK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum.DVSPORTGROUP">
            <summary>
            Enum DVSPORTGROUP for value: DVS_PORT_GROUP
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VcenterNetwork.TypeEnum.NSXBACKEDDVSPORTGROUP">
            <summary>
            Enum NSXBACKEDDVSPORTGROUP for value: NSX_BACKED_DVS_PORT_GROUP
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterNetwork.Type">
            <summary>
            The type of the network.
            </summary>
            <value>The type of the network.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterNetwork" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterNetwork.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterNetwork.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.Equals(VMware.Bindings.Srm.Model.VcenterNetwork)">
            <summary>
            Returns true if VcenterNetwork instances are equal
            </summary>
            <param name="input">Instance of VcenterNetwork to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterNetwork.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterObject">
            <summary>
            VcenterObject
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterObject" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterObject.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterObject.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.Equals(VMware.Bindings.Srm.Model.VcenterObject)">
            <summary>
            Returns true if VcenterObject instances are equal
            </summary>
            <param name="input">Instance of VcenterObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterObject.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItem">
            <summary>
            Details about a vCenter Server inventory object
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItem" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Path">
            <summary>
            Path to the object
            </summary>
            <value>Path to the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Parent">
            <summary>
            ID of the parent object
            </summary>
            <value>ID of the parent object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Equals(VMware.Bindings.Srm.Model.VcenterServerInventoryItem)">
            <summary>
            Returns true if VcenterServerInventoryItem instances are equal
            </summary>
            <param name="input">Instance of VcenterServerInventoryItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItem.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity">
            <summary>
            Details about a vCenter Server inventory object
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Id">
            <summary>
            Identifier of the object
            </summary>
            <value>Identifier of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Name">
            <summary>
            Name of the object
            </summary>
            <value>Name of the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Path">
            <summary>
            Path to the object
            </summary>
            <value>Path to the object</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Parent">
            <summary>
            ID of the parent object
            </summary>
            <value>ID of the parent object</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity)">
            <summary>
            Returns true if VcenterServerInventoryItemDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VcenterServerInventoryItemDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList">
            <summary>
            List of entities about: Details about a vCenter Server inventory object
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.Equals(VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList)">
            <summary>
            Returns true if VcenterServerInventoryItemDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VcenterServerInventoryItemDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VcenterServerInventoryItemDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmCalloutPosition">
            <summary>
            Describes the position of a per-VM Callout, null otherwise.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmCalloutPosition" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmCalloutPosition.VmId">
            <summary>
            The protected virtual machine identity this Callout is associated with.
            </summary>
            <value>The protected virtual machine identity this Callout is associated with.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmCalloutPosition.PrePowerOn">
            <summary>
            If true, the callout executes prior to the power-on step, otherwise it executes after the power-on step.
            </summary>
            <value>If true, the callout executes prior to the power-on step, otherwise it executes after the power-on step.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmCalloutPosition.Index">
            <summary>
            The zero-based index of the Callout relative to other Calloutsat the same position. If there is more than one Callout at a position,then they will be run starting with the Callout at index zero.
            </summary>
            <value>The zero-based index of the Callout relative to other Calloutsat the same position. If there is more than one Callout at a position,then they will be run starting with the Callout at index zero.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.Equals(VMware.Bindings.Srm.Model.VmCalloutPosition)">
            <summary>
            Returns true if VmCalloutPosition instances are equal
            </summary>
            <param name="input">Instance of VmCalloutPosition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmCalloutPosition.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmLocationData">
            <summary>
            Location details about a protected virtual machine.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmLocationData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.Name">
            <summary>
            The name of the location
            </summary>
            <value>The name of the location</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.ProtectedSite">
            <summary>
            Protected site where the VM is residing
            </summary>
            <value>Protected site where the VM is residing</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.ProductionVmPath">
            <summary>
            Gets or Sets ProductionVmPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.RecoverySite">
            <summary>
            Recovery site where the VM will be recovered
            </summary>
            <value>Recovery site where the VM will be recovered</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.PlaceholderVmPath">
            <summary>
            Gets or Sets PlaceholderVmPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmLocationData.PlaceholderVm">
            <summary>
            ID of the placeholder VM
            </summary>
            <value>ID of the placeholder VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.Equals(VMware.Bindings.Srm.Model.VmLocationData)">
            <summary>
            Returns true if VmLocationData instances are equal
            </summary>
            <param name="input">Instance of VmLocationData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmLocationData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionDevice">
            <summary>
            Representation of a VM device and its SRM protection status
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionDevice.TypeEnum">
            <summary>
            Type of the device
            </summary>
            <value>Type of the device</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.TypeEnum.HARDDRIVE">
            <summary>
            Enum HARDDRIVE for value: HARD_DRIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.TypeEnum.OPTICALDRIVE">
            <summary>
            Enum OPTICALDRIVE for value: OPTICAL_DRIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.TypeEnum.FLOPPYDRIVE">
            <summary>
            Enum FLOPPYDRIVE for value: FLOPPY_DRIVE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Type">
            <summary>
            Type of the device
            </summary>
            <value>Type of the device</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionDevice.BackingEnum">
            <summary>
            Backing type of the device:&lt;ul&gt;&lt;li&gt;FILE - file-backed type of device.&lt;li&gt;RDM - Raw-disk mapping (RDM) type of device.&lt;li&gt;CLIENT - Client device.&lt;li&gt;HOST - Host device.&lt;/ul&gt;
            </summary>
            <value>Backing type of the device:&lt;ul&gt;&lt;li&gt;FILE - file-backed type of device.&lt;li&gt;RDM - Raw-disk mapping (RDM) type of device.&lt;li&gt;CLIENT - Client device.&lt;li&gt;HOST - Host device.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.BackingEnum.FILE">
            <summary>
            Enum FILE for value: FILE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.BackingEnum.RDM">
            <summary>
            Enum RDM for value: RDM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.BackingEnum.CLIENT">
            <summary>
            Enum CLIENT for value: CLIENT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionDevice.BackingEnum.HOST">
            <summary>
            Enum HOST for value: HOST
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Backing">
            <summary>
            Backing type of the device:&lt;ul&gt;&lt;li&gt;FILE - file-backed type of device.&lt;li&gt;RDM - Raw-disk mapping (RDM) type of device.&lt;li&gt;CLIENT - Client device.&lt;li&gt;HOST - Host device.&lt;/ul&gt;
            </summary>
            <value>Backing type of the device:&lt;ul&gt;&lt;li&gt;FILE - file-backed type of device.&lt;li&gt;RDM - Raw-disk mapping (RDM) type of device.&lt;li&gt;CLIENT - Client device.&lt;li&gt;HOST - Host device.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionDevice" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Key">
            <summary>
            Identificator of the device
            </summary>
            <value>Identificator of the device</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Label">
            <summary>
            Label of the device
            </summary>
            <value>Label of the device</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.ProductionPath">
            <summary>
            Gets or Sets ProductionPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.ProductionDatastores">
            <summary>
            List of production datastores in case of device with FILE backing type. Could contain multiple values in case of linked clone VM.
            </summary>
            <value>List of production datastores in case of device with FILE backing type. Could contain multiple values in case of linked clone VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.RecoveryPath">
            <summary>
            Gets or Sets RecoveryPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Replicated">
            <summary>
            Weather this device is already replicated
            </summary>
            <value>Weather this device is already replicated</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionDevice.Detached">
            <summary>
            Weather this device is detached. Devices with RDM, CLIENT and HOST backing type are always detached and cannot be configured for protection.
            </summary>
            <value>Weather this device is detached. Devices with RDM, CLIENT and HOST backing type are always detached and cannot be configured for protection.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.Equals(VMware.Bindings.Srm.Model.VmProtectionDevice)">
            <summary>
            Returns true if VmProtectionDevice instances are equal
            </summary>
            <param name="input">Instance of VmProtectionDevice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionDevice.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionLocation">
            <summary>
            Details about a protection resource of a VM. For example: folder, resource pool, host, network.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionLocation" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.Editable">
            <summary>
            Whether this location protection setting is editable in the current state
            </summary>
            <value>Whether this location protection setting is editable in the current state</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.Source">
            <summary>
            Source location
            </summary>
            <value>Source location</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.SourceName">
            <summary>
            The name of the &lt;code&gt;source&lt;/code&gt; object.
            </summary>
            <value>The name of the &lt;code&gt;source&lt;/code&gt; object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.Target">
            <summary>
            Target location. If the VM is not protected this is recommendation based on the existing inventory mappings.
            </summary>
            <value>Target location. If the VM is not protected this is recommendation based on the existing inventory mappings.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.TargetName">
            <summary>
            The name of the &lt;code&gt;target&lt;/code&gt; object.
            </summary>
            <value>The name of the &lt;code&gt;target&lt;/code&gt; object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.IsInventoryMappedTarget">
            <summary>
            Whether the &lt;code&gt;target&lt;/code&gt; came from inventory mappings.
            </summary>
            <value>Whether the &lt;code&gt;target&lt;/code&gt; came from inventory mappings.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionLocation.SourceHasInventoryMapping">
            <summary>
            Whether the &lt;code&gt;source&lt;/code&gt; has existing inventory mapping
            </summary>
            <value>Whether the &lt;code&gt;source&lt;/code&gt; has existing inventory mapping</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.Equals(VMware.Bindings.Srm.Model.VmProtectionLocation)">
            <summary>
            Returns true if VmProtectionLocation instances are equal
            </summary>
            <param name="input">Instance of VmProtectionLocation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionLocation.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionNetwork">
            <summary>
            Representation of a network setting for a protected VM.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionNetwork" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.Index">
            <summary>
            NIC order index
            </summary>
            <value>NIC order index</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.Key">
            <summary>
            Network device key identifier
            </summary>
            <value>Network device key identifier</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.SourceNetworkNsxBacked">
            <summary>
            Whether the source network is NSX-backed
            </summary>
            <value>Whether the source network is NSX-backed</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.TargetNetworkNsxBacked">
            <summary>
            Whether the target network is NSX-backed
            </summary>
            <value>Whether the target network is NSX-backed</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.Editable">
            <summary>
            Whether this location protection setting is editable in the current state
            </summary>
            <value>Whether this location protection setting is editable in the current state</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.Source">
            <summary>
            Source location
            </summary>
            <value>Source location</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.SourceName">
            <summary>
            The name of the &lt;code&gt;source&lt;/code&gt; object.
            </summary>
            <value>The name of the &lt;code&gt;source&lt;/code&gt; object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.Target">
            <summary>
            Target location. If the VM is not protected this is recommendation based on the existing inventory mappings.
            </summary>
            <value>Target location. If the VM is not protected this is recommendation based on the existing inventory mappings.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.TargetName">
            <summary>
            The name of the &lt;code&gt;target&lt;/code&gt; object.
            </summary>
            <value>The name of the &lt;code&gt;target&lt;/code&gt; object.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.IsInventoryMappedTarget">
            <summary>
            Whether the &lt;code&gt;target&lt;/code&gt; came from inventory mappings.
            </summary>
            <value>Whether the &lt;code&gt;target&lt;/code&gt; came from inventory mappings.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionNetwork.SourceHasInventoryMapping">
            <summary>
            Whether the &lt;code&gt;source&lt;/code&gt; has existing inventory mapping
            </summary>
            <value>Whether the &lt;code&gt;source&lt;/code&gt; has existing inventory mapping</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.Equals(VMware.Bindings.Srm.Model.VmProtectionNetwork)">
            <summary>
            Returns true if VmProtectionNetwork instances are equal
            </summary>
            <param name="input">Instance of VmProtectionNetwork to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionNetwork.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionSettings">
            <summary>
            Protection settings for a VM
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.PlaceholderNeedsRepair">
            <summary>
            Whether repair placeholder operation is required. If true, only repair placeholder is possible and not configure protection.
            </summary>
            <value>Whether repair placeholder operation is required. If true, only repair placeholder is possible and not configure protection.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.Devices">
            <summary>
            List of VM devices, including hard disks, optical disks and floppy disks
            </summary>
            <value>List of VM devices, including hard disks, optical disks and floppy disks</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.Networks">
            <summary>
            List of VM networks
            </summary>
            <value>List of VM networks</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.Folder">
            <summary>
            Gets or Sets Folder
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.ResourcePool">
            <summary>
            Gets or Sets ResourcePool
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.Host">
            <summary>
            Gets or Sets Host
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettings.ChangeVersion">
            <summary>
            Version number of these settings. Keep this if need to update the VM protection settings. Applicable only if the VM is protected.
            </summary>
            <value>Version number of these settings. Keep this if need to update the VM protection settings. Applicable only if the VM is protected.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.Equals(VMware.Bindings.Srm.Model.VmProtectionSettings)">
            <summary>
            Returns true if VmProtectionSettings instances are equal
            </summary>
            <param name="input">Instance of VmProtectionSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity">
            <summary>
            Protection settings for a VM
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.PlaceholderNeedsRepair">
            <summary>
            Whether repair placeholder operation is required. If true, only repair placeholder is possible and not configure protection.
            </summary>
            <value>Whether repair placeholder operation is required. If true, only repair placeholder is possible and not configure protection.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Devices">
            <summary>
            List of VM devices, including hard disks, optical disks and floppy disks
            </summary>
            <value>List of VM devices, including hard disks, optical disks and floppy disks</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Networks">
            <summary>
            List of VM networks
            </summary>
            <value>List of VM networks</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Folder">
            <summary>
            Gets or Sets Folder
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.ResourcePool">
            <summary>
            Gets or Sets ResourcePool
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Host">
            <summary>
            Gets or Sets Host
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.ChangeVersion">
            <summary>
            Version number of these settings. Keep this if need to update the VM protection settings. Applicable only if the VM is protected.
            </summary>
            <value>Version number of these settings. Keep this if need to update the VM protection settings. Applicable only if the VM is protected.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity)">
            <summary>
            Returns true if VmProtectionSettingsDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmProtectionSettingsDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary">
            <summary>
            Summary of the recovery settings for a VM, defined in the context of a recovery plan
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.RecoveryFolder">
            <summary>
            Gets or Sets RecoveryFolder
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.RecoveryResourcePool">
            <summary>
            Gets or Sets RecoveryResourcePool
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.RecoveryHost">
            <summary>
            Gets or Sets RecoveryHost
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.RecoveryNetworks">
            <summary>
            Gets or Sets RecoveryNetworks
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.VmotionEligible">
            <summary>
            If the protected VM is eligible for vMotion. Null for the cases when the replication provider does not support vMotion (e.g. vVol). &#39;false&#39; for the cases when the provider supports vMotion but the VM is not on stretched storage. &#39;true&#39; for the cases when the provider supports vMotion and the VM is on stretched storage.
            </summary>
            <value>If the protected VM is eligible for vMotion. Null for the cases when the replication provider does not support vMotion (e.g. vVol). &#39;false&#39; for the cases when the provider supports vMotion but the VM is not on stretched storage. &#39;true&#39; for the cases when the provider supports vMotion and the VM is on stretched storage.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.Equals(VMware.Bindings.Srm.Model.VmProtectionSettingsSummary)">
            <summary>
            Returns true if VmProtectionSettingsSummary instances are equal
            </summary>
            <param name="input">Instance of VmProtectionSettingsSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionSettingsSummary.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionStatusDetails">
            <summary>
            Details about the current protection status of a VM
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum">
            <summary>
            Status of the protected VM &lt;ul&gt; &lt;li&gt;LOADING - Needed information is still on its way &lt;/li&gt; &lt;li&gt;NOT_CONFIGURED - The VM has just become part of a protection group&lt;/li&gt; &lt;li&gt;CONFIGURING_PROTECTION - The VM is acquiring protection&lt;/li&gt; &lt;li&gt;REMOVING_PROTECTION -  The VM is losing its protection&lt;/li&gt; &lt;li&gt;RESTORING_PLACEHOLDER - SRM server is restoring the placeholder VM at the recovery site&lt;/li&gt; &lt;li&gt;DEVICE_NOT_FOUND - The VM has a disk or a device that is not replicated&lt;/li&gt; &lt;li&gt;PLACEHOLDER_VM_DELETED - Someone has deleted the placeholder VM&lt;/li&gt; &lt;li&gt;ABR_CONFIGURATION_ERROR - Array manager based configuration error&lt;/li&gt; &lt;li&gt;PLACEHOLDER_CREATION_ERROR - Creation of the placeholder VM failed&lt;/li&gt; &lt;li&gt;OK - Protected VM is OK&lt;/li&gt; &lt;li&gt;INVALID - The production VM is invalid for some reason. The server reports a fault.&lt;/li&gt; &lt;li&gt;MISSING_MAPPING - The VM has a missing mapping&lt;/li&gt; &lt;li&gt;REPLICATION_ERROR - Replication layer reports an error about the VM&lt;/li&gt; &lt;li&gt;REPLICATION_WARNING - Replication layer reports a warning about the VM&lt;/li&gt; &lt;li&gt;MAPPING_CONFLICT - Server has reported an inventory conflict: the resource pool and folder of the VM are in different datacenters&lt;/li&gt; &lt;li&gt;MISSING_UNPROTECTED_VM - The provider details of the protection group indicate the VM is part of the group and is unprotected while at the same time it has been deleted from the VC&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_ERROR - VMware vSphere Virtual Volumes configuration error&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_WARNING - VMware vSphere Virtual Volumes configuration warning&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Status of the protected VM &lt;ul&gt; &lt;li&gt;LOADING - Needed information is still on its way &lt;/li&gt; &lt;li&gt;NOT_CONFIGURED - The VM has just become part of a protection group&lt;/li&gt; &lt;li&gt;CONFIGURING_PROTECTION - The VM is acquiring protection&lt;/li&gt; &lt;li&gt;REMOVING_PROTECTION -  The VM is losing its protection&lt;/li&gt; &lt;li&gt;RESTORING_PLACEHOLDER - SRM server is restoring the placeholder VM at the recovery site&lt;/li&gt; &lt;li&gt;DEVICE_NOT_FOUND - The VM has a disk or a device that is not replicated&lt;/li&gt; &lt;li&gt;PLACEHOLDER_VM_DELETED - Someone has deleted the placeholder VM&lt;/li&gt; &lt;li&gt;ABR_CONFIGURATION_ERROR - Array manager based configuration error&lt;/li&gt; &lt;li&gt;PLACEHOLDER_CREATION_ERROR - Creation of the placeholder VM failed&lt;/li&gt; &lt;li&gt;OK - Protected VM is OK&lt;/li&gt; &lt;li&gt;INVALID - The production VM is invalid for some reason. The server reports a fault.&lt;/li&gt; &lt;li&gt;MISSING_MAPPING - The VM has a missing mapping&lt;/li&gt; &lt;li&gt;REPLICATION_ERROR - Replication layer reports an error about the VM&lt;/li&gt; &lt;li&gt;REPLICATION_WARNING - Replication layer reports a warning about the VM&lt;/li&gt; &lt;li&gt;MAPPING_CONFLICT - Server has reported an inventory conflict: the resource pool and folder of the VM are in different datacenters&lt;/li&gt; &lt;li&gt;MISSING_UNPROTECTED_VM - The provider details of the protection group indicate the VM is part of the group and is unprotected while at the same time it has been deleted from the VC&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_ERROR - VMware vSphere Virtual Volumes configuration error&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_WARNING - VMware vSphere Virtual Volumes configuration warning&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.LOADING">
            <summary>
            Enum LOADING for value: LOADING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.NOTCONFIGURED">
            <summary>
            Enum NOTCONFIGURED for value: NOT_CONFIGURED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.CONFIGURINGPROTECTION">
            <summary>
            Enum CONFIGURINGPROTECTION for value: CONFIGURING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.REMOVINGPROTECTION">
            <summary>
            Enum REMOVINGPROTECTION for value: REMOVING_PROTECTION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.RESTORINGPLACEHOLDER">
            <summary>
            Enum RESTORINGPLACEHOLDER for value: RESTORING_PLACEHOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.DEVICENOTFOUND">
            <summary>
            Enum DEVICENOTFOUND for value: DEVICE_NOT_FOUND
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.PLACEHOLDERVMDELETED">
            <summary>
            Enum PLACEHOLDERVMDELETED for value: PLACEHOLDER_VM_DELETED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.ABRCONFIGURATIONERROR">
            <summary>
            Enum ABRCONFIGURATIONERROR for value: ABR_CONFIGURATION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.PLACEHOLDERCREATIONERROR">
            <summary>
            Enum PLACEHOLDERCREATIONERROR for value: PLACEHOLDER_CREATION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.INVALID">
            <summary>
            Enum INVALID for value: INVALID
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.MISSINGMAPPING">
            <summary>
            Enum MISSINGMAPPING for value: MISSING_MAPPING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.REPLICATIONERROR">
            <summary>
            Enum REPLICATIONERROR for value: REPLICATION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.REPLICATIONWARNING">
            <summary>
            Enum REPLICATIONWARNING for value: REPLICATION_WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.MAPPINGCONFLICT">
            <summary>
            Enum MAPPINGCONFLICT for value: MAPPING_CONFLICT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.MISSINGUNPROTECTEDVM">
            <summary>
            Enum MISSINGUNPROTECTEDVM for value: MISSING_UNPROTECTED_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.VVOLCONFIGURATIONERROR">
            <summary>
            Enum VVOLCONFIGURATIONERROR for value: VVOL_CONFIGURATION_ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.StatusEnum.VVOLCONFIGURATIONWARNING">
            <summary>
            Enum VVOLCONFIGURATIONWARNING for value: VVOL_CONFIGURATION_WARNING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.Status">
            <summary>
            Status of the protected VM &lt;ul&gt; &lt;li&gt;LOADING - Needed information is still on its way &lt;/li&gt; &lt;li&gt;NOT_CONFIGURED - The VM has just become part of a protection group&lt;/li&gt; &lt;li&gt;CONFIGURING_PROTECTION - The VM is acquiring protection&lt;/li&gt; &lt;li&gt;REMOVING_PROTECTION -  The VM is losing its protection&lt;/li&gt; &lt;li&gt;RESTORING_PLACEHOLDER - SRM server is restoring the placeholder VM at the recovery site&lt;/li&gt; &lt;li&gt;DEVICE_NOT_FOUND - The VM has a disk or a device that is not replicated&lt;/li&gt; &lt;li&gt;PLACEHOLDER_VM_DELETED - Someone has deleted the placeholder VM&lt;/li&gt; &lt;li&gt;ABR_CONFIGURATION_ERROR - Array manager based configuration error&lt;/li&gt; &lt;li&gt;PLACEHOLDER_CREATION_ERROR - Creation of the placeholder VM failed&lt;/li&gt; &lt;li&gt;OK - Protected VM is OK&lt;/li&gt; &lt;li&gt;INVALID - The production VM is invalid for some reason. The server reports a fault.&lt;/li&gt; &lt;li&gt;MISSING_MAPPING - The VM has a missing mapping&lt;/li&gt; &lt;li&gt;REPLICATION_ERROR - Replication layer reports an error about the VM&lt;/li&gt; &lt;li&gt;REPLICATION_WARNING - Replication layer reports a warning about the VM&lt;/li&gt; &lt;li&gt;MAPPING_CONFLICT - Server has reported an inventory conflict: the resource pool and folder of the VM are in different datacenters&lt;/li&gt; &lt;li&gt;MISSING_UNPROTECTED_VM - The provider details of the protection group indicate the VM is part of the group and is unprotected while at the same time it has been deleted from the VC&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_ERROR - VMware vSphere Virtual Volumes configuration error&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_WARNING - VMware vSphere Virtual Volumes configuration warning&lt;/li&gt; &lt;/ul&gt;
            </summary>
            <value>Status of the protected VM &lt;ul&gt; &lt;li&gt;LOADING - Needed information is still on its way &lt;/li&gt; &lt;li&gt;NOT_CONFIGURED - The VM has just become part of a protection group&lt;/li&gt; &lt;li&gt;CONFIGURING_PROTECTION - The VM is acquiring protection&lt;/li&gt; &lt;li&gt;REMOVING_PROTECTION -  The VM is losing its protection&lt;/li&gt; &lt;li&gt;RESTORING_PLACEHOLDER - SRM server is restoring the placeholder VM at the recovery site&lt;/li&gt; &lt;li&gt;DEVICE_NOT_FOUND - The VM has a disk or a device that is not replicated&lt;/li&gt; &lt;li&gt;PLACEHOLDER_VM_DELETED - Someone has deleted the placeholder VM&lt;/li&gt; &lt;li&gt;ABR_CONFIGURATION_ERROR - Array manager based configuration error&lt;/li&gt; &lt;li&gt;PLACEHOLDER_CREATION_ERROR - Creation of the placeholder VM failed&lt;/li&gt; &lt;li&gt;OK - Protected VM is OK&lt;/li&gt; &lt;li&gt;INVALID - The production VM is invalid for some reason. The server reports a fault.&lt;/li&gt; &lt;li&gt;MISSING_MAPPING - The VM has a missing mapping&lt;/li&gt; &lt;li&gt;REPLICATION_ERROR - Replication layer reports an error about the VM&lt;/li&gt; &lt;li&gt;REPLICATION_WARNING - Replication layer reports a warning about the VM&lt;/li&gt; &lt;li&gt;MAPPING_CONFLICT - Server has reported an inventory conflict: the resource pool and folder of the VM are in different datacenters&lt;/li&gt; &lt;li&gt;MISSING_UNPROTECTED_VM - The provider details of the protection group indicate the VM is part of the group and is unprotected while at the same time it has been deleted from the VC&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_ERROR - VMware vSphere Virtual Volumes configuration error&lt;/li&gt; &lt;li&gt;VVOL_CONFIGURATION_WARNING - VMware vSphere Virtual Volumes configuration warning&lt;/li&gt; &lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmProtectionStatusDetails" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.Errors">
            <summary>
            Errors related to the status. Null if there are none.
            </summary>
            <value>Errors related to the status. Null if there are none.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.Equals(VMware.Bindings.Srm.Model.VmProtectionStatusDetails)">
            <summary>
            Returns true if VmProtectionStatusDetails instances are equal
            </summary>
            <param name="input">Instance of VmProtectionStatusDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmProtectionStatusDetails.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings">
            <summary>
            Details about IP Customization for VM.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationTypeEnum">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationTypeEnum.AUTO">
            <summary>
            Enum AUTO for value: AUTO
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationTypeEnum.NETWORKMAPPINGLEVEL">
            <summary>
            Enum NETWORKMAPPINGLEVEL for value: NETWORK_MAPPING_LEVEL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationTypeEnum.MANUAL">
            <summary>
            Enum MANUAL for value: MANUAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationTypeEnum.NOCUSTOMIZATION">
            <summary>
            Enum NOCUSTOMIZATION for value: NO_CUSTOMIZATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IpCustomizationType">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IsWindowsGuest">
            <summary>
            If guest OS is Windows
            </summary>
            <value>If guest OS is Windows</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.IsRecoverySiteLocal">
            <summary>
            If recovery site is local
            </summary>
            <value>If recovery site is local</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.NicSettings">
            <summary>
            IP settings of all virtual ethernet cards on VM
            </summary>
            <value>IP settings of all virtual ethernet cards on VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.Equals(VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings)">
            <summary>
            Returns true if VmRecoveryIpCustomizationSettings instances are equal
            </summary>
            <param name="input">Instance of VmRecoveryIpCustomizationSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity">
            <summary>
            Details about IP Customization for VM.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationTypeEnum">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationTypeEnum.AUTO">
            <summary>
            Enum AUTO for value: AUTO
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationTypeEnum.NETWORKMAPPINGLEVEL">
            <summary>
            Enum NETWORKMAPPINGLEVEL for value: NETWORK_MAPPING_LEVEL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationTypeEnum.MANUAL">
            <summary>
            Enum MANUAL for value: MANUAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationTypeEnum.NOCUSTOMIZATION">
            <summary>
            Enum NOCUSTOMIZATION for value: NO_CUSTOMIZATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IpCustomizationType">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IsWindowsGuest">
            <summary>
            If guest OS is Windows
            </summary>
            <value>If guest OS is Windows</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.IsRecoverySiteLocal">
            <summary>
            If recovery site is local
            </summary>
            <value>If recovery site is local</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.NicSettings">
            <summary>
            IP settings of all virtual ethernet cards on VM
            </summary>
            <value>IP settings of all virtual ethernet cards on VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity)">
            <summary>
            Returns true if VmRecoveryIpCustomizationSettingsDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmRecoveryIpCustomizationSettingsDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec">
            <summary>
            Update spec defining the IP customization for a VM.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationTypeEnum">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationTypeEnum.AUTO">
            <summary>
            Enum AUTO for value: AUTO
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationTypeEnum.NETWORKMAPPINGLEVEL">
            <summary>
            Enum NETWORKMAPPINGLEVEL for value: NETWORK_MAPPING_LEVEL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationTypeEnum.MANUAL">
            <summary>
            Enum MANUAL for value: MANUAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationTypeEnum.NOCUSTOMIZATION">
            <summary>
            Enum NOCUSTOMIZATION for value: NO_CUSTOMIZATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.IpCustomizationType">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.NicSettings">
            <summary>
            Contains the IP settings for all the virtual ethernet cards on the VM
            </summary>
            <value>Contains the IP settings for all the virtual ethernet cards on the VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.Equals(VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec)">
            <summary>
            Returns true if VmRecoveryIpCustomizationSettingsSpec instances are equal
            </summary>
            <param name="input">Instance of VmRecoveryIpCustomizationSettingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoveryIpCustomizationSettingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettings">
            <summary>
            Recovery settings for a VM, defined in the context of a recovery plan
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationTypeEnum">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationTypeEnum.AUTO">
            <summary>
            Enum AUTO for value: AUTO
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationTypeEnum.NETWORKMAPPINGLEVEL">
            <summary>
            Enum NETWORKMAPPINGLEVEL for value: NETWORK_MAPPING_LEVEL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationTypeEnum.MANUAL">
            <summary>
            Enum MANUAL for value: MANUAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationTypeEnum.NOCUSTOMIZATION">
            <summary>
            Enum NOCUSTOMIZATION for value: NO_CUSTOMIZATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.IpCustomizationType">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettings.StartupActionEnum">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.StartupActionEnum.POWERON">
            <summary>
            Enum POWERON for value: POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.StartupActionEnum.DONOTPOWERON">
            <summary>
            Enum DONOTPOWERON for value: DO_NOT_POWER_ON
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.StartupAction">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatusEnum">
            <summary>
            Status of VM tools on the VM
            </summary>
            <value>Status of VM tools on the VM</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatusEnum.INSTALLING">
            <summary>
            Enum INSTALLING for value: INSTALLING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatusEnum.UPGRADING">
            <summary>
            Enum UPGRADING for value: UPGRADING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatusEnum.INSTALLED">
            <summary>
            Enum INSTALLED for value: INSTALLED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatusEnum.NOTINSTALLED">
            <summary>
            Enum NOTINSTALLED for value: NOT_INSTALLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.VmToolsStatus">
            <summary>
            Status of VM tools on the VM
            </summary>
            <value>Status of VM tools on the VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoverySettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.NicSettings">
            <summary>
            Contains the IP settings for all the virtual ethernet cards on the VM
            </summary>
            <value>Contains the IP settings for all the virtual ethernet cards on the VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.ShutdownActionSettings">
            <summary>
            Gets or Sets ShutdownActionSettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.PrePowerOnSteps">
            <summary>
            Contains all per VM steps that should be executed before the VM is powered on
            </summary>
            <value>Contains all per VM steps that should be executed before the VM is powered on</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.PostPowerOnSteps">
            <summary>
            Contains all per VM steps that should be executed after the VM is powered on
            </summary>
            <value>Contains all per VM steps that should be executed after the VM is powered on</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.StartupActionSettings">
            <summary>
            Gets or Sets StartupActionSettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.DependentVms">
            <summary>
            This is a list of VM identities that must be powered-on before this VM can be powered on. Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored. This list may contain VMs that are not contained by any protection group in the plan. But it will only contain valid VMs.
            </summary>
            <value>This is a list of VM identities that must be powered-on before this VM can be powered on. Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored. This list may contain VMs that are not contained by any protection group in the plan. But it will only contain valid VMs.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.ChangeVersion">
            <summary>
            Change version control. When reconfiguring an existing Protected workload this value must be set, and match the most recent value. For settings on newly added VMs, leave it unset.
            </summary>
            <value>Change version control. When reconfiguring an existing Protected workload this value must be set, and match the most recent value. For settings on newly added VMs, leave it unset.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettings.AllowVmotionMigration">
            <summary>
            Whether this VM to be migrated to the recovery site using vMotion during a planned failover workflow
            </summary>
            <value>Whether this VM to be migrated to the recovery site using vMotion during a planned failover workflow</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.Equals(VMware.Bindings.Srm.Model.VmRecoverySettings)">
            <summary>
            Returns true if VmRecoverySettings instances are equal
            </summary>
            <param name="input">Instance of VmRecoverySettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec">
            <summary>
            Recovery settings for a VM, defined in the context of a recovery plan
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationTypeEnum">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationTypeEnum.AUTO">
            <summary>
            Enum AUTO for value: AUTO
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationTypeEnum.NETWORKMAPPINGLEVEL">
            <summary>
            Enum NETWORKMAPPINGLEVEL for value: NETWORK_MAPPING_LEVEL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationTypeEnum.MANUAL">
            <summary>
            Enum MANUAL for value: MANUAL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationTypeEnum.NOCUSTOMIZATION">
            <summary>
            Enum NOCUSTOMIZATION for value: NO_CUSTOMIZATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.IpCustomizationType">
            <summary>
            IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
            </summary>
            <value>IP customization modes:&lt;ul&gt;&lt;li&gt;Auto (AUTO)  &lt;ul&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to True - Site Recovery Manager evaluates the IP subnet mapping rules during recovery to customize the virtual machines.&lt;/li&gt;    &lt;li&gt;If the advanced setting &#39;recovery.useIpMapperAutomatically&#39; is set to False - Site Recovery Manager does not evaluate the IP subnet mapping rules during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Use IP customization rules if applicable (NETWORK_LEVEL)  &lt;ul&gt;    &lt;li&gt;Site Recovery Manager will evaluate the IP subnet mapping rules during recovery of the concrete VM regardless of the advanced setting value of recovery.useIpMapperAutomatically.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Manual IP customization (MANUAL)  &lt;ul&gt;    &lt;li&gt;Manually set up explicit recovery IP settings per VM.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;li&gt;No IP customization (NO_CUSTOMIZATION)  &lt;ul&gt;    &lt;li&gt;Do not change VM IP settings during recovery.&lt;/li&gt;  &lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.StartupActionEnum">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.StartupActionEnum.POWERON">
            <summary>
            Enum POWERON for value: POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.StartupActionEnum.DONOTPOWERON">
            <summary>
            Enum DONOTPOWERON for value: DO_NOT_POWER_ON
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.StartupAction">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.NicSettings">
            <summary>
            Contains the IP settings for all the virtual ethernet cards on the VM
            </summary>
            <value>Contains the IP settings for all the virtual ethernet cards on the VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.ShutdownActionSettings">
            <summary>
            Gets or Sets ShutdownActionSettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PrePowerOnSteps">
            <summary>
            Contains all per VM steps that should be executed before the VM is powered on
            </summary>
            <value>Contains all per VM steps that should be executed before the VM is powered on</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.PostPowerOnSteps">
            <summary>
            Contains all per VM steps that should be executed after the VM is powered on
            </summary>
            <value>Contains all per VM steps that should be executed after the VM is powered on</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.StartupActionSettings">
            <summary>
            Gets or Sets StartupActionSettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.DependentVms">
            <summary>
            This is a list of VM identities that must be powered-on before this VM can be powered on. Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored. This list may contain VMs that are not contained by any protection group in the plan. But it will only contain valid VMs.
            </summary>
            <value>This is a list of VM identities that must be powered-on before this VM can be powered on. Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored. This list may contain VMs that are not contained by any protection group in the plan. But it will only contain valid VMs.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.Equals(VMware.Bindings.Srm.Model.VmRecoverySettingsSpec)">
            <summary>
            Returns true if VmRecoverySettingsSpec instances are equal
            </summary>
            <param name="input">Instance of VmRecoverySettingsSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsState">
            <summary>
            Current state of the recovery settings for a protected VM
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsState.StatusEnum">
            <summary>
            Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;
            </summary>
            <value>Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsState.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsState.StatusEnum.SYNCCONFLICT">
            <summary>
            Enum SYNCCONFLICT for value: SYNC_CONFLICT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsState.Status">
            <summary>
            Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;
            </summary>
            <value>Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoverySettingsState" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsState.RecoverySettings">
            <summary>
            Gets or Sets RecoverySettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsState.ProtectionGroupSupportVmotion">
            <summary>
            Whether this VM belongs to a protection group that supports vMotion
            </summary>
            <value>Whether this VM belongs to a protection group that supports vMotion</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsState.VmotionMigrationSupported">
            <summary>
            Whether this VM can be migrated to the recovery site using vMotion during a planned failover workflow
            </summary>
            <value>Whether this VM can be migrated to the recovery site using vMotion during a planned failover workflow</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.Equals(VMware.Bindings.Srm.Model.VmRecoverySettingsState)">
            <summary>
            Returns true if VmRecoverySettingsState instances are equal
            </summary>
            <param name="input">Instance of VmRecoverySettingsState to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsState.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity">
            <summary>
            Current state of the recovery settings for a protected VM
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.StatusEnum">
            <summary>
            Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;
            </summary>
            <value>Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.StatusEnum.SYNCCONFLICT">
            <summary>
            Enum SYNCCONFLICT for value: SYNC_CONFLICT
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.Status">
            <summary>
            Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;
            </summary>
            <value>Status of the recovery settings.&lt;ul&gt;&lt;li&gt;OK - there are no recovery settings conditions to alert to the user.&lt;li&gt;SYNC_CONFLICT - Synchronization error. The settings are in a sync conflict with the remote site.To clear the conflict, you must run edit plan operation, which will synchronize both sites.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.RecoverySettings">
            <summary>
            Gets or Sets RecoverySettings
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.ProtectionGroupSupportVmotion">
            <summary>
            Whether this VM belongs to a protection group that supports vMotion
            </summary>
            <value>Whether this VM belongs to a protection group that supports vMotion</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.VmotionMigrationSupported">
            <summary>
            Whether this VM can be migrated to the recovery site using vMotion during a planned failover workflow
            </summary>
            <value>Whether this VM can be migrated to the recovery site using vMotion during a planned failover workflow</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity)">
            <summary>
            Returns true if VmRecoverySettingsStateDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmRecoverySettingsStateDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmRecoverySettingsStateDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmReplicationInfo">
            <summary>
            Information about replicated virtual machine.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum">
            <summary>
            Virtual machine VR replication status
            </summary>
            <value>Virtual machine VR replication status</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.FULLSYNC">
            <summary>
            Enum FULLSYNC for value: FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.SYNC">
            <summary>
            Enum SYNC for value: SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.INITIALFULLSYNC">
            <summary>
            Enum INITIALFULLSYNC for value: INITIAL_FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.PAUSED">
            <summary>
            Enum PAUSED for value: PAUSED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.RPOVIOLATION">
            <summary>
            Enum RPOVIOLATION for value: RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.MOVING">
            <summary>
            Enum MOVING for value: MOVING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.ERROROCCURRED">
            <summary>
            Enum ERROROCCURRED for value: ERROR_OCCURRED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.CONFIGURING">
            <summary>
            Enum CONFIGURING for value: CONFIGURING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.NOTACTIVE">
            <summary>
            Enum NOTACTIVE for value: NOT_ACTIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.SYNCRPOVIOLATION">
            <summary>
            Enum SYNCRPOVIOLATION for value: SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.NOTACTIVERPOVIOLATION">
            <summary>
            Enum NOTACTIVERPOVIOLATION for value: NOT_ACTIVE_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.ERRORRPOVIOLATION">
            <summary>
            Enum ERRORRPOVIOLATION for value: ERROR_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.RECOVERED">
            <summary>
            Enum RECOVERED for value: RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.RECOVERING">
            <summary>
            Enum RECOVERING for value: RECOVERING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatusEnum.FULLSYNCRPOVIOLATION">
            <summary>
            Enum FULLSYNCRPOVIOLATION for value: FULL_SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfo.ReplicationStatus">
            <summary>
            Virtual machine VR replication status
            </summary>
            <value>Virtual machine VR replication status</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmReplicationInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfo.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfo.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfo.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfo.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.Equals(VMware.Bindings.Srm.Model.VmReplicationInfo)">
            <summary>
            Returns true if VmReplicationInfo instances are equal
            </summary>
            <param name="input">Instance of VmReplicationInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity">
            <summary>
            Information about replicated virtual machine.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum">
            <summary>
            Virtual machine VR replication status
            </summary>
            <value>Virtual machine VR replication status</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.FULLSYNC">
            <summary>
            Enum FULLSYNC for value: FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.SYNC">
            <summary>
            Enum SYNC for value: SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.INITIALFULLSYNC">
            <summary>
            Enum INITIALFULLSYNC for value: INITIAL_FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.PAUSED">
            <summary>
            Enum PAUSED for value: PAUSED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.RPOVIOLATION">
            <summary>
            Enum RPOVIOLATION for value: RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.MOVING">
            <summary>
            Enum MOVING for value: MOVING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.ERROROCCURRED">
            <summary>
            Enum ERROROCCURRED for value: ERROR_OCCURRED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.CONFIGURING">
            <summary>
            Enum CONFIGURING for value: CONFIGURING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.NOTACTIVE">
            <summary>
            Enum NOTACTIVE for value: NOT_ACTIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.SYNCRPOVIOLATION">
            <summary>
            Enum SYNCRPOVIOLATION for value: SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.NOTACTIVERPOVIOLATION">
            <summary>
            Enum NOTACTIVERPOVIOLATION for value: NOT_ACTIVE_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.ERRORRPOVIOLATION">
            <summary>
            Enum ERRORRPOVIOLATION for value: ERROR_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.RECOVERED">
            <summary>
            Enum RECOVERED for value: RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.RECOVERING">
            <summary>
            Enum RECOVERING for value: RECOVERING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatusEnum.FULLSYNCRPOVIOLATION">
            <summary>
            Enum FULLSYNCRPOVIOLATION for value: FULL_SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ReplicationStatus">
            <summary>
            Virtual machine VR replication status
            </summary>
            <value>Virtual machine VR replication status</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity)">
            <summary>
            Returns true if VmReplicationInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmReplicationInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList">
            <summary>
            List of entities about: Information about replicated virtual machine.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList)">
            <summary>
            Returns true if VmReplicationInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VmReplicationInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmReplicationInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings">
            <summary>
            Summary of VM recovery settings. Detailed settings are accessible at &lt;code&gt;/recovery-settings&lt;/code&gt;.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.StartupActionEnum">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.StartupActionEnum.POWERON">
            <summary>
            Enum POWERON for value: POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.StartupActionEnum.DONOTPOWERON">
            <summary>
            Enum DONOTPOWERON for value: DO_NOT_POWER_ON
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.StartupAction">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.DependentVms">
            <summary>
            List of VMs which must be powered-on before this VM can be powered on.&lt;p&gt;Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored.&lt;p&gt;The list may contain VMs which are not contained by any protection group in the plan.
            </summary>
            <value>List of VMs which must be powered-on before this VM can be powered on.&lt;p&gt;Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored.&lt;p&gt;The list may contain VMs which are not contained by any protection group in the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PrePowerOnSteps">
            <summary>
            Summary of the pre power-on steps
            </summary>
            <value>Summary of the pre power-on steps</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.PostPowerOnSteps">
            <summary>
            Summary of the post power-on steps
            </summary>
            <value>Summary of the post power-on steps</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.AllowMigration">
            <summary>
            Whether or not vMotion is enabled for the current VM
            </summary>
            <value>Whether or not vMotion is enabled for the current VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.Equals(VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings)">
            <summary>
            Returns true if VmSummarizedRecoverySettings instances are equal
            </summary>
            <param name="input">Instance of VmSummarizedRecoverySettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettings.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity">
            <summary>
            Summary of VM recovery settings. Detailed settings are accessible at &lt;code&gt;/recovery-settings&lt;/code&gt;.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum.P1">
            <summary>
            Enum P1 for value: P1
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum.P2">
            <summary>
            Enum P2 for value: P2
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum.P3">
            <summary>
            Enum P3 for value: P3
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum.P4">
            <summary>
            Enum P4 for value: P4
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PriorityEnum.P5">
            <summary>
            Enum P5 for value: P5
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.Priority">
            <summary>
            Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.
            </summary>
            <value>Recovery priority group. Used to translate server priority values to client priorities. The recovery priority for this VM. P1 is the highest and P5 is the lowest priority.</value>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.StartupActionEnum">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.StartupActionEnum.POWERON">
            <summary>
            Enum POWERON for value: POWER_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.StartupActionEnum.DONOTPOWERON">
            <summary>
            Enum DONOTPOWERON for value: DO_NOT_POWER_ON
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.StartupAction">
            <summary>
            Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;
            </summary>
            <value>Startup action after recovery:&lt;ul&gt;&lt;li&gt;DO_NOT_POWER_ON - The VM will not be powered on and post-power-on steps will not be executed as partof the recovery and test workflows. Note that the VM may still get powered onduring recovery as part of the IP customization workflow.&lt;li&gt;POWER_ON - The VM will be powered on and post-power-on steps will be executed as part of the recovery and test workflows.&lt;/ul&gt;</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.DependentVms">
            <summary>
            List of VMs which must be powered-on before this VM can be powered on.&lt;p&gt;Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored.&lt;p&gt;The list may contain VMs which are not contained by any protection group in the plan.
            </summary>
            <value>List of VMs which must be powered-on before this VM can be powered on.&lt;p&gt;Dependencies are only valid within VMs of the same recovery priority. If there are dependent VMs that are not in the current plan and same recovery priority, they will be ignored.&lt;p&gt;The list may contain VMs which are not contained by any protection group in the plan.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PrePowerOnSteps">
            <summary>
            Summary of the pre power-on steps
            </summary>
            <value>Summary of the pre power-on steps</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.PostPowerOnSteps">
            <summary>
            Summary of the post power-on steps
            </summary>
            <value>Summary of the post power-on steps</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.AllowMigration">
            <summary>
            Whether or not vMotion is enabled for the current VM
            </summary>
            <value>Whether or not vMotion is enabled for the current VM</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity)">
            <summary>
            Returns true if VmSummarizedRecoverySettingsDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmSummarizedRecoverySettingsDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VmSummarizedRecoverySettingsDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfo">
            <summary>
            Details about a VVOL fault domain
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Id">
            <summary>
            Id of the fault domain
            </summary>
            <value>Id of the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Warnings">
            <summary>
            Array of warning messages about the fault domain
            </summary>
            <value>Array of warning messages about the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Errors">
            <summary>
            Array of error messages about the fault domain
            </summary>
            <value>Array of error messages about the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Name">
            <summary>
            Name of the fault domain
            </summary>
            <value>Name of the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Description">
            <summary>
            Description of the fault domain
            </summary>
            <value>Description of the fault domain</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Equals(VMware.Bindings.Srm.Model.VvolFaultDomainInfo)">
            <summary>
            Returns true if VvolFaultDomainInfo instances are equal
            </summary>
            <param name="input">Instance of VvolFaultDomainInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity">
            <summary>
            Details about a VVOL fault domain
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Id">
            <summary>
            Id of the fault domain
            </summary>
            <value>Id of the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Warnings">
            <summary>
            Array of warning messages about the fault domain
            </summary>
            <value>Array of warning messages about the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Errors">
            <summary>
            Array of error messages about the fault domain
            </summary>
            <value>Array of error messages about the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Name">
            <summary>
            Name of the fault domain
            </summary>
            <value>Name of the fault domain</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Description">
            <summary>
            Description of the fault domain
            </summary>
            <value>Description of the fault domain</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity)">
            <summary>
            Returns true if VvolFaultDomainInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VvolFaultDomainInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList">
            <summary>
            List of entities about: Details about a VVOL fault domain
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList)">
            <summary>
            Returns true if VvolFaultDomainInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VvolFaultDomainInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolFaultDomainInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec">
            <summary>
            VMware vSphere Virtual Volumes (vVols)-based replication details for creation or modification of the protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.ReplicationGroups">
            <summary>
            The list of replication groups that are currently unprotected which will be associated with a protection group.
            </summary>
            <value>The list of replication groups that are currently unprotected which will be associated with a protection group.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.Equals(VMware.Bindings.Srm.Model.VvolProtectionGroupSpec)">
            <summary>
            Returns true if VvolProtectionGroupSpec instances are equal
            </summary>
            <param name="input">Instance of VvolProtectionGroupSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolProtectionGroupSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolReplicationGroupData">
            <summary>
            Details about the VMware vSphere Virtual Volumes replication group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolReplicationGroupData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupData.FaultDomainId">
            <summary>
            The fault domain ID.
            </summary>
            <value>The fault domain ID.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupData.DeviceGroupId">
            <summary>
            The Device group ID.
            </summary>
            <value>The Device group ID.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.Equals(VMware.Bindings.Srm.Model.VvolReplicationGroupData)">
            <summary>
            Returns true if VvolReplicationGroupData instances are equal
            </summary>
            <param name="input">Instance of VvolReplicationGroupData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo">
            <summary>
            Details about a replication group within the VMware vSphere Virtual Volumes (vVols) protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Id">
            <summary>
            An ID of the replication group.
            </summary>
            <value>An ID of the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Warnings">
            <summary>
            An array of warning messages about the replication group.
            </summary>
            <value>An array of warning messages about the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Errors">
            <summary>
            An array of error messages about the replication group.
            </summary>
            <value>An array of error messages about the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Name">
            <summary>
            Name of the replication group.
            </summary>
            <value>Name of the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.VmInfos">
            <summary>
            A list of VMs residing on the VMware vSphere Virtual Volumes replication group.
            </summary>
            <value>A list of VMs residing on the VMware vSphere Virtual Volumes replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.ReplicationGroupInfo">
            <summary>
            Gets or Sets ReplicationGroupInfo
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Equals(VMware.Bindings.Srm.Model.VvolReplicationGroupInfo)">
            <summary>
            Returns true if VvolReplicationGroupInfo instances are equal
            </summary>
            <param name="input">Instance of VvolReplicationGroupInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity">
            <summary>
            Details about a replication group within the VMware vSphere Virtual Volumes (vVols) protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Id">
            <summary>
            An ID of the replication group.
            </summary>
            <value>An ID of the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Warnings">
            <summary>
            An array of warning messages about the replication group.
            </summary>
            <value>An array of warning messages about the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Errors">
            <summary>
            An array of error messages about the replication group.
            </summary>
            <value>An array of error messages about the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Name">
            <summary>
            Name of the replication group.
            </summary>
            <value>Name of the replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.VmInfos">
            <summary>
            A list of VMs residing on the VMware vSphere Virtual Volumes replication group.
            </summary>
            <value>A list of VMs residing on the VMware vSphere Virtual Volumes replication group.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.ReplicationGroupInfo">
            <summary>
            Gets or Sets ReplicationGroupInfo
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Equals(VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity)">
            <summary>
            Returns true if VvolReplicationGroupInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VvolReplicationGroupInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList">
            <summary>
            List of entities about: Details about a replication group within the VMware vSphere Virtual Volumes (vVols) protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.Equals(VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList)">
            <summary>
            Returns true if VvolReplicationGroupInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VvolReplicationGroupInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo">
            <summary>
            Details about a virtual machine in a replication group within the VMware vSphere Virtual Volumes protection group.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Id">
            <summary>
            The identifier of the virtual machine.
            </summary>
            <value>The identifier of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Name">
            <summary>
            The name of the virtual machine.
            </summary>
            <value>The name of the virtual machine.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Template">
            <summary>
            Whether this VM is a template VM
            </summary>
            <value>Whether this VM is a template VM</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.InsideVapp">
            <summary>
            Whether this VM is inside a vApp
            </summary>
            <value>Whether this VM is inside a vApp</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Warnings">
            <summary>
            An array of warning messages about the VM.
            </summary>
            <value>An array of warning messages about the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Errors">
            <summary>
            An array of error messages about the VM.
            </summary>
            <value>An array of error messages about the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.VvolReplicationGroups">
            <summary>
            The replication groups for this VM. Virtual machines sharing the same replication groups belong to the same consistency group and will be added or removed from a protection group together.
            </summary>
            <value>The replication groups for this VM. Virtual machines sharing the same replication groups belong to the same consistency group and will be added or removed from a protection group together.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Equals(VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo)">
            <summary>
            Returns true if VvolReplicationGroupVmInfo instances are equal
            </summary>
            <param name="input">Instance of VvolReplicationGroupVmInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.VvolReplicationGroupVmInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.WinsSetting">
            <summary>
            WINS setting
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.WinsSetting" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.WinsSetting.PrimaryServer">
            <summary>
            The address of the preferred WINS server.
            </summary>
            <value>The address of the preferred WINS server.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.WinsSetting.AlternateServer">
            <summary>
            The address of the alternate WINS server.
            </summary>
            <value>The address of the alternate WINS server.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.Equals(VMware.Bindings.Srm.Model.WinsSetting)">
            <summary>
            Returns true if WinsSetting instances are equal
            </summary>
            <param name="input">Instance of WinsSetting to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.WinsSetting.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Srm.Model.X509Certificate">
            <summary>
            The certificate in X509 format.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Srm.Model.X509Certificate" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SerialNumber">
            <summary>
            The serial number of the certificate, represented as string. The serial number is a number assigned by the certification authority to each certificate. It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate).
            </summary>
            <value>The serial number of the certificate, represented as string. The serial number is a number assigned by the certification authority to each certificate. It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate).</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.NotAfter">
            <summary>
            End date, represented as number of milliseconds, from the validity period of the certificate.
            </summary>
            <value>End date, represented as number of milliseconds, from the validity period of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.NotBefore">
            <summary>
            Start date, represented as number of milliseconds, from the validity period of the certificate.
            </summary>
            <value>Start date, represented as number of milliseconds, from the validity period of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.Signature">
            <summary>
            Signature value as Base64 encoded string (with ISO-8859-1 charset) from the certificate.
            </summary>
            <value>Signature value as Base64 encoded string (with ISO-8859-1 charset) from the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate._Version">
            <summary>
            Version number from the certificate.
            </summary>
            <value>Version number from the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.IssuerDn">
            <summary>
            The issuer distinguished name of the certificate.
            </summary>
            <value>The issuer distinguished name of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SubjectDn">
            <summary>
            The sSubject distinguished name of the certificate.
            </summary>
            <value>The sSubject distinguished name of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SigAlgName">
            <summary>
             Gets the signature algorithm name for the certificate signature algorithm.
            </summary>
            <value> Gets the signature algorithm name for the certificate signature algorithm.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SigAlgOid">
            <summary>
            Signature algorithm OID string from the certificate. An OID is represented by a set of nonnegative whole numbers separated by periods.
            </summary>
            <value>Signature algorithm OID string from the certificate. An OID is represented by a set of nonnegative whole numbers separated by periods.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.PublicKey">
            <summary>
            The public key of the certificate.
            </summary>
            <value>The public key of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.PublicKeyFormat">
            <summary>
            The public key format of the certificate.
            </summary>
            <value>The public key format of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.PublicKeyAlgorithm">
            <summary>
            The public key algorithm of the certificate.
            </summary>
            <value>The public key algorithm of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.Thumbprint">
            <summary>
            The thumbprint of the certificate.
            </summary>
            <value>The thumbprint of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.Certificate">
            <summary>
            The certificate in PEM format.
            </summary>
            <value>The certificate in PEM format.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.IssuerUniqueId">
            <summary>
            Issuer unique ID.
            </summary>
            <value>Issuer unique ID.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SubjectUniqueId">
            <summary>
            Subject unique ID.
            </summary>
            <value>Subject unique ID.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.KeyUsage">
            <summary>
            Boolean array representing bits of the KeyUsage extension, (OID &#x3D; 2.5.29.15). The key usage extension defines the purpose (e.g., encipherment, signature, certificate signing) of the key contained in the certificate. The ASN.1 definition for this is: &lt;pre&gt; KeyUsage ::&#x3D; BIT STRING {      digitalSignature        (0),      nonRepudiation          (1),      keyEncipherment         (2),      dataEncipherment        (3),      keyAgreement            (4),      keyCertSign             (5),      cRLSign                 (6),      encipherOnly            (7),      decipherOnly            (8) } &lt;/pre&gt;
            </summary>
            <value>Boolean array representing bits of the KeyUsage extension, (OID &#x3D; 2.5.29.15). The key usage extension defines the purpose (e.g., encipherment, signature, certificate signing) of the key contained in the certificate. The ASN.1 definition for this is: &lt;pre&gt; KeyUsage ::&#x3D; BIT STRING {      digitalSignature        (0),      nonRepudiation          (1),      keyEncipherment         (2),      dataEncipherment        (3),      keyAgreement            (4),      keyCertSign             (5),      cRLSign                 (6),      encipherOnly            (7),      decipherOnly            (8) } &lt;/pre&gt;</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.IssuerAlternativeNames">
            <summary>
            The issuer alternative names.
            </summary>
            <value>The issuer alternative names.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.SubjectAlternativeNames">
            <summary>
            The subject alternative names.
            </summary>
            <value>The subject alternative names.</value>
        </member>
        <member name="P:VMware.Bindings.Srm.Model.X509Certificate.ExtendedKeyUsage">
            <summary>
            Indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension field.
            </summary>
            <value>Indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension field.</value>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.Equals(VMware.Bindings.Srm.Model.X509Certificate)">
            <summary>
            Returns true if X509Certificate instances are equal
            </summary>
            <param name="input">Instance of X509Certificate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Srm.Model.X509Certificate.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
    </members>
</doc>
