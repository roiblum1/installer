<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VMware.Bindings.Vr</name>
    </assembly>
    <members>
        <member name="T:VMware.Bindings.Vr.Api.IAuthenticationApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.GetCurrentSession">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.GetCurrentSessionWithHttpInfo">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.Login">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.LoginWithHttpInfo">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.Logout">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiSync.LogoutWithHttpInfo">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IAuthenticationApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.GetCurrentSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.GetCurrentSessionWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any.
            </summary>
            <remarks>
            Returns information about the current session, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.LoginWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <remarks>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionIdData)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IAuthenticationApiAsync.LogoutWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated.
            </summary>
            <remarks>
            Logs out if the session is authenticated.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IAuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.AuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.AuthenticationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.AuthenticationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.AuthenticationApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.AuthenticationApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.AuthenticationApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.AuthenticationApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.AuthenticationApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.AuthenticationApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.AuthenticationApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.GetCurrentSession">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.GetCurrentSessionWithHttpInfo">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.GetCurrentSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.GetCurrentSessionWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session, if any. Returns information about the current session, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.Login">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LoginWithHttpInfo">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionIdData</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LoginWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value. Logs in and returns the session ID. In the subsequent requests, include the &#39;x-dr-session&#39; header with the returned session ID value.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionIdData)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.Logout">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LogoutWithHttpInfo">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.AuthenticationApi.LogoutWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Logs out if the session is authenticated. Logs out if the session is authenticated.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IPairingApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.CreateRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.CreateRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.DeleteVrPairing(System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.DeleteVrPairingWithHttpInfo(System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetAllVrDetailsInPairing(System.String)">
            <summary>
            Get information about vSphere Replication servers that are paired.
            </summary>
            <remarks>
            Get information about vSphere Replication servers that are paired.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetAllVrDetailsInPairingWithHttpInfo(System.String)">
            <summary>
            Get information about vSphere Replication servers that are paired.
            </summary>
            <remarks>
            Get information about vSphere Replication servers that are paired.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetAllVrServersInPairing(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetAllVrServersInPairingWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrInfoInPairing(System.String,System.String)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <remarks>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <returns>VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrInfoInPairingWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <remarks>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <returns>ApiResponse of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairing(System.String)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairingWithHttpInfo(System.String)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairingIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairingIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairings(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrPairingsWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.GetVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.PairVr(VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Pair to the remote vSphere Replication Management Server.
            </summary>
            <remarks>
            Pair to the remote vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.PairVrWithHttpInfo(VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Pair to the remote vSphere Replication Management Server.
            </summary>
            <remarks>
            Pair to the remote vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.ReconnectVrPairing(System.String,VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <remarks>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.ReconnectVrPairingWithHttpInfo(System.String,VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <remarks>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.ReconnectVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.ReconnectVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.RegisterVrServerInPairing(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Register a replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.RegisterVrServerInPairingWithHttpInfo(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Register a replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.UnregisterVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiSync.UnregisterVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IPairingApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.CreateRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.CreateRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.DeleteVrPairingAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.DeleteVrPairingWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <remarks>
            Delete the existing pairing with the remote vSphere Replication Management server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetAllVrDetailsInPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about vSphere Replication servers that are paired.
            </summary>
            <remarks>
            Get information about vSphere Replication servers that are paired.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetAllVrDetailsInPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about vSphere Replication servers that are paired.
            </summary>
            <remarks>
            Get information about vSphere Replication servers that are paired.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetAllVrServersInPairingAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetAllVrServersInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Get all registered replication servers for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <remarks>
            Returns information about the current session to the remote vSphere Replication Management server, if any.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrInfoInPairingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <remarks>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrInfoInPairingWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <remarks>
            Get information about a specific vSphere Replication Management Server in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing.
            </summary>
            <remarks>
            Get information about the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing.
            </summary>
            <remarks>
            Get all issues for the pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingsAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrPairingsWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings.
            </summary>
            <remarks>
            Get a list of all existing pairings.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.GetVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.PairVrAsync(VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to the remote vSphere Replication Management Server.
            </summary>
            <remarks>
            Pair to the remote vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.PairVrWithHttpInfoAsync(VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to the remote vSphere Replication Management Server.
            </summary>
            <remarks>
            Pair to the remote vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.ReconnectVrPairingAsync(System.String,VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <remarks>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.ReconnectVrPairingWithHttpInfoAsync(System.String,VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <remarks>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.ReconnectVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.ReconnectVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.RegisterVrServerInPairingAsync(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Register a replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.RegisterVrServerInPairingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Register a replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.UnregisterVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IPairingApiAsync.UnregisterVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <remarks>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IPairingApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.PairingApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.PairingApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.PairingApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.PairingApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.PairingApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.PairingApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.PairingApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.PairingApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.PairingApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.PairingApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.CreateRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server. Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns></returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.CreateRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server. Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.CreateRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server. Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.CreateRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server. Returns information about the current session to the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.DeleteVrPairing(System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server. Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.DeleteVrPairingWithHttpInfo(System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server. Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.DeleteVrPairingAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server. Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.DeleteVrPairingWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete the existing pairing with the remote vSphere Replication Management server. Delete the existing pairing with the remote vSphere Replication Management server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="force">Whether or not to perform a single-sided break pair operation. This should be true if  remote vSphere Replication server is not available anymore and you want to remove  the pairing information from the current site. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrDetailsInPairing(System.String)">
            <summary>
            Get information about vSphere Replication servers that are paired. Get information about vSphere Replication servers that are paired.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrDetailsInPairingWithHttpInfo(System.String)">
            <summary>
            Get information about vSphere Replication servers that are paired. Get information about vSphere Replication servers that are paired.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrDetailsInPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about vSphere Replication servers that are paired. Get information about vSphere Replication servers that are paired.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrDetailsInPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about vSphere Replication servers that are paired. Get information about vSphere Replication servers that are paired.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrServersInPairing(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing. Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrServersInPairingWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing. Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrServersInPairingAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing. Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetAllVrServersInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers for a vSphere Replication in a pairing. Get all registered replication servers for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetRemoteSession(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any. Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetRemoteSessionWithHttpInfo(System.String)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any. Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetRemoteSessionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any. Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of SessionInfo</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetRemoteSessionWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns information about the current session to the remote vSphere Replication Management server, if any. Returns information about the current session to the remote vSphere Replication Management server, if any.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (SessionInfo)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrInfoInPairing(System.String,System.String)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing. Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <returns>VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrInfoInPairingWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing. Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <returns>ApiResponse of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrInfoInPairingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing. Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrInfoInPairingWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a specific vSphere Replication Management Server in a pairing. Get information about a specific vSphere Replication Management Server in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairing(System.String)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingWithHttpInfo(System.String)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the pairing. Get information about the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all issues for the pairing. Get all issues for the pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairings(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingsWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingsAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of PairingDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrPairingsWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all existing pairings. Get a list of all existing pairings.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (PairingDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing. Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing. Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing. Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.GetVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing. Get information about a registered vSphere Replication server for a VRMS, which is part of a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.PairVr(VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Pair to the remote vSphere Replication Management Server. Pair to the remote vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.PairVrWithHttpInfo(VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Pair to the remote vSphere Replication Management Server. Pair to the remote vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.PairVrAsync(VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to the remote vSphere Replication Management Server. Pair to the remote vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.PairVrWithHttpInfoAsync(VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Pair to the remote vSphere Replication Management Server. Pair to the remote vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingSpec">Pair the remote server spec</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrPairing(System.String,VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS). Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrPairingWithHttpInfo(System.String,VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS). Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrPairingAsync(System.String,VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS). Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrPairingWithHttpInfoAsync(System.String,VMware.Bindings.Vr.Model.PairingSpec,System.Threading.CancellationToken)">
            <summary>
            Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS). Reconnect the existing pairing to the remote vSphere Replication Management Server (VRMS).
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="pairingSpec">Reconnect with the remote server spec.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing. Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing. Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing. Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.ReconnectVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing. Update the connection information for this vSphere Replication server and reset any current connection for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.RegisterVrServerInPairing(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing. Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.RegisterVrServerInPairingWithHttpInfo(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing. Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.RegisterVrServerInPairingAsync(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing. Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.RegisterVrServerInPairingWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server for a vSphere Replication in a pairing. Register a replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="stringDrData">ID of the replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.UnregisterVrServerInPairing(System.String,System.String,System.String)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing. Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.UnregisterVrServerInPairingWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing. Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.UnregisterVrServerInPairingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing. Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.PairingApi.UnregisterVrServerInPairingWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server for a vSphere Replication in a pairing. Unregister a vSphere Replication server for a vSphere Replication in a pairing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vrId">The ID of the VRMS</param>
            <param name="replicationServerId">The ID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IReplicationApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.BrowseDatastore(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <remarks>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <returns>DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.BrowseDatastoreWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <remarks>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <returns>ApiResponse of DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.CheckStoragePolicyCompliance(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Check datastores for compliance against a given storage policy.
            </summary>
            <remarks>
            Check datastores for compliance against a given storage policy.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <returns>StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.CheckStoragePolicyComplianceWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Check datastores for compliance against a given storage policy.
            </summary>
            <remarks>
            Check datastores for compliance against a given storage policy.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <returns>ApiResponse of StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ConfigureReplication(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec})">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site.
            </summary>
            <remarks>
            Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ConfigureReplicationWithHttpInfo(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec})">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site.
            </summary>
            <remarks>
            Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.DestroyReplication(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <remarks>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.DestroyReplicationWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <remarks>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetAllReplications(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <remarks>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <returns>ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetAllReplicationsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <remarks>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <returns>ApiResponse of ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetLocalVmDisks(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetLocalVmDisksWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetLocalVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <remarks>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <returns>VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetLocalVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <remarks>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <returns>ApiResponse of VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicatedVmDisks(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a replicated VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a replicated VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicatedVmDisksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a replicated VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a replicated VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationInfo(System.String,System.String)">
            <summary>
            Get information about the replication.
            </summary>
            <remarks>
            Get information about the replication.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationInfoWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about the replication.
            </summary>
            <remarks>
            Get information about the replication.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationsCount(System.String)">
            <summary>
            Get the total number of replications - both incoming and outgoing.
            </summary>
            <remarks>
            Get the total number of replications - both incoming and outgoing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationsCountWithHttpInfo(System.String)">
            <summary>
            Get the total number of replications - both incoming and outgoing.
            </summary>
            <remarks>
            Get the total number of replications - both incoming and outgoing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationsIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <remarks>
            Get a list of all the current issues for all incoming or outgoing replications.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetReplicationsIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <remarks>
            Get a list of all the current issues for all incoming or outgoing replications.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetSeedsForDisks(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec})">
            <summary>
            Retrieve information about possible seeds for a given set of disks.
            </summary>
            <remarks>
            Retrieve information about possible seeds for a given set of disks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <returns>VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetSeedsForDisksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec})">
            <summary>
            Retrieve information about possible seeds for a given set of disks.
            </summary>
            <remarks>
            Retrieve information about possible seeds for a given set of disks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <returns>ApiResponse of VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVcStoragePolicies(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVcStoragePoliciesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVmCapability(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <remarks>
            Retrieve vSphere Replication capability information about a given VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVmCapabilityWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <remarks>
            Retrieve vSphere Replication capability information about a given VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVrCapableTargetDatastores(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication supported datastores.
            </summary>
            <remarks>
            Retrieve vSphere Replication supported datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.GetVrCapableTargetDatastoresWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication supported datastores.
            </summary>
            <remarks>
            Retrieve vSphere Replication supported datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.PauseReplication(System.String,System.String)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <remarks>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.PauseReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <remarks>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ReconfigureReplication(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <remarks>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ReconfigureReplicationWithHttpInfo(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <remarks>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ResumeReplication(System.String,System.String)">
            <summary>
            Resume a paused replication to the target vCenter Server site.
            </summary>
            <remarks>
            Resume a paused replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.ResumeReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Resume a paused replication to the target vCenter Server site.
            </summary>
            <remarks>
            Resume a paused replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.SyncReplication(System.String,System.String)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <remarks>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.SyncReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <remarks>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.UnconfigureReplication(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <remarks>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiSync.UnconfigureReplicationWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <remarks>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IReplicationApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.BrowseDatastoreAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest,System.Threading.CancellationToken)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <remarks>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.BrowseDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest,System.Threading.CancellationToken)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <remarks>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreBrowserResultDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.CheckStoragePolicyComplianceAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Check datastores for compliance against a given storage policy.
            </summary>
            <remarks>
            Check datastores for compliance against a given storage policy.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.CheckStoragePolicyComplianceWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Check datastores for compliance against a given storage policy.
            </summary>
            <remarks>
            Check datastores for compliance against a given storage policy.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyComplianceCheckDataDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ConfigureReplicationAsync(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec},System.Threading.CancellationToken)">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site.
            </summary>
            <remarks>
            Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ConfigureReplicationWithHttpInfoAsync(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec},System.Threading.CancellationToken)">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site.
            </summary>
            <remarks>
            Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.DestroyReplicationAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <remarks>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.DestroyReplicationWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <remarks>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetAllReplicationsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <remarks>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetAllReplicationsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <remarks>
            Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetLocalVmDisksAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetLocalVmDisksWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmDiskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetLocalVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <remarks>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetLocalVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <remarks>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VirtualMachineDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicatedVmDisksAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a replicated VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a replicated VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicatedVmDisksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a replicated VM.
            </summary>
            <remarks>
            Retrieve information about the disks of a replicated VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedVmDiskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the replication.
            </summary>
            <remarks>
            Get information about the replication.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationInfoWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the replication.
            </summary>
            <remarks>
            Get information about the replication.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationsCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the total number of replications - both incoming and outgoing.
            </summary>
            <remarks>
            Get the total number of replications - both incoming and outgoing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationsCountWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the total number of replications - both incoming and outgoing.
            </summary>
            <remarks>
            Get the total number of replications - both incoming and outgoing.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CountDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationsIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <remarks>
            Get a list of all the current issues for all incoming or outgoing replications.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetReplicationsIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <remarks>
            Get a list of all the current issues for all incoming or outgoing replications.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetSeedsForDisksAsync(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about possible seeds for a given set of disks.
            </summary>
            <remarks>
            Retrieve information about possible seeds for a given set of disks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetSeedsForDisksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about possible seeds for a given set of disks.
            </summary>
            <remarks>
            Retrieve information about possible seeds for a given set of disks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmDiskSeedInformationDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVcStoragePoliciesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVcStoragePoliciesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <remarks>
            Retrieve vCenter Server&#39;s storage policies.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVmCapabilityAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <remarks>
            Retrieve vSphere Replication capability information about a given VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVmCapabilityWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <remarks>
            Retrieve vSphere Replication capability information about a given VM.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmCapabilitiesDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVrCapableTargetDatastoresAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication supported datastores.
            </summary>
            <remarks>
            Retrieve vSphere Replication supported datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.GetVrCapableTargetDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication supported datastores.
            </summary>
            <remarks>
            Retrieve vSphere Replication supported datastores.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.PauseReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <remarks>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.PauseReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <remarks>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ReconfigureReplicationAsync(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec,System.Threading.CancellationToken)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <remarks>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ReconfigureReplicationWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec,System.Threading.CancellationToken)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <remarks>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ResumeReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a paused replication to the target vCenter Server site.
            </summary>
            <remarks>
            Resume a paused replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.ResumeReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a paused replication to the target vCenter Server site.
            </summary>
            <remarks>
            Resume a paused replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.SyncReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <remarks>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.SyncReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <remarks>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.UnconfigureReplicationAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <remarks>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IReplicationApiAsync.UnconfigureReplicationWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <remarks>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IReplicationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.ReplicationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ReplicationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ReplicationApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ReplicationApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ReplicationApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ReplicationApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ReplicationApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ReplicationApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ReplicationApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ReplicationApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.BrowseDatastore(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria. Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <returns>DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.BrowseDatastoreWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria. Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <returns>ApiResponse of DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.BrowseDatastoreAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest,System.Threading.CancellationToken)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria. Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreBrowserResultDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.BrowseDatastoreWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,VMware.Bindings.Vr.Model.DatastoreBrowserRequest,System.Threading.CancellationToken)">
            <summary>
            Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria. Browse the datastore that is defined in the URL by its ID. This API returns files that reside on the given datastore. These files are filtered based on the given search criteria.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="datastoreBrowserRequest">Search criteria to browse the datastore (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreBrowserResultDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.CheckStoragePolicyCompliance(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Check datastores for compliance against a given storage policy. Check datastores for compliance against a given storage policy.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <returns>StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.CheckStoragePolicyComplianceWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Check datastores for compliance against a given storage policy. Check datastores for compliance against a given storage policy.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <returns>ApiResponse of StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.CheckStoragePolicyComplianceAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Check datastores for compliance against a given storage policy. Check datastores for compliance against a given storage policy.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyComplianceCheckDataDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.CheckStoragePolicyComplianceWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Check datastores for compliance against a given storage policy. Check datastores for compliance against a given storage policy.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="storagePolicyId">The ID of a storage policy</param>
            <param name="requestBody">List of datastores to check their compliance</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyComplianceCheckDataDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ConfigureReplication(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec})">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site. Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ConfigureReplicationWithHttpInfo(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec})">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site. Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ConfigureReplicationAsync(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec},System.Threading.CancellationToken)">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site. Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ConfigureReplicationWithHttpInfoAsync(System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.ConfigureReplicationSpec},System.Threading.CancellationToken)">
            <summary>
            Configure replication for a virtual machine from a source site to a target vCenter Server site. Use this workflow to configure a replication.&lt;br/&gt;&lt;hr&gt;1. Search for VMs that are suitable for a replication.&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Query parameter suitable_for_replication should be true&lt;br/&gt;2. Choose VMs.&lt;br/&gt;3. For each VM, get disks:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/disks&lt;/code&gt;&lt;br/&gt;4. Optionally, for each VM, check capabilities if replication is supported and what are the supported replication settings:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/vms/{vm_id}/capability&lt;/code&gt;&lt;br/&gt;5. Request storage policies at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/storage-policies&lt;/code&gt;&lt;br/&gt;6. Choose a storage policy. If default storage policy will be used, then set destination_storage_policy_id in the resulting ConfigureReplicationSpec to null.&lt;br/&gt;7. Search for possible target datastores at the target vCenter Server:&lt;br/&gt;&lt;code&gt;GET /{pairing_id}/vcenters/{vcenter_id}/datastores&lt;/code&gt;&lt;br/&gt;8. Choose a target datastore.&lt;br/&gt;9. Optionally check the selected target datastore&#39;s compliance against the selected target storage policy.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/storage-policies/{storage_policy_id}/actions/check-compliance&lt;/code&gt;&lt;br/&gt;&amp;ensp;- Pass the chosen datastore IDs as a body to the endpoint&lt;br/&gt;10. Optionally search for seeds at the target vCenter Server for the chosen target datastore from step 8:&lt;br/&gt;&amp;ensp;a. &lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/find-seeds&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec based on the VM disks retrieved in step 3&lt;br/&gt;&amp;ensp;b. Or browse the datastore to select manually seed folder/file&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/vcenters/{vcenter_id}/datastores/{datastore_id}/actions/browse&lt;/code&gt;&lt;br/&gt;&amp;emsp;- Pass spec for specific type and path of files/folders&lt;br/&gt;11. Construct ConfigureReplicationSpec.&lt;br/&gt;12. Create a replication.&lt;br/&gt;&lt;code&gt;POST /{pairing_id}/replications&lt;/code&gt;
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="configureReplicationSpec">List of replication settings to replicate VMs. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.DestroyReplication(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first. Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.DestroyReplicationWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first. Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.DestroyReplicationAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first. Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.DestroyReplicationWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first. Delete replication of a VM. The operation deletes the replication only on the local site. Remove the replication configuration first.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetAllReplications(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server.  Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <returns>ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetAllReplicationsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server.  Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <returns>ApiResponse of ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetAllReplicationsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server.  Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetAllReplicationsWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all the incoming or outgoing replications from a vCenter Server.  Get a list of all the incoming or outgoing replications from a vCenter Server. 
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications by their source vCenter Server. (optional)</param>
            <param name="extendedInfo">Requesting extended info for the replications might lead to slower API response. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmDisks(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a VM. Retrieve information about the disks of a VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmDisksWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a VM. Retrieve information about the disks of a VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmDisksAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a VM. Retrieve information about the disks of a VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmDisksWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a VM. Retrieve information about the disks of a VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmDiskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVms(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL. Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <returns>VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmsWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL. Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <returns>ApiResponse of VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmsAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL. Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VirtualMachineDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetLocalVmsWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL. Get a list of all VMs on the vCenter Server specified by vCenter Server ID in the URL.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="suitableForReplication">Flag to filter VMs which are suitable for replication by vSphere Replication. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VirtualMachineDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicatedVmDisks(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a replicated VM. Retrieve information about the disks of a replicated VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicatedVmDisksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve information about the disks of a replicated VM. Retrieve information about the disks of a replicated VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicatedVmDisksAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a replicated VM. Retrieve information about the disks of a replicated VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicatedVmDiskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicatedVmDisksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about the disks of a replicated VM. Retrieve information about the disks of a replicated VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicatedVmDiskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationInfo(System.String,System.String)">
            <summary>
            Get information about the replication. Get information about the replication.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationInfoWithHttpInfo(System.String,System.String)">
            <summary>
            Get information about the replication. Get information about the replication.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the replication. Get information about the replication.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationInfoWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about the replication. Get information about the replication.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsCount(System.String)">
            <summary>
            Get the total number of replications - both incoming and outgoing. Get the total number of replications - both incoming and outgoing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsCountWithHttpInfo(System.String)">
            <summary>
            Get the total number of replications - both incoming and outgoing. Get the total number of replications - both incoming and outgoing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <returns>ApiResponse of CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the total number of replications - both incoming and outgoing. Get the total number of replications - both incoming and outgoing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CountDataDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsCountWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the total number of replications - both incoming and outgoing. Get the total number of replications - both incoming and outgoing.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CountDataDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsIssues(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications. Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <returns>IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsIssuesWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications. Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <returns>ApiResponse of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsIssuesAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications. Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of IssueInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetReplicationsIssuesWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of all the current issues for all incoming or outgoing replications. Get a list of all the current issues for all incoming or outgoing replications.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="sourceVcGuid">Filter replications to retrieve issues for, by their source vCenter Server. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (IssueInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetSeedsForDisks(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec})">
            <summary>
            Retrieve information about possible seeds for a given set of disks. Retrieve information about possible seeds for a given set of disks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <returns>VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetSeedsForDisksWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec})">
            <summary>
            Retrieve information about possible seeds for a given set of disks. Retrieve information about possible seeds for a given set of disks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <returns>ApiResponse of VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetSeedsForDisksAsync(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about possible seeds for a given set of disks. Retrieve information about possible seeds for a given set of disks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmDiskSeedInformationDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetSeedsForDisksWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{VMware.Bindings.Vr.Model.VmDiskFindSeedSpec},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about possible seeds for a given set of disks. Retrieve information about possible seeds for a given set of disks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="datastoreId">The ID of a datastore</param>
            <param name="vmDiskFindSeedSpec">List of specs to search for VM disks&#39; seeds.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmDiskSeedInformationDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVcStoragePolicies(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies. Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVcStoragePoliciesWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies. Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVcStoragePoliciesAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies. Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of StoragePolicyDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVcStoragePoliciesWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vCenter Server&#39;s storage policies. Retrieve vCenter Server&#39;s storage policies.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (StoragePolicyDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVmCapability(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM. Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVmCapabilityWithHttpInfo(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM. Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVmCapabilityAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM. Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VmCapabilitiesDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVmCapabilityWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication capability information about a given VM. Retrieve vSphere Replication capability information about a given VM.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="vmId">The ID of a VM</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VmCapabilitiesDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVrCapableTargetDatastores(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication supported datastores. Retrieve vSphere Replication supported datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVrCapableTargetDatastoresWithHttpInfo(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve vSphere Replication supported datastores. Retrieve vSphere Replication supported datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVrCapableTargetDatastoresAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication supported datastores. Retrieve vSphere Replication supported datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of DatastoreDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.GetVrCapableTargetDatastoresWithHttpInfoAsync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve vSphere Replication supported datastores. Retrieve vSphere Replication supported datastores.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="vcenterId">The ID of the vCenter server</param>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (DatastoreDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.PauseReplication(System.String,System.String)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site. Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.PauseReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site. Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.PauseReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site. Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.PauseReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Pause the replication for a virtual machine from the source site to a remote vCenter Server site. Pause the replication for a virtual machine from the source site to a remote vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ReconfigureReplication(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder. Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ReconfigureReplicationWithHttpInfo(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder. Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ReconfigureReplicationAsync(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec,System.Threading.CancellationToken)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder. Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ReconfigureReplicationWithHttpInfoAsync(System.String,System.String,VMware.Bindings.Vr.Model.ReconfigureReplicationSpec,System.Threading.CancellationToken)">
            <summary>
            Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder. Change the settings of a replication, including reconfiguring a replication on new virtual hard disks and enabling the default seed disk to use a replica disk in the VM folder.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="reconfigureReplicationSpec">Spec that is used to reconfigure replication. (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ResumeReplication(System.String,System.String)">
            <summary>
            Resume a paused replication to the target vCenter Server site. Resume a paused replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ResumeReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Resume a paused replication to the target vCenter Server site. Resume a paused replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ResumeReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a paused replication to the target vCenter Server site. Resume a paused replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.ResumeReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a paused replication to the target vCenter Server site. Resume a paused replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.SyncReplication(System.String,System.String)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site. Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.SyncReplicationWithHttpInfo(System.String,System.String)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site. Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.SyncReplicationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site. Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.SyncReplicationWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site. Sync the latest changes for a virtual machine with a configured replication to the target vCenter Server site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.UnconfigureReplication(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site. Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.UnconfigureReplicationWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site. Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.UnconfigureReplicationAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site. Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ReplicationApi.UnconfigureReplicationWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site. Gracefully remove the replication configuration of a VM. If the remote site is not available, use DELETE /replications/{replication_id} to delete the replication from the local site.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pairingId">The ID of the pairing between this vSphere Replication server and the remote one.</param>
            <param name="replicationId">The ID of a replication</param>
            <param name="retainReplicaDisks">Whether or not to retain replica disks. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IServerApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetAllVrServers(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers.
            </summary>
            <remarks>
            Get all registered replication servers.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetAllVrServersWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers.
            </summary>
            <remarks>
            Get all registered replication servers.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetVrInfo">
            <summary>
            vSphere Replication Management Server information.
            </summary>
            <remarks>
            Lists details about the vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetVrInfoWithHttpInfo">
            <summary>
            vSphere Replication Management Server information.
            </summary>
            <remarks>
            Lists details about the vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetVrServer(System.String)">
            <summary>
            Get information about a registered vSphere Replication server.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.GetVrServerWithHttpInfo(System.String)">
            <summary>
            Get information about a registered vSphere Replication server.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.ReconnectVrServer(System.String)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <remarks>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.ReconnectVrServerWithHttpInfo(System.String)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <remarks>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.RegisterVrServer(VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server.
            </summary>
            <remarks>
            Register a replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.RegisterVrServerWithHttpInfo(VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server.
            </summary>
            <remarks>
            Register a replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.UnregisterVrServer(System.String)">
            <summary>
            Unregister a vSphere Replication server.
            </summary>
            <remarks>
            Unregister a vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiSync.UnregisterVrServerWithHttpInfo(System.String)">
            <summary>
            Unregister a vSphere Replication server.
            </summary>
            <remarks>
            Unregister a vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IServerApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetAllVrServersAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers.
            </summary>
            <remarks>
            Get all registered replication servers.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetAllVrServersWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers.
            </summary>
            <remarks>
            Get all registered replication servers.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetVrInfoAsync(System.Threading.CancellationToken)">
            <summary>
            vSphere Replication Management Server information.
            </summary>
            <remarks>
            Lists details about the vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetVrInfoWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            vSphere Replication Management Server information.
            </summary>
            <remarks>
            Lists details about the vSphere Replication Management Server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.GetVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server.
            </summary>
            <remarks>
            Get information about a registered vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.ReconnectVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <remarks>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.ReconnectVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <remarks>
            Update the connection information of this vSphere Replication server and reset any current connection.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.RegisterVrServerAsync(VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server.
            </summary>
            <remarks>
            Register a replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.RegisterVrServerWithHttpInfoAsync(VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server.
            </summary>
            <remarks>
            Register a replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.UnregisterVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server.
            </summary>
            <remarks>
            Unregister a vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.IServerApiAsync.UnregisterVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server.
            </summary>
            <remarks>
            Unregister a vSphere Replication server.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.IServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.ServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ServerApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ServerApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ServerApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.ServerApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ServerApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ServerApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ServerApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ServerApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.ServerApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetAllVrServers(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers. Get all registered replication servers.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetAllVrServersWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Get all registered replication servers. Get all registered replication servers.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetAllVrServersAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers. Get all registered replication servers.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetAllVrServersWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all registered replication servers. Get all registered replication servers.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrInfo">
            <summary>
            vSphere Replication Management Server information. Lists details about the vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrInfoWithHttpInfo">
            <summary>
            vSphere Replication Management Server information. Lists details about the vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrInfoAsync(System.Threading.CancellationToken)">
            <summary>
            vSphere Replication Management Server information. Lists details about the vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of VrmsInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrInfoWithHttpInfoAsync(System.Threading.CancellationToken)">
            <summary>
            vSphere Replication Management Server information. Lists details about the vSphere Replication Management Server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (VrmsInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrServer(System.String)">
            <summary>
            Get information about a registered vSphere Replication server. Get information about a registered vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrServerWithHttpInfo(System.String)">
            <summary>
            Get information about a registered vSphere Replication server. Get information about a registered vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server. Get information about a registered vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ReplicationServerInfoDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.GetVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get information about a registered vSphere Replication server. Get information about a registered vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ReplicationServerInfoDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.ReconnectVrServer(System.String)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection. Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.ReconnectVrServerWithHttpInfo(System.String)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection. Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.ReconnectVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection. Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.ReconnectVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Update the connection information of this vSphere Replication server and reset any current connection. Update the connection information of this vSphere Replication server and reset any current connection.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.RegisterVrServer(VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server. Register a replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.RegisterVrServerWithHttpInfo(VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Register a replication server. Register a replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.RegisterVrServerAsync(VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server. Register a replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.RegisterVrServerWithHttpInfoAsync(VMware.Bindings.Vr.Model.StringDrData,System.Threading.CancellationToken)">
            <summary>
            Register a replication server. Register a replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stringDrData">An ID of the vSphere Replication server virtual machine.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.UnregisterVrServer(System.String)">
            <summary>
            Unregister a vSphere Replication server. Unregister a vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.UnregisterVrServerWithHttpInfo(System.String)">
            <summary>
            Unregister a vSphere Replication server. Unregister a vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.UnregisterVrServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server. Unregister a vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ServerApi.UnregisterVrServerWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unregister a vSphere Replication server. Unregister a vSphere Replication server.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationServerId">The UUID of the vSphere Replication server</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.ITasksApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiSync.GetRecentTasksInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all recent tasks.
            </summary>
            <remarks>
            Retrieve all recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiSync.GetRecentTasksInfoWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all recent tasks.
            </summary>
            <remarks>
            Retrieve all recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiSync.GetTaskInfo(System.String)">
            <summary>
            Retrieve task information.
            </summary>
            <remarks>
            Retrieve task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiSync.GetTaskInfoWithHttpInfo(System.String)">
            <summary>
            Retrieve task information.
            </summary>
            <remarks>
            Retrieve task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.ITasksApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiAsync.GetRecentTasksInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all recent tasks.
            </summary>
            <remarks>
            Retrieve all recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiAsync.GetRecentTasksInfoWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all recent tasks.
            </summary>
            <remarks>
            Retrieve all recent tasks.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiAsync.GetTaskInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve task information.
            </summary>
            <remarks>
            Retrieve task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.ITasksApiAsync.GetTaskInfoWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve task information.
            </summary>
            <remarks>
            Retrieve task information.
            </remarks>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.ITasksApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Api.TasksApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.#ctor(System.Net.Http.HttpClient,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.TasksApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.#ctor(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.TasksApi"/> class.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="basePath">The target service's base path in URL format.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.#ctor(System.Net.Http.HttpClient,VMware.Binding.OpenApi.Client.Configuration,System.Net.Http.HttpClientHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.TasksApi"/> class using Configuration object.
            </summary>
            <param name="client">An instance of HttpClient.</param>
            <param name="configuration">An instance of Configuration.</param>
            <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
            <remarks>
            Some configuration settings will not be applied without passing an HttpClientHandler.
            The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
            </remarks>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.#ctor(VMware.Binding.OpenApi.Client.ISynchronousClient,VMware.Binding.OpenApi.Client.IAsynchronousClient,VMware.Binding.OpenApi.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Api.TasksApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.Dispose">
            <summary>
            Disposes resources if they were created by us
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.TasksApi.ApiClient">
            <summary>
            Holds the ApiClient if created
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.TasksApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.TasksApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.TasksApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Api.TasksApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetRecentTasksInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all recent tasks. Retrieve all recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetRecentTasksInfoWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve all recent tasks. Retrieve all recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <returns>ApiResponse of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetRecentTasksInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all recent tasks. Retrieve all recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseList</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetRecentTasksInfoWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all recent tasks. Retrieve all recent tasks.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="filterProperty">The name of the field by which to filter the result data. Must be used in combination with filter parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1 (optional)</param>
            <param name="filter">The filter value by which to filter the result data. Must be used in combination with filter_prop parameter. Supports for nested fields. Example: https://dr-server/api/vms?filter_property&#x3D;name&amp;filter&#x3D;vm-1&amp;filter&#x3D;vm-2 (optional)</param>
            <param name="sortBy">Define desired sort by field of the result data. If order_by is not specified, ascending is used as default. (optional)</param>
            <param name="orderBy">Define desired sort order by field of the result data. Must be used in combination with sort_by. Supported values: asc, ascending, desc, descending. (optional)</param>
            <param name="limit">Specify the limit size of the result data. In combination with offset parameter provides paging functionality. If none - configuration property &#39;defaultResponsePageSize&#39; in REST API configuration file is taken into account. If configuration property is not defined - default value of 100 is taken into account. (optional)</param>
            <param name="offset">The amount of elements to skip in the response. In combination with limit parameter provides paging functionality. Must be used in combination with limit parameter. If none - default value of 0 is taken into account. Example: https://dr-server/api/vms?limit&#x3D;10&amp;offset&#x3D;10 (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseList)</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetTaskInfo(System.String)">
            <summary>
            Retrieve task information. Retrieve task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <returns>TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetTaskInfoWithHttpInfo(System.String)">
            <summary>
            Retrieve task information. Retrieve task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <returns>ApiResponse of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetTaskInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve task information. Retrieve task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TaskDrResponseEntity</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Api.TasksApi.GetTaskInfoWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve task information. Retrieve task information.
            </summary>
            <exception cref="T:VMware.Binding.OpenApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskId">The ID of a task.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TaskDrResponseEntity)</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.AbstractOpenAPISchema">
            <summary>
             Abstract base class for oneOf, anyOf schemas in the OpenAPI specification
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.SerializerSettings">
            <summary>
             Custom JSON serializer
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.AdditionalPropertiesSerializerSettings">
            <summary>
             Custom JSON serializer for objects with additional properties
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.ActualInstance">
            <summary>
            Gets or Sets the actual instance
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.IsNullable">
            <summary>
            Gets or Sets IsNullable to indicate whether the instance is nullable
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.SchemaType">
            <summary>
            Gets or Sets the schema type, which can be either `oneOf` or `anyOf`
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.AbstractOpenAPISchema.ToJson">
            <summary>
            Converts the instance into JSON string.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.CertificateWarning">
            <summary>
            Information about certificate warning.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.CertificateWarning" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CertificateWarning.ServerGuid">
            <summary>
            The server identifier to which this warning is about.
            </summary>
            <value>The server identifier to which this warning is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CertificateWarning.ServerUrl">
            <summary>
            The server URL to which this warning is about.
            </summary>
            <value>The server URL to which this warning is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CertificateWarning.Certificate">
            <summary>
            Gets or Sets Certificate
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.Equals(VMware.Bindings.Vr.Model.CertificateWarning)">
            <summary>
            Returns true if CertificateWarning instances are equal
            </summary>
            <param name="input">Instance of CertificateWarning to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CertificateWarning.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.CompoundReplicationStatus">
            <summary>
            Compound status of a replication type.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum">
            <summary>
            The status of the replication.
            </summary>
            <value>The status of the replication.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.FULLSYNC">
            <summary>
            Enum FULLSYNC for value: FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.SYNC">
            <summary>
            Enum SYNC for value: SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.INITIALFULLSYNC">
            <summary>
            Enum INITIALFULLSYNC for value: INITIAL_FULL_SYNC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.PAUSED">
            <summary>
            Enum PAUSED for value: PAUSED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.RPOVIOLATION">
            <summary>
            Enum RPOVIOLATION for value: RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.MOVING">
            <summary>
            Enum MOVING for value: MOVING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.CONFIGURING">
            <summary>
            Enum CONFIGURING for value: CONFIGURING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.NOTACTIVE">
            <summary>
            Enum NOTACTIVE for value: NOT_ACTIVE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.SYNCRPOVIOLATION">
            <summary>
            Enum SYNCRPOVIOLATION for value: SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.NOTACTIVERPOVIOLATION">
            <summary>
            Enum NOTACTIVERPOVIOLATION for value: NOT_ACTIVE_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.ERRORRPOVIOLATION">
            <summary>
            Enum ERRORRPOVIOLATION for value: ERROR_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.FULLSYNCRPOVIOLATION">
            <summary>
            Enum FULLSYNCRPOVIOLATION for value: FULL_SYNC_RPO_VIOLATION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.RECOVERING">
            <summary>
            Enum RECOVERING for value: RECOVERING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.RECOVERED">
            <summary>
            Enum RECOVERED for value: RECOVERED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.CompoundReplicationStatus.StatusEnum.DISKRESIZING">
            <summary>
            Enum DISKRESIZING for value: DISK_RESIZING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CompoundReplicationStatus.Status">
            <summary>
            The status of the replication.
            </summary>
            <value>The status of the replication.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.CompoundReplicationStatus" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CompoundReplicationStatus.RpoViolation">
            <summary>
            Indicate whether there is any RPO violation for the replication.
            </summary>
            <value>Indicate whether there is any RPO violation for the replication.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.Equals(VMware.Bindings.Vr.Model.CompoundReplicationStatus)">
            <summary>
            Returns true if CompoundReplicationStatus instances are equal
            </summary>
            <param name="input">Instance of CompoundReplicationStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CompoundReplicationStatus.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ConfigureReplicationSpec">
            <summary>
            A spec used to configure replication.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ConfigureReplicationSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.QuiesceEnabled">
            <summary>
            A flag that defines whether the quiescing method is enabled.
            </summary>
            <value>A flag that defines whether the quiescing method is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.Rpo">
            <summary>
            The target RPO in minutes.
            </summary>
            <value>The target RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.NetworkCompressionEnabled">
            <summary>
            Use network compression for replication traffic.
            </summary>
            <value>Use network compression for replication traffic.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.MpitEnabled">
            <summary>
            The point-in-time recovery enabled.
            </summary>
            <value>The point-in-time recovery enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.MpitInstances">
            <summary>
            The point-in-time recovery instances per day.
            </summary>
            <value>The point-in-time recovery instances per day.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.MpitDays">
            <summary>
            The point-in-time recovery days to retain instances for.
            </summary>
            <value>The point-in-time recovery days to retain instances for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.AutoReplicateNewDisks">
            <summary>
            Indicate whether automatic replication of new disks is enabled for a VM being replicated.
            </summary>
            <value>Indicate whether automatic replication of new disks is enabled for a VM being replicated.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.TargetReplicationServerId">
            <summary>
            The ID of the vSphere Replication server this group resides on. In case of null, the server will be automatically determined.
            </summary>
            <value>The ID of the vSphere Replication server this group resides on. In case of null, the server will be automatically determined.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.LwdEncryptionEnabled">
            <summary>
            Indicate whether LWD encryption is enabled for this replication.
            </summary>
            <value>Indicate whether LWD encryption is enabled for this replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.VmDataSetsReplicationEnabled">
            <summary>
            Indicate whether VM&#39;s DataSets replication is enabled.
            </summary>
            <value>Indicate whether VM&#39;s DataSets replication is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.Disks">
            <summary>
            A VM disk with a destination path, a disk format, a storage policy, and the replication status.
            </summary>
            <value>A VM disk with a destination path, a disk format, a storage policy, and the replication status.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.TargetVcId">
            <summary>
            The ID of the target VC server.
            </summary>
            <value>The ID of the target VC server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.VmId">
            <summary>
            The ID of the virtual machine that is going to be replicated.
            </summary>
            <value>The ID of the virtual machine that is going to be replicated.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.Equals(VMware.Bindings.Vr.Model.ConfigureReplicationSpec)">
            <summary>
            Returns true if ConfigureReplicationSpec instances are equal
            </summary>
            <param name="input">Instance of ConfigureReplicationSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk">
            <summary>
            VM disk information while configuring or reconfiguring a replication.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.SAMEASSOURCE">
            <summary>
            Enum SAMEASSOURCE for value: SAME_AS_SOURCE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.SAMEASPRIMARY">
            <summary>
            Enum SAMEASPRIMARY for value: SAME_AS_PRIMARY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.ASDEFINEDINPROFILE">
            <summary>
            Enum ASDEFINEDINPROFILE for value: AS_DEFINED_IN_PROFILE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.FLAT">
            <summary>
            Enum FLAT for value: FLAT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.THICK">
            <summary>
            Enum THICK for value: THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.NATIVETHICK">
            <summary>
            Enum NATIVETHICK for value: NATIVE_THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.THIN">
            <summary>
            Enum THIN for value: THIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormatEnum.RDM">
            <summary>
            Enum RDM for value: RDM
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDiskFormat">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.EnabledForReplication">
            <summary>
            Indicate whether the VM disk is enabled for replication.
            </summary>
            <value>Indicate whether the VM disk is enabled for replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.UseSeeds">
            <summary>
            Whether to use seeds for this VM disk. If this field is true, then also set the destination_path property.
            </summary>
            <value>Whether to use seeds for this VM disk. If this field is true, then also set the destination_path property.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationStoragePolicyId">
            <summary>
            The destination storage policy ID. If destination storage policy ID is null then default datastore policy will be used.
            </summary>
            <value>The destination storage policy ID. If destination storage policy ID is null then default datastore policy will be used.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationPath">
            <summary>
            If use_seeds is true, specify the destination path where the seed folder and vmdk files are located. Otherwise, leave it null. For VM home disk - always must be null.
            </summary>
            <value>If use_seeds is true, specify the destination path where the seed folder and vmdk files are located. Otherwise, leave it null. For VM home disk - always must be null.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.DestinationDatastoreId">
            <summary>
            The ID of the destination datastore at the target site.
            </summary>
            <value>The ID of the destination datastore at the target site.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.Equals(VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk)">
            <summary>
            Returns true if ConfigureReplicationVmDisk instances are equal
            </summary>
            <param name="input">Instance of ConfigureReplicationVmDisk to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ConfigureReplicationVmDisk.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.CountData">
            <summary>
            Represents the data count.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.CountData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CountData.Count">
            <summary>
            The data count.
            </summary>
            <value>The data count.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.Equals(VMware.Bindings.Vr.Model.CountData)">
            <summary>
            Returns true if CountData instances are equal
            </summary>
            <param name="input">Instance of CountData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.CountDataDrResponseEntity">
            <summary>
            Represents the data count.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.CountDataDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.Count">
            <summary>
            The data count.
            </summary>
            <value>The data count.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.Equals(VMware.Bindings.Vr.Model.CountDataDrResponseEntity)">
            <summary>
            Returns true if CountDataDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of CountDataDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.CountDataDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Datastore">
            <summary>
            Datastore information such as file system type and general health.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum">
            <summary>
            The file system type of the datastore.
            </summary>
            <value>The file system type of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.VMFS">
            <summary>
            Enum VMFS for value: VMFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.NFS">
            <summary>
            Enum NFS for value: NFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.NFS41">
            <summary>
            Enum NFS41 for value: NFS41
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.CIFS">
            <summary>
            Enum CIFS for value: CIFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.VSAN">
            <summary>
            Enum VSAN for value: VSAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.VFFS">
            <summary>
            Enum VFFS for value: VFFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.PMEM">
            <summary>
            Enum PMEM for value: PMEM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.VSAND">
            <summary>
            Enum VSAND for value: VSAND
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.FileSystemTypeEnum.OTHER">
            <summary>
            Enum OTHER for value: OTHER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.FileSystemType">
            <summary>
            The file system type of the datastore.
            </summary>
            <value>The file system type of the datastore.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Datastore.OverallStatusEnum">
            <summary>
            The overall status of the datastore.
            </summary>
            <value>The overall status of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.OverallStatus">
            <summary>
            The overall status of the datastore.
            </summary>
            <value>The overall status of the datastore.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Datastore.TypeEnum">
            <summary>
            The type of the datastore.
            </summary>
            <value>The type of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.TypeEnum.DATASTORE">
            <summary>
            Enum DATASTORE for value: DATASTORE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Datastore.TypeEnum.STORAGEPOD">
            <summary>
            Enum STORAGEPOD for value: STORAGE_POD
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Type">
            <summary>
            The type of the datastore.
            </summary>
            <value>The type of the datastore.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.Datastore" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Id">
            <summary>
            The ID of the datastore.
            </summary>
            <value>The ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Name">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Parent">
            <summary>
            The ID of the parent datastore.
            </summary>
            <value>The ID of the parent datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.ParentName">
            <summary>
            The name of the parent datastore.
            </summary>
            <value>The name of the parent datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Capacity">
            <summary>
            The total capacity of the datastore in bytes.
            </summary>
            <value>The total capacity of the datastore in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.FreeSpace">
            <summary>
            The free space on the datastore in bytes.
            </summary>
            <value>The free space on the datastore in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.MaintenanceMode">
            <summary>
            The maintenance mode for the datastore.
            </summary>
            <value>The maintenance mode for the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Accessible">
            <summary>
            Indicate whether the datastore is accessible.
            </summary>
            <value>Indicate whether the datastore is accessible.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.NkpSupported">
            <summary>
            Indicate whether the datastore supports encryption with native key.
            </summary>
            <value>Indicate whether the datastore supports encryption with native key.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Datastore.Path">
            <summary>
            The datastore path.
            </summary>
            <value>The datastore path.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.Equals(VMware.Bindings.Vr.Model.Datastore)">
            <summary>
            Returns true if Datastore instances are equal
            </summary>
            <param name="input">Instance of Datastore to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Datastore.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserRequest">
            <summary>
            Request spec to search a datastore for specific types of files or folders.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum">
            <summary>
            The datastore browser query type.
            </summary>
            <value>The datastore browser query type.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.VMDISK">
            <summary>
            Enum VMDISK for value: VM_DISK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.FLOPPYIMAGE">
            <summary>
            Enum FLOPPYIMAGE for value: FLOPPY_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.ISOIMAGE">
            <summary>
            Enum ISOIMAGE for value: ISO_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.VMCONFIGFILES">
            <summary>
            Enum VMCONFIGFILES for value: VM_CONFIG_FILES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.ALLFILES">
            <summary>
            Enum ALLFILES for value: ALL_FILES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryTypeEnum.FOLDERS">
            <summary>
            Enum FOLDERS for value: FOLDERS
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.QueryType">
            <summary>
            The datastore browser query type.
            </summary>
            <value>The datastore browser query type.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreBrowserRequest" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.BrowsePath">
            <summary>
            The path of the datastore to browse, pass an empty string for the root node.
            </summary>
            <value>The path of the datastore to browse, pass an empty string for the root node.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.SubFolders">
            <summary>
            Indicate whether the datastore that the file system searches should include subfolders of the browse path.
            </summary>
            <value>Indicate whether the datastore that the file system searches should include subfolders of the browse path.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.Equals(VMware.Bindings.Vr.Model.DatastoreBrowserRequest)">
            <summary>
            Returns true if DatastoreBrowserRequest instances are equal
            </summary>
            <param name="input">Instance of DatastoreBrowserRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserRequest.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserResult">
            <summary>
            The result of the browsing datastore request
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum">
            <summary>
            The type of the file.
            </summary>
            <value>The type of the file.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.FLOPPYIMAGE">
            <summary>
            Enum FLOPPYIMAGE for value: FLOPPY_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.VMDISK">
            <summary>
            Enum VMDISK for value: VM_DISK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.VMLOG">
            <summary>
            Enum VMLOG for value: VM_LOG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.VMNVRAM">
            <summary>
            Enum VMNVRAM for value: VM_NVRAM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.ISOIMAGE">
            <summary>
            Enum ISOIMAGE for value: ISO_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.VMSNAPSHOT">
            <summary>
            Enum VMSNAPSHOT for value: VM_SNAPSHOT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.TEMPLATEVMCONFIG">
            <summary>
            Enum TEMPLATEVMCONFIG for value: TEMPLATE_VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.VMCONFIG">
            <summary>
            Enum VMCONFIG for value: VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileTypeEnum.FILE">
            <summary>
            Enum FILE for value: FILE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResult.FileType">
            <summary>
            The type of the file.
            </summary>
            <value>The type of the file.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreBrowserResult" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Name">
            <summary>
            Name.
            </summary>
            <value>Name.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Path">
            <summary>
            The full path of the file with the datastore name as the prefix.
            </summary>
            <value>The full path of the file with the datastore name as the prefix.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Size">
            <summary>
            The size of the returned object/file in bytes.
            </summary>
            <value>The size of the returned object/file in bytes.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Equals(VMware.Bindings.Vr.Model.DatastoreBrowserResult)">
            <summary>
            Returns true if DatastoreBrowserResult instances are equal
            </summary>
            <param name="input">Instance of DatastoreBrowserResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResult.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity">
            <summary>
            The result of the browsing datastore request
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum">
            <summary>
            The type of the file.
            </summary>
            <value>The type of the file.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.FOLDER">
            <summary>
            Enum FOLDER for value: FOLDER
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.FLOPPYIMAGE">
            <summary>
            Enum FLOPPYIMAGE for value: FLOPPY_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.VMDISK">
            <summary>
            Enum VMDISK for value: VM_DISK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.VMLOG">
            <summary>
            Enum VMLOG for value: VM_LOG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.VMNVRAM">
            <summary>
            Enum VMNVRAM for value: VM_NVRAM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.ISOIMAGE">
            <summary>
            Enum ISOIMAGE for value: ISO_IMAGE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.VMSNAPSHOT">
            <summary>
            Enum VMSNAPSHOT for value: VM_SNAPSHOT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.TEMPLATEVMCONFIG">
            <summary>
            Enum TEMPLATEVMCONFIG for value: TEMPLATE_VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.VMCONFIG">
            <summary>
            Enum VMCONFIG for value: VM_CONFIG
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileTypeEnum.FILE">
            <summary>
            Enum FILE for value: FILE
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.FileType">
            <summary>
            The type of the file.
            </summary>
            <value>The type of the file.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Name">
            <summary>
            Name.
            </summary>
            <value>Name.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Path">
            <summary>
            The full path of the file with the datastore name as the prefix.
            </summary>
            <value>The full path of the file with the datastore name as the prefix.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Size">
            <summary>
            The size of the returned object/file in bytes.
            </summary>
            <value>The size of the returned object/file in bytes.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Equals(VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity)">
            <summary>
            Returns true if DatastoreBrowserResultDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of DatastoreBrowserResultDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList">
            <summary>
            List of entities about: The result of the browsing datastore request
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.Equals(VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList)">
            <summary>
            Returns true if DatastoreBrowserResultDrResponseList instances are equal
            </summary>
            <param name="input">Instance of DatastoreBrowserResultDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreBrowserResultDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity">
            <summary>
            Datastore information such as file system type and general health.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum">
            <summary>
            The file system type of the datastore.
            </summary>
            <value>The file system type of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.VMFS">
            <summary>
            Enum VMFS for value: VMFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.NFS">
            <summary>
            Enum NFS for value: NFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.NFS41">
            <summary>
            Enum NFS41 for value: NFS41
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.CIFS">
            <summary>
            Enum CIFS for value: CIFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.VSAN">
            <summary>
            Enum VSAN for value: VSAN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.VFFS">
            <summary>
            Enum VFFS for value: VFFS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.VVOL">
            <summary>
            Enum VVOL for value: VVOL
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.PMEM">
            <summary>
            Enum PMEM for value: PMEM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.VSAND">
            <summary>
            Enum VSAND for value: VSAND
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemTypeEnum.OTHER">
            <summary>
            Enum OTHER for value: OTHER
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FileSystemType">
            <summary>
            The file system type of the datastore.
            </summary>
            <value>The file system type of the datastore.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatusEnum">
            <summary>
            The overall status of the datastore.
            </summary>
            <value>The overall status of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatusEnum.GRAY">
            <summary>
            Enum GRAY for value: GRAY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatusEnum.GREEN">
            <summary>
            Enum GREEN for value: GREEN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatusEnum.YELLOW">
            <summary>
            Enum YELLOW for value: YELLOW
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatusEnum.RED">
            <summary>
            Enum RED for value: RED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.OverallStatus">
            <summary>
            The overall status of the datastore.
            </summary>
            <value>The overall status of the datastore.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.TypeEnum">
            <summary>
            The type of the datastore.
            </summary>
            <value>The type of the datastore.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.TypeEnum.DATASTORE">
            <summary>
            Enum DATASTORE for value: DATASTORE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.TypeEnum.STORAGEPOD">
            <summary>
            Enum STORAGEPOD for value: STORAGE_POD
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Type">
            <summary>
            The type of the datastore.
            </summary>
            <value>The type of the datastore.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Id">
            <summary>
            The ID of the datastore.
            </summary>
            <value>The ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Name">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Parent">
            <summary>
            The ID of the parent datastore.
            </summary>
            <value>The ID of the parent datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.ParentName">
            <summary>
            The name of the parent datastore.
            </summary>
            <value>The name of the parent datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Capacity">
            <summary>
            The total capacity of the datastore in bytes.
            </summary>
            <value>The total capacity of the datastore in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.FreeSpace">
            <summary>
            The free space on the datastore in bytes.
            </summary>
            <value>The free space on the datastore in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.MaintenanceMode">
            <summary>
            The maintenance mode for the datastore.
            </summary>
            <value>The maintenance mode for the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Accessible">
            <summary>
            Indicate whether the datastore is accessible.
            </summary>
            <value>Indicate whether the datastore is accessible.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.NkpSupported">
            <summary>
            Indicate whether the datastore supports encryption with native key.
            </summary>
            <value>Indicate whether the datastore supports encryption with native key.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Path">
            <summary>
            The datastore path.
            </summary>
            <value>The datastore path.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Equals(VMware.Bindings.Vr.Model.DatastoreDrResponseEntity)">
            <summary>
            Returns true if DatastoreDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of DatastoreDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastoreDrResponseList">
            <summary>
            List of entities about: Datastore information such as file system type and general health.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastoreDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastoreDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.Equals(VMware.Bindings.Vr.Model.DatastoreDrResponseList)">
            <summary>
            Returns true if DatastoreDrResponseList instances are equal
            </summary>
            <param name="input">Instance of DatastoreDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastoreDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DatastorePathData">
            <summary>
            The data object that is used to fully qualify a datastore path.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DatastorePathData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastorePathData.DatastoreId">
            <summary>
            The ID of the datastore.
            </summary>
            <value>The ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastorePathData.DatastoreName">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastorePathData.Path">
            <summary>
            The path of the datastore.
            </summary>
            <value>The path of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DatastorePathData.Filename">
            <summary>
            The name of file.
            </summary>
            <value>The name of file.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.Equals(VMware.Bindings.Vr.Model.DatastorePathData)">
            <summary>
            Returns true if DatastorePathData instances are equal
            </summary>
            <param name="input">Instance of DatastorePathData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DatastorePathData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.DestinationDatastorePathData">
            <summary>
            A data object that is used to fully qualify a destination datastore path.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.DestinationDatastorePathData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DestinationDatastorePathData.DatastoreId">
            <summary>
            The ID of the datastore.
            </summary>
            <value>The ID of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DestinationDatastorePathData.DatastoreName">
            <summary>
            The name of the datastore.
            </summary>
            <value>The name of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DestinationDatastorePathData.Path">
            <summary>
            The path of the datastore.
            </summary>
            <value>The path of the datastore.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.DestinationDatastorePathData.Filename">
            <summary>
            The name of file.
            </summary>
            <value>The name of file.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.Equals(VMware.Bindings.Vr.Model.DestinationDatastorePathData)">
            <summary>
            Returns true if DestinationDatastorePathData instances are equal
            </summary>
            <param name="input">Instance of DestinationDatastorePathData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.DestinationDatastorePathData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.HrefDrData">
            <summary>
            Previous entity link
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.HrefDrData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.HrefDrData.Href">
            <summary>
            Gets or Sets Href
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.Equals(VMware.Bindings.Vr.Model.HrefDrData)">
            <summary>
            Returns true if HrefDrData instances are equal
            </summary>
            <param name="input">Instance of HrefDrData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.HrefDrData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfo">
            <summary>
            Issue information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfo.StatusEnum">
            <summary>
            The issue status.
            </summary>
            <value>The issue status.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.Status">
            <summary>
            The issue status.
            </summary>
            <value>The issue status.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfo.IssueTypeEnum">
            <summary>
            The issue type.
            </summary>
            <value>The issue type.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.IssueTypeEnum.VC">
            <summary>
            Enum VC for value: VC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.IssueTypeEnum.VRS">
            <summary>
            Enum VRS for value: VRS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.IssueTypeEnum.VRMS">
            <summary>
            Enum VRMS for value: VRMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfo.IssueTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.IssueType">
            <summary>
            The issue type.
            </summary>
            <value>The issue type.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.IssueInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.Entity">
            <summary>
            The entity this issue is about.
            </summary>
            <value>The entity this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.EntityName">
            <summary>
            The entity name this issue is about.
            </summary>
            <value>The entity name this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.Description">
            <summary>
            The description of the issue.
            </summary>
            <value>The description of the issue.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfo.Timestamp">
            <summary>
            The timestamp of the issue, in milliseconds.
            </summary>
            <value>The timestamp of the issue, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.Equals(VMware.Bindings.Vr.Model.IssueInfo)">
            <summary>
            Returns true if IssueInfo instances are equal
            </summary>
            <param name="input">Instance of IssueInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity">
            <summary>
            Issue information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.StatusEnum">
            <summary>
            The issue status.
            </summary>
            <value>The issue status.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.StatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Status">
            <summary>
            The issue status.
            </summary>
            <value>The issue status.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueTypeEnum">
            <summary>
            The issue type.
            </summary>
            <value>The issue type.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VC">
            <summary>
            Enum VC for value: VC
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VRS">
            <summary>
            Enum VRS for value: VRS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueTypeEnum.VRMS">
            <summary>
            Enum VRMS for value: VRMS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueTypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.IssueType">
            <summary>
            The issue type.
            </summary>
            <value>The issue type.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Entity">
            <summary>
            The entity this issue is about.
            </summary>
            <value>The entity this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.EntityName">
            <summary>
            The entity name this issue is about.
            </summary>
            <value>The entity name this issue is about.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Description">
            <summary>
            The description of the issue.
            </summary>
            <value>The description of the issue.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Timestamp">
            <summary>
            The timestamp of the issue, in milliseconds.
            </summary>
            <value>The timestamp of the issue, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Equals(VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity)">
            <summary>
            Returns true if IssueInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of IssueInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseList">
            <summary>
            List of entities about: Issue information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.IssueInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.Equals(VMware.Bindings.Vr.Model.IssueInfoDrResponseList)">
            <summary>
            Returns true if IssueInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of IssueInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.IssueInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Metadata">
            <summary>
            Response meta data. Contains data about the response payload data.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.Metadata" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Metadata.Errors">
            <summary>
            Response payload data errors.
            </summary>
            <value>Response payload data errors.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.Equals(VMware.Bindings.Vr.Model.Metadata)">
            <summary>
            Returns true if Metadata instances are equal
            </summary>
            <param name="input">Instance of Metadata to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Metadata.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.MetadataList">
            <summary>
            List metadata
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.MetadataList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetadataList.Errors">
            <summary>
            Response payload data errors.
            </summary>
            <value>Response payload data errors.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetadataList.Total">
            <summary>
            Total number of entities
            </summary>
            <value>Total number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetadataList.Offset">
            <summary>
            Offset number of entities
            </summary>
            <value>Offset number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetadataList.Limit">
            <summary>
            Limit number of entities
            </summary>
            <value>Limit number of entities</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetadataList.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.Equals(VMware.Bindings.Vr.Model.MetadataList)">
            <summary>
            Returns true if MetadataList instances are equal
            </summary>
            <param name="input">Instance of MetadataList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetadataList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.MetaError">
            <summary>
            Response metadata error
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.MetaError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaError.Code">
            <summary>
            Error code
            </summary>
            <value>Error code</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaError.Message">
            <summary>
            Error message
            </summary>
            <value>Error message</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaError.Field">
            <summary>
            JSONPath of the entity field that causes this error.
            </summary>
            <value>JSONPath of the entity field that causes this error.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.Equals(VMware.Bindings.Vr.Model.MetaError)">
            <summary>
            Returns true if MetaError instances are equal
            </summary>
            <param name="input">Instance of MetaError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.MetaLinks">
            <summary>
            Response meta links
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.MetaLinks" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaLinks.Next">
            <summary>
            Gets or Sets Next
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.MetaLinks.Previous">
            <summary>
            Gets or Sets Previous
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.Equals(VMware.Bindings.Vr.Model.MetaLinks)">
            <summary>
            Returns true if MetaLinks instances are equal
            </summary>
            <param name="input">Instance of MetaLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.MetaLinks.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Pairing">
            <summary>
            vSphere Replication pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.Pairing" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Pairing.PairingId">
            <summary>
            The unique identifier of the pairing.
            </summary>
            <value>The unique identifier of the pairing.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Pairing.LocalVcServer">
            <summary>
            Gets or Sets LocalVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Pairing.RemoteVcServer">
            <summary>
            Gets or Sets RemoteVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Pairing.LocalVrms">
            <summary>
            Gets or Sets LocalVrms
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Pairing.RemoteVrms">
            <summary>
            Gets or Sets RemoteVrms
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.Equals(VMware.Bindings.Vr.Model.Pairing)">
            <summary>
            Returns true if Pairing instances are equal
            </summary>
            <param name="input">Instance of Pairing to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Pairing.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.PairingDrResponseEntity">
            <summary>
            vSphere Replication pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.PairingDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.PairingId">
            <summary>
            The unique identifier of the pairing.
            </summary>
            <value>The unique identifier of the pairing.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.LocalVcServer">
            <summary>
            Gets or Sets LocalVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.RemoteVcServer">
            <summary>
            Gets or Sets RemoteVcServer
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.LocalVrms">
            <summary>
            Gets or Sets LocalVrms
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseEntity.RemoteVrms">
            <summary>
            Gets or Sets RemoteVrms
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.Equals(VMware.Bindings.Vr.Model.PairingDrResponseEntity)">
            <summary>
            Returns true if PairingDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of PairingDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.PairingDrResponseList">
            <summary>
            List of entities about: vSphere Replication pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.PairingDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.Equals(VMware.Bindings.Vr.Model.PairingDrResponseList)">
            <summary>
            Returns true if PairingDrResponseList instances are equal
            </summary>
            <param name="input">Instance of PairingDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.PairingSpec">
            <summary>
            Pairing information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.PairingSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpec.PairPscInfo">
            <summary>
            Gets or Sets PairPscInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpec.PairVcId">
            <summary>
            The ID of the remote vCenter Server.
            </summary>
            <value>The ID of the remote vCenter Server.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.Equals(VMware.Bindings.Vr.Model.PairingSpec)">
            <summary>
            Returns true if PairingSpec instances are equal
            </summary>
            <param name="input">Instance of PairingSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo">
            <summary>
            Information about the pair Platform Services Controller.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Url">
            <summary>
            The URL of the remote Platform Services Controller.
            </summary>
            <value>The URL of the remote Platform Services Controller.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Port">
            <summary>
            The port that is configured for the Platform Services Controller. The default port is 443.
            </summary>
            <value>The port that is configured for the Platform Services Controller. The default port is 443.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Thumbprint">
            <summary>
            The thumbprint of the remote Platform Services Controller.
            </summary>
            <value>The thumbprint of the remote Platform Services Controller.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Username">
            <summary>
            The user name for the Platform Services Controller.
            </summary>
            <value>The user name for the Platform Services Controller.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Password">
            <summary>
            The password for the Platform Services Controller.
            </summary>
            <value>The password for the Platform Services Controller.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Equals(VMware.Bindings.Vr.Model.PairingSpecPairPscInfo)">
            <summary>
            Returns true if PairingSpecPairPscInfo instances are equal
            </summary>
            <param name="input">Instance of PairingSpecPairPscInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.PairingSpecPairPscInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec">
            <summary>
            A spec that is used to reconfigure replication.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.QuiesceEnabled">
            <summary>
            A flag that defines whether the quiescing method is enabled.
            </summary>
            <value>A flag that defines whether the quiescing method is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.Rpo">
            <summary>
            The target RPO in minutes.
            </summary>
            <value>The target RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.NetworkCompressionEnabled">
            <summary>
            Use network compression for replication traffic.
            </summary>
            <value>Use network compression for replication traffic.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.MpitEnabled">
            <summary>
            The point-in-time recovery enabled.
            </summary>
            <value>The point-in-time recovery enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.MpitInstances">
            <summary>
            The point-in-time recovery instances per day.
            </summary>
            <value>The point-in-time recovery instances per day.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.MpitDays">
            <summary>
            The point-in-time recovery days to retain instances for.
            </summary>
            <value>The point-in-time recovery days to retain instances for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.AutoReplicateNewDisks">
            <summary>
            Indicate whether automatic replication of new disks is enabled for a VM being replicated.
            </summary>
            <value>Indicate whether automatic replication of new disks is enabled for a VM being replicated.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.TargetReplicationServerId">
            <summary>
            The ID of the vSphere Replication server this group resides on. In case of null, the server will be automatically determined.
            </summary>
            <value>The ID of the vSphere Replication server this group resides on. In case of null, the server will be automatically determined.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.LwdEncryptionEnabled">
            <summary>
            Indicate whether LWD encryption is enabled for this replication.
            </summary>
            <value>Indicate whether LWD encryption is enabled for this replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.VmDataSetsReplicationEnabled">
            <summary>
            Indicate whether VM&#39;s DataSets replication is enabled.
            </summary>
            <value>Indicate whether VM&#39;s DataSets replication is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.Disks">
            <summary>
            A VM disk with a destination path, a disk format, a storage policy, and the replication status.
            </summary>
            <value>A VM disk with a destination path, a disk format, a storage policy, and the replication status.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.Equals(VMware.Bindings.Vr.Model.ReconfigureReplicationSpec)">
            <summary>
            Returns true if ReconfigureReplicationSpec instances are equal
            </summary>
            <param name="input">Instance of ReconfigureReplicationSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReconfigureReplicationSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicatedVmDisk">
            <summary>
            Replicated VM disk information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicatedVmDisk" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.Replicated">
            <summary>
            Gets or Sets Replicated
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.DestinationPath">
            <summary>
            Gets or Sets DestinationPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.DestinationStoragePolicyId">
            <summary>
            The destination storage policy ID.
            </summary>
            <value>The destination storage policy ID.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.DestinationStoragePolicyName">
            <summary>
            The destination storage policy name.
            </summary>
            <value>The destination storage policy name.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDisk.ReplicaDiskUsage">
            <summary>
            The usage of the replication disk.
            </summary>
            <value>The usage of the replication disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.Equals(VMware.Bindings.Vr.Model.ReplicatedVmDisk)">
            <summary>
            Returns true if ReplicatedVmDisk instances are equal
            </summary>
            <param name="input">Instance of ReplicatedVmDisk to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDisk.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity">
            <summary>
            Replicated VM disk information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.Replicated">
            <summary>
            Gets or Sets Replicated
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.DestinationPath">
            <summary>
            Gets or Sets DestinationPath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.DestinationStoragePolicyId">
            <summary>
            The destination storage policy ID.
            </summary>
            <value>The destination storage policy ID.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.DestinationStoragePolicyName">
            <summary>
            The destination storage policy name.
            </summary>
            <value>The destination storage policy name.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.ReplicaDiskUsage">
            <summary>
            The usage of the replication disk.
            </summary>
            <value>The usage of the replication disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.Equals(VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity)">
            <summary>
            Returns true if ReplicatedVmDiskDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ReplicatedVmDiskDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList">
            <summary>
            List of entities about: Replicated VM disk information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.Equals(VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList)">
            <summary>
            Returns true if ReplicatedVmDiskDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ReplicatedVmDiskDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicatedVmDiskDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfo">
            <summary>
            Information about a replication.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfo.TypeEnum">
            <summary>
            The type of the replication.
            </summary>
            <value>The type of the replication.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.TypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.TypeEnum.VCTOVC">
            <summary>
            Enum VCTOVC for value: VC_TO_VC
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.Type">
            <summary>
            The type of the replication.
            </summary>
            <value>The type of the replication.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationStateEnum">
            <summary>
            The state of a replication with respect to its configuration.
            </summary>
            <value>The state of a replication with respect to its configuration.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationStateEnum.INPROGRESS">
            <summary>
            Enum INPROGRESS for value: IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationStateEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationStateEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationStateEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationState">
            <summary>
            The state of a replication with respect to its configuration.
            </summary>
            <value>The state of a replication with respect to its configuration.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum">
            <summary>
            The state of a replication with respect to its recovery.
            </summary>
            <value>The state of a replication with respect to its recovery.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum.NOTSTARTED">
            <summary>
            Enum NOTSTARTED for value: NOT_STARTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum.INPROGRESS">
            <summary>
            Enum INPROGRESS for value: IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryStateEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryState">
            <summary>
            The state of a replication with respect to its recovery.
            </summary>
            <value>The state of a replication with respect to its recovery.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.Name">
            <summary>
            The name of the replication.
            </summary>
            <value>The name of the replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.Id">
            <summary>
            The unique identifier of the replication.
            </summary>
            <value>The unique identifier of the replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.VmId">
            <summary>
            The ID of the replicated VM.
            </summary>
            <value>The ID of the replicated VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.SourceSiteName">
            <summary>
            The name of the source site.
            </summary>
            <value>The name of the source site.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.SourceVcId">
            <summary>
            The ID of the source vCenter Server.
            </summary>
            <value>The ID of the source vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.TargetSiteName">
            <summary>
            The name of the target site.
            </summary>
            <value>The name of the target site.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.TargetVcId">
            <summary>
            The ID of the target vCenter Server.
            </summary>
            <value>The ID of the target vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.Rpo">
            <summary>
            The configured RPO in minutes.
            </summary>
            <value>The configured RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.ReplicationServerName">
            <summary>
            The name of the replication server.
            </summary>
            <value>The name of the replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.RecoverySolution">
            <summary>
            The solution that manages the recovery operation.
            </summary>
            <value>The solution that manages the recovery operation.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.ConfigurationError">
            <summary>
            Gets or Sets ConfigurationError
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.LastGroupError">
            <summary>
            Gets or Sets LastGroupError
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.RecoveryError">
            <summary>
            If the recovery_state is ERROR, this field contains details about the error.
            </summary>
            <value>If the recovery_state is ERROR, this field contains details about the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.TargetReplicationServerUuid">
            <summary>
            The UUID of the target replication server.
            </summary>
            <value>The UUID of the target replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.LastSyncTime">
            <summary>
            The time of the last sync operation, in milliseconds.
            </summary>
            <value>The time of the last sync operation, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.LastSyncDuration">
            <summary>
            The duration of the last sync operation, in seconds.
            </summary>
            <value>The duration of the last sync operation, in seconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.LastSyncSize">
            <summary>
            The size of delta during the last sync, in bytes.
            </summary>
            <value>The size of delta during the last sync, in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.CurrentRpoViolation">
            <summary>
            The RPO violation since the deadline for the next image of the replication has elapsed, in minutes.
            </summary>
            <value>The RPO violation since the deadline for the next image of the replication has elapsed, in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.QuiescingEnabled">
            <summary>
            Indicate whether to quiesce the file system or applications in the guest OS before a consistent replica is created.
            </summary>
            <value>Indicate whether to quiesce the file system or applications in the guest OS before a consistent replica is created.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.NetworkCompressionEnabled">
            <summary>
            Indicate whether to use compression for the outgoing traffic.
            </summary>
            <value>Indicate whether to use compression for the outgoing traffic.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.EncryptionEnabled">
            <summary>
            Indicate whether LWD encryption is used from VRS side.
            </summary>
            <value>Indicate whether LWD encryption is used from VRS side.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.AutoReplicateNewDisksEnabled">
            <summary>
            Indicate whether to automatically enable replication to newly added disks to the source VM.
            </summary>
            <value>Indicate whether to automatically enable replication to newly added disks to the source VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.MpitEnabled">
            <summary>
            Indicate whether MPIT is enabled.
            </summary>
            <value>Indicate whether MPIT is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.MpitInstances">
            <summary>
            The number of instances to keep per day.
            </summary>
            <value>The number of instances to keep per day.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.MpitDays">
            <summary>
            The number of days to keep MPIT instances.
            </summary>
            <value>The number of days to keep MPIT instances.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.SyncProgress">
            <summary>
            Gets or Sets SyncProgress
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfo.VmDataSetsReplicationEnabled">
            <summary>
            Indicate whether VM&#39;s DataSets replication is enabled.
            </summary>
            <value>Indicate whether VM&#39;s DataSets replication is enabled.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.Equals(VMware.Bindings.Vr.Model.ReplicationInfo)">
            <summary>
            Returns true if ReplicationInfo instances are equal
            </summary>
            <param name="input">Instance of ReplicationInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError">
            <summary>
            If the configurationState is ERROR, this property is set with a value describing the error in more detail. If the configurationState contains some other value, then this property is empty.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.Details">
            <summary>
            The details of the error.
            </summary>
            <value>The details of the error.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.Equals(VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError)">
            <summary>
            Returns true if ReplicationInfoConfigurationError instances are equal
            </summary>
            <param name="input">Instance of ReplicationInfoConfigurationError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoConfigurationError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity">
            <summary>
            Information about a replication.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TypeEnum">
            <summary>
            The type of the replication.
            </summary>
            <value>The type of the replication.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TypeEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TypeEnum.VCTOVC">
            <summary>
            Enum VCTOVC for value: VC_TO_VC
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Type">
            <summary>
            The type of the replication.
            </summary>
            <value>The type of the replication.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationStateEnum">
            <summary>
            The state of a replication with respect to its configuration.
            </summary>
            <value>The state of a replication with respect to its configuration.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationStateEnum.INPROGRESS">
            <summary>
            Enum INPROGRESS for value: IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationStateEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationStateEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationStateEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationState">
            <summary>
            The state of a replication with respect to its configuration.
            </summary>
            <value>The state of a replication with respect to its configuration.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum">
            <summary>
            The state of a replication with respect to its recovery.
            </summary>
            <value>The state of a replication with respect to its recovery.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum.NOTSTARTED">
            <summary>
            Enum NOTSTARTED for value: NOT_STARTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum.INPROGRESS">
            <summary>
            Enum INPROGRESS for value: IN_PROGRESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryStateEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryState">
            <summary>
            The state of a replication with respect to its recovery.
            </summary>
            <value>The state of a replication with respect to its recovery.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Name">
            <summary>
            The name of the replication.
            </summary>
            <value>The name of the replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Id">
            <summary>
            The unique identifier of the replication.
            </summary>
            <value>The unique identifier of the replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.VmId">
            <summary>
            The ID of the replicated VM.
            </summary>
            <value>The ID of the replicated VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.SourceSiteName">
            <summary>
            The name of the source site.
            </summary>
            <value>The name of the source site.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.SourceVcId">
            <summary>
            The ID of the source vCenter Server.
            </summary>
            <value>The ID of the source vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TargetSiteName">
            <summary>
            The name of the target site.
            </summary>
            <value>The name of the target site.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TargetVcId">
            <summary>
            The ID of the target vCenter Server.
            </summary>
            <value>The ID of the target vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Rpo">
            <summary>
            The configured RPO in minutes.
            </summary>
            <value>The configured RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ReplicationServerName">
            <summary>
            The name of the replication server.
            </summary>
            <value>The name of the replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoverySolution">
            <summary>
            The solution that manages the recovery operation.
            </summary>
            <value>The solution that manages the recovery operation.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ConfigurationError">
            <summary>
            Gets or Sets ConfigurationError
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.LastGroupError">
            <summary>
            Gets or Sets LastGroupError
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.RecoveryError">
            <summary>
            If the recovery_state is ERROR, this field contains details about the error.
            </summary>
            <value>If the recovery_state is ERROR, this field contains details about the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.TargetReplicationServerUuid">
            <summary>
            The UUID of the target replication server.
            </summary>
            <value>The UUID of the target replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.LastSyncTime">
            <summary>
            The time of the last sync operation, in milliseconds.
            </summary>
            <value>The time of the last sync operation, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.LastSyncDuration">
            <summary>
            The duration of the last sync operation, in seconds.
            </summary>
            <value>The duration of the last sync operation, in seconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.LastSyncSize">
            <summary>
            The size of delta during the last sync, in bytes.
            </summary>
            <value>The size of delta during the last sync, in bytes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.CurrentRpoViolation">
            <summary>
            The RPO violation since the deadline for the next image of the replication has elapsed, in minutes.
            </summary>
            <value>The RPO violation since the deadline for the next image of the replication has elapsed, in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.QuiescingEnabled">
            <summary>
            Indicate whether to quiesce the file system or applications in the guest OS before a consistent replica is created.
            </summary>
            <value>Indicate whether to quiesce the file system or applications in the guest OS before a consistent replica is created.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.NetworkCompressionEnabled">
            <summary>
            Indicate whether to use compression for the outgoing traffic.
            </summary>
            <value>Indicate whether to use compression for the outgoing traffic.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.EncryptionEnabled">
            <summary>
            Indicate whether LWD encryption is used from VRS side.
            </summary>
            <value>Indicate whether LWD encryption is used from VRS side.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.AutoReplicateNewDisksEnabled">
            <summary>
            Indicate whether to automatically enable replication to newly added disks to the source VM.
            </summary>
            <value>Indicate whether to automatically enable replication to newly added disks to the source VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.MpitEnabled">
            <summary>
            Indicate whether MPIT is enabled.
            </summary>
            <value>Indicate whether MPIT is enabled.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.MpitInstances">
            <summary>
            The number of instances to keep per day.
            </summary>
            <value>The number of instances to keep per day.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.MpitDays">
            <summary>
            The number of days to keep MPIT instances.
            </summary>
            <value>The number of days to keep MPIT instances.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.SyncProgress">
            <summary>
            Gets or Sets SyncProgress
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.VmDataSetsReplicationEnabled">
            <summary>
            Indicate whether VM&#39;s DataSets replication is enabled.
            </summary>
            <value>Indicate whether VM&#39;s DataSets replication is enabled.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Equals(VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity)">
            <summary>
            Returns true if ReplicationInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ReplicationInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList">
            <summary>
            List of entities about: Information about a replication.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.Equals(VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList)">
            <summary>
            Returns true if ReplicationInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ReplicationInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError">
            <summary>
            The faults from the underlying replication.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.Details">
            <summary>
            The details of the error.
            </summary>
            <value>The details of the error.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.Equals(VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError)">
            <summary>
            Returns true if ReplicationInfoLastGroupError instances are equal
            </summary>
            <param name="input">Instance of ReplicationInfoLastGroupError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationInfoLastGroupError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationServerInfo">
            <summary>
            Information about the vSphere Replication server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationServerInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Id">
            <summary>
            ID of the vSphere Replication server.
            </summary>
            <value>ID of the vSphere Replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.ReplicationCount">
            <summary>
            The total number of replication groups currently protected by this VRMS.
            </summary>
            <value>The total number of replication groups currently protected by this VRMS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Connected">
            <summary>
            Indicate whether the vSphere Replication server is connected.
            </summary>
            <value>Indicate whether the vSphere Replication server is connected.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Decommissioned">
            <summary>
            Indicate whether the vSphere Replication server is decommissioned.
            </summary>
            <value>Indicate whether the vSphere Replication server is decommissioned.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.InternallyManaged">
            <summary>
            Indicates that this vSphere Replication server is internally managed in VRMS.
            </summary>
            <value>Indicates that this vSphere Replication server is internally managed in VRMS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Uuid">
            <summary>
            The UUID of the VR server.
            </summary>
            <value>The UUID of the VR server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Hostname">
            <summary>
            The network host name as set in the vSphere Replication server appliance.
            </summary>
            <value>The network host name as set in the vSphere Replication server appliance.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.ConfigurationUrl">
            <summary>
            URL of the configuration UI for the server, if known.
            </summary>
            <value>URL of the configuration UI for the server, if known.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Name">
            <summary>
            The name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfo.Fault">
            <summary>
            The fault, which occurred during retrieval of data.
            </summary>
            <value>The fault, which occurred during retrieval of data.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.Equals(VMware.Bindings.Vr.Model.ReplicationServerInfo)">
            <summary>
            Returns true if ReplicationServerInfo instances are equal
            </summary>
            <param name="input">Instance of ReplicationServerInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity">
            <summary>
            Information about the vSphere Replication server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Id">
            <summary>
            ID of the vSphere Replication server.
            </summary>
            <value>ID of the vSphere Replication server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.ReplicationCount">
            <summary>
            The total number of replication groups currently protected by this VRMS.
            </summary>
            <value>The total number of replication groups currently protected by this VRMS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Connected">
            <summary>
            Indicate whether the vSphere Replication server is connected.
            </summary>
            <value>Indicate whether the vSphere Replication server is connected.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Decommissioned">
            <summary>
            Indicate whether the vSphere Replication server is decommissioned.
            </summary>
            <value>Indicate whether the vSphere Replication server is decommissioned.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.InternallyManaged">
            <summary>
            Indicates that this vSphere Replication server is internally managed in VRMS.
            </summary>
            <value>Indicates that this vSphere Replication server is internally managed in VRMS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Uuid">
            <summary>
            The UUID of the VR server.
            </summary>
            <value>The UUID of the VR server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Hostname">
            <summary>
            The network host name as set in the vSphere Replication server appliance.
            </summary>
            <value>The network host name as set in the vSphere Replication server appliance.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.ConfigurationUrl">
            <summary>
            URL of the configuration UI for the server, if known.
            </summary>
            <value>URL of the configuration UI for the server, if known.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Name">
            <summary>
            The name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Fault">
            <summary>
            The fault, which occurred during retrieval of data.
            </summary>
            <value>The fault, which occurred during retrieval of data.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Equals(VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity)">
            <summary>
            Returns true if ReplicationServerInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of ReplicationServerInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList">
            <summary>
            List of entities about: Information about the vSphere Replication server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.Equals(VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList)">
            <summary>
            Returns true if ReplicationServerInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of ReplicationServerInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ReplicationServerInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ResponseError">
            <summary>
            ResponseError
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ResponseError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ResponseError.ErrorCode">
            <summary>
            The code of the error.
            </summary>
            <value>The code of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ResponseError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ResponseError.OpId">
            <summary>
            The ID of the operation.
            </summary>
            <value>The ID of the operation.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.Equals(VMware.Bindings.Vr.Model.ResponseError)">
            <summary>
            Returns true if ResponseError instances are equal
            </summary>
            <param name="input">Instance of ResponseError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ResponseError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ServerInfo">
            <summary>
            Information about a given server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.ServerInfo.ServerStatusEnum">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ServerInfo.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ServerInfo.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.ServerInfo.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.ServerStatus">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.ServerInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.Url">
            <summary>
            The URL of the server.
            </summary>
            <value>The URL of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.Name">
            <summary>
            The name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.Certificates">
            <summary>
            The certificates of the server.
            </summary>
            <value>The certificates of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo.CertificateWarnings">
            <summary>
            The certificate warnings related to the server.
            </summary>
            <value>The certificate warnings related to the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.ServerInfo._Version">
            <summary>
            The version of the server.
            </summary>
            <value>The version of the server.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.Equals(VMware.Bindings.Vr.Model.ServerInfo)">
            <summary>
            Returns true if ServerInfo instances are equal
            </summary>
            <param name="input">Instance of ServerInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.ServerInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.SessionIdData">
            <summary>
            Data including the new session ID.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.SessionIdData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SessionIdData.SessionId">
            <summary>
            The ID of the session.
            </summary>
            <value>The ID of the session.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.Equals(VMware.Bindings.Vr.Model.SessionIdData)">
            <summary>
            Returns true if SessionIdData instances are equal
            </summary>
            <param name="input">Instance of SessionIdData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionIdData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.SessionInfo">
            <summary>
            Information about the current session.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.SessionInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SessionInfo.Username">
            <summary>
            The user name in the session.
            </summary>
            <value>The user name in the session.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.Equals(VMware.Bindings.Vr.Model.SessionInfo)">
            <summary>
            Returns true if SessionInfo instances are equal
            </summary>
            <param name="input">Instance of SessionInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SessionInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicy">
            <summary>
            Storage policy defined in the vCenter Server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicy" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicy.StoragePolicyName">
            <summary>
            The name of the storage policy.
            </summary>
            <value>The name of the storage policy.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicy.StoragePolicyId">
            <summary>
            The ID of the storage policy defined in the vCenter Server.
            </summary>
            <value>The ID of the storage policy defined in the vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicy.VmEncryptionSupported">
            <summary>
            Indicate whether this profile has encryption capability.
            </summary>
            <value>Indicate whether this profile has encryption capability.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.Equals(VMware.Bindings.Vr.Model.StoragePolicy)">
            <summary>
            Returns true if StoragePolicy instances are equal
            </summary>
            <param name="input">Instance of StoragePolicy to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicy.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData">
            <summary>
            Datastore compliance status against a storage policy.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.StoragePolicyId">
            <summary>
            The ID of the storage policy.
            </summary>
            <value>The ID of the storage policy.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.Datastore">
            <summary>
            The datastore to check compliance for.
            </summary>
            <value>The datastore to check compliance for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.Compliant">
            <summary>
            Indicate whether the storage policy is compliant.
            </summary>
            <value>Indicate whether the storage policy is compliant.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.NotCompliantDetailedMessage">
            <summary>
            The detailed information if the datastore is not compliant.
            </summary>
            <value>The detailed information if the datastore is not compliant.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.Equals(VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData)">
            <summary>
            Returns true if StoragePolicyComplianceCheckData instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyComplianceCheckData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity">
            <summary>
            Datastore compliance status against a storage policy.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.StoragePolicyId">
            <summary>
            The ID of the storage policy.
            </summary>
            <value>The ID of the storage policy.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Datastore">
            <summary>
            The datastore to check compliance for.
            </summary>
            <value>The datastore to check compliance for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Compliant">
            <summary>
            Indicate whether the storage policy is compliant.
            </summary>
            <value>Indicate whether the storage policy is compliant.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.NotCompliantDetailedMessage">
            <summary>
            The detailed information if the datastore is not compliant.
            </summary>
            <value>The detailed information if the datastore is not compliant.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Equals(VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity)">
            <summary>
            Returns true if StoragePolicyComplianceCheckDataDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyComplianceCheckDataDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList">
            <summary>
            List of entities about: Datastore compliance status against a storage policy.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.Equals(VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList)">
            <summary>
            Returns true if StoragePolicyComplianceCheckDataDrResponseList instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyComplianceCheckDataDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyComplianceCheckDataDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity">
            <summary>
            Storage policy defined in the vCenter Server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.StoragePolicyName">
            <summary>
            The name of the storage policy.
            </summary>
            <value>The name of the storage policy.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.StoragePolicyId">
            <summary>
            The ID of the storage policy defined in the vCenter Server.
            </summary>
            <value>The ID of the storage policy defined in the vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.VmEncryptionSupported">
            <summary>
            Indicate whether this profile has encryption capability.
            </summary>
            <value>Indicate whether this profile has encryption capability.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.Equals(VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity)">
            <summary>
            Returns true if StoragePolicyDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList">
            <summary>
            List of entities about: Storage policy defined in the vCenter Server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.Equals(VMware.Bindings.Vr.Model.StoragePolicyDrResponseList)">
            <summary>
            Returns true if StoragePolicyDrResponseList instances are equal
            </summary>
            <param name="input">Instance of StoragePolicyDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StoragePolicyDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.StringDrData">
            <summary>
            Contains string representation of a data.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.StringDrData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.StringDrData.Value">
            <summary>
            The string representation of a data.
            </summary>
            <value>The string representation of a data.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.Equals(VMware.Bindings.Vr.Model.StringDrData)">
            <summary>
            Returns true if StringDrData instances are equal
            </summary>
            <param name="input">Instance of StringDrData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.StringDrData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.SyncProgressData">
            <summary>
            Information about the sync progress of a replication.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.SyncProgressData" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SyncProgressData.Progress">
            <summary>
            Gets or Sets Progress
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SyncProgressData.ChecksumCurrent">
            <summary>
            Gets or Sets ChecksumCurrent
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SyncProgressData.ChecksumTotal">
            <summary>
            Gets or Sets ChecksumTotal
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SyncProgressData.TransferredCurrent">
            <summary>
            Gets or Sets TransferredCurrent
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.SyncProgressData.TransferredTotal">
            <summary>
            Gets or Sets TransferredTotal
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.Equals(VMware.Bindings.Vr.Model.SyncProgressData)">
            <summary>
            Returns true if SyncProgressData instances are equal
            </summary>
            <param name="input">Instance of SyncProgressData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.SyncProgressData.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Task">
            <summary>
            Information about a task.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.Task.StatusEnum">
            <summary>
            The status of the task.
            </summary>
            <value>The status of the task.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Task.StatusEnum.QUEUED">
            <summary>
            Enum QUEUED for value: QUEUED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Task.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Task.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Task.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.Task.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Status">
            <summary>
            The status of the task.
            </summary>
            <value>The status of the task.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.Task" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Id">
            <summary>
            The ID of the task.
            </summary>
            <value>The ID of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Description">
            <summary>
            The description of the task.
            </summary>
            <value>The description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.DescriptionId">
            <summary>
            The ID of the description of the task.
            </summary>
            <value>The ID of the description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Entity">
            <summary>
            Entity the task is executed upon.
            </summary>
            <value>Entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.EntityName">
            <summary>
            Name of the entity the task is executed upon.
            </summary>
            <value>Name of the entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Error">
            <summary>
            Gets or Sets Error
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Result">
            <summary>
            The information about the task result if the task status is SUCCESS.
            </summary>
            <value>The information about the task result if the task status is SUCCESS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.Progress">
            <summary>
            The progress of the task, in percentage number.
            </summary>
            <value>The progress of the task, in percentage number.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.QueuedTime">
            <summary>
            The queued time of the task, in milliseconds.
            </summary>
            <value>The queued time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.StartTime">
            <summary>
            The start time of the task, in milliseconds.
            </summary>
            <value>The start time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.Task.CompleteTime">
            <summary>
            The complete time of the task, in milliseconds.
            </summary>
            <value>The complete time of the task, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.Equals(VMware.Bindings.Vr.Model.Task)">
            <summary>
            Returns true if Task instances are equal
            </summary>
            <param name="input">Instance of Task to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.Task.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.TaskDrResponseEntity">
            <summary>
            Information about a task.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum">
            <summary>
            The status of the task.
            </summary>
            <value>The status of the task.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum.QUEUED">
            <summary>
            Enum QUEUED for value: QUEUED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum.RUNNING">
            <summary>
            Enum RUNNING for value: RUNNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum.SUCCESS">
            <summary>
            Enum SUCCESS for value: SUCCESS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StatusEnum.CANCELLED">
            <summary>
            Enum CANCELLED for value: CANCELLED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Status">
            <summary>
            The status of the task.
            </summary>
            <value>The status of the task.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.TaskDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Id">
            <summary>
            The ID of the task.
            </summary>
            <value>The ID of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Description">
            <summary>
            The description of the task.
            </summary>
            <value>The description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.DescriptionId">
            <summary>
            The ID of the description of the task.
            </summary>
            <value>The ID of the description of the task.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Entity">
            <summary>
            Entity the task is executed upon.
            </summary>
            <value>Entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.EntityName">
            <summary>
            Name of the entity the task is executed upon.
            </summary>
            <value>Name of the entity the task is executed upon.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Error">
            <summary>
            Gets or Sets Error
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Result">
            <summary>
            The information about the task result if the task status is SUCCESS.
            </summary>
            <value>The information about the task result if the task status is SUCCESS.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Progress">
            <summary>
            The progress of the task, in percentage number.
            </summary>
            <value>The progress of the task, in percentage number.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.QueuedTime">
            <summary>
            The queued time of the task, in milliseconds.
            </summary>
            <value>The queued time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.StartTime">
            <summary>
            The start time of the task, in milliseconds.
            </summary>
            <value>The start time of the task, in milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseEntity.CompleteTime">
            <summary>
            The complete time of the task, in milliseconds.
            </summary>
            <value>The complete time of the task, in milliseconds.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Equals(VMware.Bindings.Vr.Model.TaskDrResponseEntity)">
            <summary>
            Returns true if TaskDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of TaskDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.TaskDrResponseList">
            <summary>
            List of entities about: Information about a task.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.TaskDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.Equals(VMware.Bindings.Vr.Model.TaskDrResponseList)">
            <summary>
            Returns true if TaskDrResponseList instances are equal
            </summary>
            <param name="input">Instance of TaskDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.TaskError">
            <summary>
            Detailed information of the error if the task status is ERROR.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.TaskError" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskError.Message">
            <summary>
            The message of the error.
            </summary>
            <value>The message of the error.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.TaskError.Details">
            <summary>
            The details of the error.
            </summary>
            <value>The details of the error.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.Equals(VMware.Bindings.Vr.Model.TaskError)">
            <summary>
            Returns true if TaskError instances are equal
            </summary>
            <param name="input">Instance of TaskError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.TaskError.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachine">
            <summary>
            Information about a virtual machine
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachine.PowerStateEnum">
            <summary>
            The VM power state.
            </summary>
            <value>The VM power state.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.PowerStateEnum.POWEREDOFF">
            <summary>
            Enum POWEREDOFF for value: POWERED_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.PowerStateEnum.POWEREDON">
            <summary>
            Enum POWEREDON for value: POWERED_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.PowerStateEnum.SUSPENDED">
            <summary>
            Enum SUSPENDED for value: SUSPENDED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.PowerState">
            <summary>
            The VM power state.
            </summary>
            <value>The VM power state.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum">
            <summary>
            The state of the VM connection.
            </summary>
            <value>The state of the VM connection.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum.CONNECTED">
            <summary>
            Enum CONNECTED for value: CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum.DISCONNECTED">
            <summary>
            Enum DISCONNECTED for value: DISCONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum.ORPHANED">
            <summary>
            Enum ORPHANED for value: ORPHANED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum.INACCESSIBLE">
            <summary>
            Enum INACCESSIBLE for value: INACCESSIBLE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionStateEnum.INVALID">
            <summary>
            Enum INVALID for value: INVALID
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.ConnectionState">
            <summary>
            The state of the VM connection.
            </summary>
            <value>The state of the VM connection.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VirtualMachine" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.Id">
            <summary>
            The unique identifier of the VM.
            </summary>
            <value>The unique identifier of the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.Name">
            <summary>
            The name of the VM.
            </summary>
            <value>The name of the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.Template">
            <summary>
            Gets or Sets Template
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.ManagedByInfo">
            <summary>
            Gets or Sets ManagedByInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.VrPrivilegeGranted">
            <summary>
            Indicate whether the current user has the VirtualMachine.Hbr.ConfigureReplication privilege.
            </summary>
            <value>Indicate whether the current user has the VirtualMachine.Hbr.ConfigureReplication privilege.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachine.Disks">
            <summary>
            Information about the VM disks.
            </summary>
            <value>Information about the VM disks.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.Equals(VMware.Bindings.Vr.Model.VirtualMachine)">
            <summary>
            Returns true if VirtualMachine instances are equal
            </summary>
            <param name="input">Instance of VirtualMachine to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachine.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity">
            <summary>
            Information about a virtual machine
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.PowerStateEnum">
            <summary>
            The VM power state.
            </summary>
            <value>The VM power state.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.PowerStateEnum.POWEREDOFF">
            <summary>
            Enum POWEREDOFF for value: POWERED_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.PowerStateEnum.POWEREDON">
            <summary>
            Enum POWEREDON for value: POWERED_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.PowerStateEnum.SUSPENDED">
            <summary>
            Enum SUSPENDED for value: SUSPENDED
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.PowerState">
            <summary>
            The VM power state.
            </summary>
            <value>The VM power state.</value>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum">
            <summary>
            The state of the VM connection.
            </summary>
            <value>The state of the VM connection.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum.CONNECTED">
            <summary>
            Enum CONNECTED for value: CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum.DISCONNECTED">
            <summary>
            Enum DISCONNECTED for value: DISCONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum.ORPHANED">
            <summary>
            Enum ORPHANED for value: ORPHANED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum.INACCESSIBLE">
            <summary>
            Enum INACCESSIBLE for value: INACCESSIBLE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionStateEnum.INVALID">
            <summary>
            Enum INVALID for value: INVALID
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ConnectionState">
            <summary>
            The state of the VM connection.
            </summary>
            <value>The state of the VM connection.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Id">
            <summary>
            The unique identifier of the VM.
            </summary>
            <value>The unique identifier of the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Name">
            <summary>
            The name of the VM.
            </summary>
            <value>The name of the VM.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Template">
            <summary>
            Gets or Sets Template
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ManagedByInfo">
            <summary>
            Gets or Sets ManagedByInfo
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.VrPrivilegeGranted">
            <summary>
            Indicate whether the current user has the VirtualMachine.Hbr.ConfigureReplication privilege.
            </summary>
            <value>Indicate whether the current user has the VirtualMachine.Hbr.ConfigureReplication privilege.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Disks">
            <summary>
            Information about the VM disks.
            </summary>
            <value>Information about the VM disks.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Equals(VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity)">
            <summary>
            Returns true if VirtualMachineDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VirtualMachineDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList">
            <summary>
            List of entities about: Information about a virtual machine
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.Equals(VMware.Bindings.Vr.Model.VirtualMachineDrResponseList)">
            <summary>
            Returns true if VirtualMachineDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VirtualMachineDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo">
            <summary>
            VirtualMachineManagedByInfo
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.ExtensionKey">
            <summary>
            The extension key.
            </summary>
            <value>The extension key.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.Type">
            <summary>
            The type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.Equals(VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo)">
            <summary>
            Returns true if VirtualMachineManagedByInfo instances are equal
            </summary>
            <param name="input">Instance of VirtualMachineManagedByInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VirtualMachineManagedByInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmCapabilities">
            <summary>
            Information about VR capabilities of a virtual machine.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum">
            <summary>
            The validation status of the VM.
            </summary>
            <value>The validation status of the VM.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR_
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.DUPLICATEDISKNAMES">
            <summary>
            Enum DUPLICATEDISKNAMES for value: DUPLICATE_DISK_NAMES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.ALREADYCONFIGURED">
            <summary>
            Enum ALREADYCONFIGURED for value: ALREADY_CONFIGURED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.INVALIDHWVERSION">
            <summary>
            Enum INVALIDHWVERSION for value: INVALID_HW_VERSION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.ISFTVM">
            <summary>
            Enum ISFTVM for value: IS_FT_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.VMNOTCONNECTED">
            <summary>
            Enum VMNOTCONNECTED for value: VM_NOT_CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.HBRNOTSUPPORTED">
            <summary>
            Enum HBRNOTSUPPORTED for value: HBR_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.INVALIDHOSTVERSION">
            <summary>
            Enum INVALIDHOSTVERSION for value: INVALID_HOST_VERSION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.HOSTNOTCONNECTED">
            <summary>
            Enum HOSTNOTCONNECTED for value: HOST_NOT_CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.HOSTNOTPOWEREDON">
            <summary>
            Enum HOSTNOTPOWEREDON for value: HOST_NOT_POWERED_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.HOSTINMAINTENANCEMODE">
            <summary>
            Enum HOSTINMAINTENANCEMODE for value: HOST_IN_MAINTENANCE_MODE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.PHYSICALRDMDISKFOUND">
            <summary>
            Enum PHYSICALRDMDISKFOUND for value: PHYSICAL_RDM_DISK_FOUND
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.NOPERMISSIONS">
            <summary>
            Enum NOPERMISSIONS for value: NO_PERMISSIONS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.ISVMTEMPLATE">
            <summary>
            Enum ISVMTEMPLATE for value: IS_VM_TEMPLATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.VMISENCRYPTED">
            <summary>
            Enum VMISENCRYPTED for value: VM_IS_ENCRYPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.VMISENCRYPTEDLWDOFF">
            <summary>
            Enum VMISENCRYPTEDLWDOFF for value: VM_IS_ENCRYPTED_LWD_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.VMISENCRYPTEDVMCRYPTOFF">
            <summary>
            Enum VMISENCRYPTEDVMCRYPTOFF for value: VM_IS_ENCRYPTED_VMCRYPT_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.VMENCRYPTIONINCONSISTENCY">
            <summary>
            Enum VMENCRYPTIONINCONSISTENCY for value: VM_ENCRYPTION_INCONSISTENCY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.NOTSUPPORTEDTRUSTAUTHORITYENCRYPTEDVM">
            <summary>
            Enum NOTSUPPORTEDTRUSTAUTHORITYENCRYPTEDVM for value: NOT_SUPPORTED_TRUST_AUTHORITY_ENCRYPTED_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.ISEAMVM">
            <summary>
            Enum ISEAMVM for value: IS_EAM_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatusEnum.PEERGROUPMISSING">
            <summary>
            Enum PEERGROUPMISSING for value: PEER_GROUP_MISSING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.VmValidationStatus">
            <summary>
            The validation status of the VM.
            </summary>
            <value>The validation status of the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmCapabilities" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.VmId">
            <summary>
            The ID of the VM these capabilities are for.
            </summary>
            <value>The ID of the VM these capabilities are for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.QuiescingSupported">
            <summary>
            Indicate whether quiescing is supported.
            </summary>
            <value>Indicate whether quiescing is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.NetworkCompressionSupported">
            <summary>
            Indicate whether network compression is supported.
            </summary>
            <value>Indicate whether network compression is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.MpitSupported">
            <summary>
            Indicate whether MPIT is supported.
            </summary>
            <value>Indicate whether MPIT is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.LwdEncryptionSupported">
            <summary>
            Indicate whether LWD encryption is supported.
            </summary>
            <value>Indicate whether LWD encryption is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.VmCryptSupported">
            <summary>
            Indicate whether VM encryption is supported.
            </summary>
            <value>Indicate whether VM encryption is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.VmEncrypted">
            <summary>
            Indicate whether VM is encrypted.
            </summary>
            <value>Indicate whether VM is encrypted.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.VmEncryptionKeyProviderType">
            <summary>
            The VM encryption key provider type. Null for non-encrypted VMs. If this is nativeProvider, then a datastore with vSphere Native Key Provider support must be used for replications.
            </summary>
            <value>The VM encryption key provider type. Null for non-encrypted VMs. If this is nativeProvider, then a datastore with vSphere Native Key Provider support must be used for replications.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.ReplicationNotSupportedReasons">
            <summary>
            The reasons for not supporting a replication.
            </summary>
            <value>The reasons for not supporting a replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.AutoReplicateNewDisksSupported">
            <summary>
            Indicate whether automatic replication of new disks is supported.
            </summary>
            <value>Indicate whether automatic replication of new disks is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.MinRpoMins">
            <summary>
            The minimum RPO in minutes.
            </summary>
            <value>The minimum RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.NvmeDiskControllerSupported">
            <summary>
            NVMe disk controller support.
            </summary>
            <value>NVMe disk controller support.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.DsClusterAsTargetSupported">
            <summary>
            Gets or Sets DsClusterAsTargetSupported
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilities.ReconfigureVmDisksSupported">
            <summary>
            Indicate whether reconfiguration of VM disks is supported.
            </summary>
            <value>Indicate whether reconfiguration of VM disks is supported.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.Equals(VMware.Bindings.Vr.Model.VmCapabilities)">
            <summary>
            Returns true if VmCapabilities instances are equal
            </summary>
            <param name="input">Instance of VmCapabilities to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilities.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity">
            <summary>
            Information about VR capabilities of a virtual machine.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum">
            <summary>
            The validation status of the VM.
            </summary>
            <value>The validation status of the VM.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR_
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.DUPLICATEDISKNAMES">
            <summary>
            Enum DUPLICATEDISKNAMES for value: DUPLICATE_DISK_NAMES
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.ALREADYCONFIGURED">
            <summary>
            Enum ALREADYCONFIGURED for value: ALREADY_CONFIGURED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.INVALIDHWVERSION">
            <summary>
            Enum INVALIDHWVERSION for value: INVALID_HW_VERSION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.ISFTVM">
            <summary>
            Enum ISFTVM for value: IS_FT_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.VMNOTCONNECTED">
            <summary>
            Enum VMNOTCONNECTED for value: VM_NOT_CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.HBRNOTSUPPORTED">
            <summary>
            Enum HBRNOTSUPPORTED for value: HBR_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.INVALIDHOSTVERSION">
            <summary>
            Enum INVALIDHOSTVERSION for value: INVALID_HOST_VERSION
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.HOSTNOTCONNECTED">
            <summary>
            Enum HOSTNOTCONNECTED for value: HOST_NOT_CONNECTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.HOSTNOTPOWEREDON">
            <summary>
            Enum HOSTNOTPOWEREDON for value: HOST_NOT_POWERED_ON
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.HOSTINMAINTENANCEMODE">
            <summary>
            Enum HOSTINMAINTENANCEMODE for value: HOST_IN_MAINTENANCE_MODE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.PHYSICALRDMDISKFOUND">
            <summary>
            Enum PHYSICALRDMDISKFOUND for value: PHYSICAL_RDM_DISK_FOUND
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.NOPERMISSIONS">
            <summary>
            Enum NOPERMISSIONS for value: NO_PERMISSIONS
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.ISVMTEMPLATE">
            <summary>
            Enum ISVMTEMPLATE for value: IS_VM_TEMPLATE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.VMISENCRYPTED">
            <summary>
            Enum VMISENCRYPTED for value: VM_IS_ENCRYPTED
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.VMISENCRYPTEDLWDOFF">
            <summary>
            Enum VMISENCRYPTEDLWDOFF for value: VM_IS_ENCRYPTED_LWD_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.VMISENCRYPTEDVMCRYPTOFF">
            <summary>
            Enum VMISENCRYPTEDVMCRYPTOFF for value: VM_IS_ENCRYPTED_VMCRYPT_OFF
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.VMENCRYPTIONINCONSISTENCY">
            <summary>
            Enum VMENCRYPTIONINCONSISTENCY for value: VM_ENCRYPTION_INCONSISTENCY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.NOTSUPPORTEDTRUSTAUTHORITYENCRYPTEDVM">
            <summary>
            Enum NOTSUPPORTEDTRUSTAUTHORITYENCRYPTEDVM for value: NOT_SUPPORTED_TRUST_AUTHORITY_ENCRYPTED_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.ISEAMVM">
            <summary>
            Enum ISEAMVM for value: IS_EAM_VM
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatusEnum.PEERGROUPMISSING">
            <summary>
            Enum PEERGROUPMISSING for value: PEER_GROUP_MISSING
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmValidationStatus">
            <summary>
            The validation status of the VM.
            </summary>
            <value>The validation status of the VM.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmId">
            <summary>
            The ID of the VM these capabilities are for.
            </summary>
            <value>The ID of the VM these capabilities are for.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.QuiescingSupported">
            <summary>
            Indicate whether quiescing is supported.
            </summary>
            <value>Indicate whether quiescing is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.NetworkCompressionSupported">
            <summary>
            Indicate whether network compression is supported.
            </summary>
            <value>Indicate whether network compression is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.MpitSupported">
            <summary>
            Indicate whether MPIT is supported.
            </summary>
            <value>Indicate whether MPIT is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.LwdEncryptionSupported">
            <summary>
            Indicate whether LWD encryption is supported.
            </summary>
            <value>Indicate whether LWD encryption is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmCryptSupported">
            <summary>
            Indicate whether VM encryption is supported.
            </summary>
            <value>Indicate whether VM encryption is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmEncrypted">
            <summary>
            Indicate whether VM is encrypted.
            </summary>
            <value>Indicate whether VM is encrypted.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.VmEncryptionKeyProviderType">
            <summary>
            The VM encryption key provider type. Null for non-encrypted VMs. If this is nativeProvider, then a datastore with vSphere Native Key Provider support must be used for replications.
            </summary>
            <value>The VM encryption key provider type. Null for non-encrypted VMs. If this is nativeProvider, then a datastore with vSphere Native Key Provider support must be used for replications.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.ReplicationNotSupportedReasons">
            <summary>
            The reasons for not supporting a replication.
            </summary>
            <value>The reasons for not supporting a replication.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.AutoReplicateNewDisksSupported">
            <summary>
            Indicate whether automatic replication of new disks is supported.
            </summary>
            <value>Indicate whether automatic replication of new disks is supported.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.MinRpoMins">
            <summary>
            The minimum RPO in minutes.
            </summary>
            <value>The minimum RPO in minutes.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.NvmeDiskControllerSupported">
            <summary>
            NVMe disk controller support.
            </summary>
            <value>NVMe disk controller support.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.DsClusterAsTargetSupported">
            <summary>
            Gets or Sets DsClusterAsTargetSupported
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.ReconfigureVmDisksSupported">
            <summary>
            Indicate whether reconfiguration of VM disks is supported.
            </summary>
            <value>Indicate whether reconfiguration of VM disks is supported.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.Equals(VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity)">
            <summary>
            Returns true if VmCapabilitiesDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmCapabilitiesDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmCapabilitiesDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDisk">
            <summary>
            The VM disk information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.SAMEASSOURCE">
            <summary>
            Enum SAMEASSOURCE for value: SAME_AS_SOURCE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.SAMEASPRIMARY">
            <summary>
            Enum SAMEASPRIMARY for value: SAME_AS_PRIMARY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.ASDEFINEDINPROFILE">
            <summary>
            Enum ASDEFINEDINPROFILE for value: AS_DEFINED_IN_PROFILE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.FLAT">
            <summary>
            Enum FLAT for value: FLAT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.THICK">
            <summary>
            Enum THICK for value: THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.NATIVETHICK">
            <summary>
            Enum NATIVETHICK for value: NATIVE_THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.THIN">
            <summary>
            Enum THIN for value: THIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormatEnum.RDM">
            <summary>
            Enum RDM for value: RDM
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.SourceDiskFormat">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDisk" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.VmId">
            <summary>
            The ID of the VM this disk is part of.
            </summary>
            <value>The ID of the VM this disk is part of.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.DeviceKey">
            <summary>
            The device key of the source VM disk.
            </summary>
            <value>The device key of the source VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.IsVmHome">
            <summary>
            Each VM has one disk item, representing a VM home.
            </summary>
            <value>Each VM has one disk item, representing a VM home.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.Encrypted">
            <summary>
            Indicate whether the VM disk is encrypted.
            </summary>
            <value>Indicate whether the VM disk is encrypted.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.Capacity">
            <summary>
            The capacity of the source VM disk, in KBs.
            </summary>
            <value>The capacity of the source VM disk, in KBs.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.SourcePath">
            <summary>
            Gets or Sets SourcePath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.SourceStoragePolicyName">
            <summary>
            The name of the storage policy of the source storage.
            </summary>
            <value>The name of the storage policy of the source storage.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.SourceStoragePolicyId">
            <summary>
            The ID of the storage policy of the source storage.
            </summary>
            <value>The ID of the storage policy of the source storage.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.Label">
            <summary>
            The label of the VM disk.
            </summary>
            <value>The label of the VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.ControllerKey">
            <summary>
            Gets or Sets ControllerKey
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.ControllerLabel">
            <summary>
            The label of the VM disk.
            </summary>
            <value>The label of the VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDisk.SupportedForReplication">
            <summary>
            Disks with certain types of controllers are not supported for replication. For example, NVMe, PCI, and SATA.
            </summary>
            <value>Disks with certain types of controllers are not supported for replication. For example, NVMe, PCI, and SATA.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.Equals(VMware.Bindings.Vr.Model.VmDisk)">
            <summary>
            Returns true if VmDisk instances are equal
            </summary>
            <param name="input">Instance of VmDisk to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDisk.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity">
            <summary>
            The VM disk information.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.SAMEASSOURCE">
            <summary>
            Enum SAMEASSOURCE for value: SAME_AS_SOURCE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.SAMEASPRIMARY">
            <summary>
            Enum SAMEASPRIMARY for value: SAME_AS_PRIMARY
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.ASDEFINEDINPROFILE">
            <summary>
            Enum ASDEFINEDINPROFILE for value: AS_DEFINED_IN_PROFILE
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.FLAT">
            <summary>
            Enum FLAT for value: FLAT
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.THICK">
            <summary>
            Enum THICK for value: THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.NATIVETHICK">
            <summary>
            Enum NATIVETHICK for value: NATIVE_THICK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.THIN">
            <summary>
            Enum THIN for value: THIN
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormatEnum.RDM">
            <summary>
            Enum RDM for value: RDM
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceDiskFormat">
            <summary>
            The format of the virtual disk.
            </summary>
            <value>The format of the virtual disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.VmId">
            <summary>
            The ID of the VM this disk is part of.
            </summary>
            <value>The ID of the VM this disk is part of.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.DeviceKey">
            <summary>
            The device key of the source VM disk.
            </summary>
            <value>The device key of the source VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.IsVmHome">
            <summary>
            Each VM has one disk item, representing a VM home.
            </summary>
            <value>Each VM has one disk item, representing a VM home.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Encrypted">
            <summary>
            Indicate whether the VM disk is encrypted.
            </summary>
            <value>Indicate whether the VM disk is encrypted.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Capacity">
            <summary>
            The capacity of the source VM disk, in KBs.
            </summary>
            <value>The capacity of the source VM disk, in KBs.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourcePath">
            <summary>
            Gets or Sets SourcePath
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceStoragePolicyName">
            <summary>
            The name of the storage policy of the source storage.
            </summary>
            <value>The name of the storage policy of the source storage.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SourceStoragePolicyId">
            <summary>
            The ID of the storage policy of the source storage.
            </summary>
            <value>The ID of the storage policy of the source storage.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Label">
            <summary>
            The label of the VM disk.
            </summary>
            <value>The label of the VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.ControllerKey">
            <summary>
            Gets or Sets ControllerKey
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.ControllerLabel">
            <summary>
            The label of the VM disk.
            </summary>
            <value>The label of the VM disk.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.SupportedForReplication">
            <summary>
            Disks with certain types of controllers are not supported for replication. For example, NVMe, PCI, and SATA.
            </summary>
            <value>Disks with certain types of controllers are not supported for replication. For example, NVMe, PCI, and SATA.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Equals(VMware.Bindings.Vr.Model.VmDiskDrResponseEntity)">
            <summary>
            Returns true if VmDiskDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmDiskDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskDrResponseList">
            <summary>
            List of entities about: The VM disk information.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.Equals(VMware.Bindings.Vr.Model.VmDiskDrResponseList)">
            <summary>
            Returns true if VmDiskDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VmDiskDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec">
            <summary>
            A spec to search for replication seeds based on the specified criteria for a given VM disk.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.DestinationPath">
            <summary>
            The disk destination path.
            </summary>
            <value>The disk destination path.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.UseWildcard">
            <summary>
            Indicate whether to use wildcard.
            </summary>
            <value>Indicate whether to use wildcard.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.Equals(VMware.Bindings.Vr.Model.VmDiskFindSeedSpec)">
            <summary>
            Returns true if VmDiskFindSeedSpec instances are equal
            </summary>
            <param name="input">Instance of VmDiskFindSeedSpec to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskFindSeedSpec.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskIdentifier">
            <summary>
            The unique identifier of the VM disk.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskIdentifier" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskIdentifier.VmId">
            <summary>
            The ID of the VM this disk is part of.
            </summary>
            <value>The ID of the VM this disk is part of.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskIdentifier.DeviceKey">
            <summary>
            The device key of the source VM disk.
            </summary>
            <value>The device key of the source VM disk.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.Equals(VMware.Bindings.Vr.Model.VmDiskIdentifier)">
            <summary>
            Returns true if VmDiskIdentifier instances are equal
            </summary>
            <param name="input">Instance of VmDiskIdentifier to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskIdentifier.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskSeedInformation">
            <summary>
            A information about seeds found for a disk.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskSeedInformation" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformation.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformation.FoundSeeds">
            <summary>
            The file paths where seed files are found.
            </summary>
            <value>The file paths where seed files are found.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.Equals(VMware.Bindings.Vr.Model.VmDiskSeedInformation)">
            <summary>
            Returns true if VmDiskSeedInformation instances are equal
            </summary>
            <param name="input">Instance of VmDiskSeedInformation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformation.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity">
            <summary>
            A information about seeds found for a disk.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.VmDisk">
            <summary>
            Gets or Sets VmDisk
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.FoundSeeds">
            <summary>
            The file paths where seed files are found.
            </summary>
            <value>The file paths where seed files are found.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.Equals(VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity)">
            <summary>
            Returns true if VmDiskSeedInformationDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VmDiskSeedInformationDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList">
            <summary>
            List of entities about: A information about seeds found for a disk.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.Equals(VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList)">
            <summary>
            Returns true if VmDiskSeedInformationDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VmDiskSeedInformationDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VmDiskSeedInformationDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VrmsInfo">
            <summary>
            Detailed information about the vSphere Replication Management Server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VrmsInfo.ServerStatusEnum">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfo.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfo.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfo.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.ServerStatus">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VrmsInfo" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.Url">
            <summary>
            The URL of the server.
            </summary>
            <value>The URL of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.Name">
            <summary>
            The name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.Certificates">
            <summary>
            The certificates of the server.
            </summary>
            <value>The certificates of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.CertificateWarnings">
            <summary>
            The certificate warnings related to the server.
            </summary>
            <value>The certificate warnings related to the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo._Version">
            <summary>
            The version of the server.
            </summary>
            <value>The version of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.VcGuid">
            <summary>
            The GUID of the local vCenter Server.
            </summary>
            <value>The GUID of the local vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.VcName">
            <summary>
            The name of the local vCenter Server.
            </summary>
            <value>The name of the local vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfo.ExtensionKey">
            <summary>
            The extension key under which this server is registered in the Lookup Service.
            </summary>
            <value>The extension key under which this server is registered in the Lookup Service.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.Equals(VMware.Bindings.Vr.Model.VrmsInfo)">
            <summary>
            Returns true if VrmsInfo instances are equal
            </summary>
            <param name="input">Instance of VrmsInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfo.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity">
            <summary>
            Detailed information about the vSphere Replication Management Server.
            </summary>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ServerStatusEnum">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ServerStatusEnum.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ServerStatusEnum.WARNING">
            <summary>
            Enum WARNING for value: WARNING
            </summary>
        </member>
        <member name="F:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ServerStatusEnum.ERROR">
            <summary>
            Enum ERROR for value: ERROR
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ServerStatus">
            <summary>
            The status of the server.
            </summary>
            <value>The status of the server.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Id">
            <summary>
            The ID of the server.
            </summary>
            <value>The ID of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Url">
            <summary>
            The URL of the server.
            </summary>
            <value>The URL of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Name">
            <summary>
            The name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Certificates">
            <summary>
            The certificates of the server.
            </summary>
            <value>The certificates of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.CertificateWarnings">
            <summary>
            The certificate warnings related to the server.
            </summary>
            <value>The certificate warnings related to the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity._Version">
            <summary>
            The version of the server.
            </summary>
            <value>The version of the server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.VcGuid">
            <summary>
            The GUID of the local vCenter Server.
            </summary>
            <value>The GUID of the local vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.VcName">
            <summary>
            The name of the local vCenter Server.
            </summary>
            <value>The name of the local vCenter Server.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ExtensionKey">
            <summary>
            The extension key under which this server is registered in the Lookup Service.
            </summary>
            <value>The extension key under which this server is registered in the Lookup Service.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Equals(VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity)">
            <summary>
            Returns true if VrmsInfoDrResponseEntity instances are equal
            </summary>
            <param name="input">Instance of VrmsInfoDrResponseEntity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseEntity.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList">
            <summary>
            List of entities about: Detailed information about the vSphere Replication Management Server.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.List">
            <summary>
            Gets or Sets List
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.Equals(VMware.Bindings.Vr.Model.VrmsInfoDrResponseList)">
            <summary>
            Returns true if VrmsInfoDrResponseList instances are equal
            </summary>
            <param name="input">Instance of VrmsInfoDrResponseList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.VrmsInfoDrResponseList.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
        <member name="T:VMware.Bindings.Vr.Model.X509Certificate">
            <summary>
            The certificate in X509 format.
            </summary>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VMware.Bindings.Vr.Model.X509Certificate" /> class.
            </summary>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SerialNumber">
            <summary>
            The serial number of the certificate, represented as string. The serial number is a number assigned by the certification authority to each certificate. It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate).
            </summary>
            <value>The serial number of the certificate, represented as string. The serial number is a number assigned by the certification authority to each certificate. It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate).</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.NotAfter">
            <summary>
            The end date from the validity period of the certificate, as milliseconds.
            </summary>
            <value>The end date from the validity period of the certificate, as milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.NotBefore">
            <summary>
            The start date from the validity period of the certificate, as milliseconds.
            </summary>
            <value>The start date from the validity period of the certificate, as milliseconds.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.Signature">
            <summary>
            The signature value as Base64 encoded string (with ISO-8859-1 charset) from the certificate.
            </summary>
            <value>The signature value as Base64 encoded string (with ISO-8859-1 charset) from the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate._Version">
            <summary>
            The version number of the certificate.
            </summary>
            <value>The version number of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.IssuerDn">
            <summary>
            The issuer distinguished name of the certificate.
            </summary>
            <value>The issuer distinguished name of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SubjectDn">
            <summary>
            The subject distinguished name of the certificate.
            </summary>
            <value>The subject distinguished name of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SigAlgName">
            <summary>
            The name of the signature algorithm for the certificate.
            </summary>
            <value>The name of the signature algorithm for the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SigAlgOid">
            <summary>
            The signature algorithm OID string from the certificate. An OID is represented by a set of non-negative whole numbers separated by periods.
            </summary>
            <value>The signature algorithm OID string from the certificate. An OID is represented by a set of non-negative whole numbers separated by periods.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.PublicKey">
            <summary>
            The public key of the certificate.
            </summary>
            <value>The public key of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.PublicKeyFormat">
            <summary>
            The public key format of the certificate.
            </summary>
            <value>The public key format of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.PublicKeyAlgorithm">
            <summary>
            The public key algorithm of the certificate.
            </summary>
            <value>The public key algorithm of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.Thumbprint">
            <summary>
            The thumbprint of the certificate.
            </summary>
            <value>The thumbprint of the certificate.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.Certificate">
            <summary>
            The certificate in PEM format.
            </summary>
            <value>The certificate in PEM format.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.IssuerUniqueId">
            <summary>
            The ID of the certificate issuer.
            </summary>
            <value>The ID of the certificate issuer.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SubjectUniqueId">
            <summary>
            The subject unique ID.
            </summary>
            <value>The subject unique ID.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.KeyUsage">
            <summary>
            Boolean array representing bits of the KeyUsage extension, (OID &#x3D; 2.5.29.15). The key usage extension defines the purpose (e.g., encipherment, signature, certificate signing) of the key contained in the certificate. The ASN.1 definition for this is: &lt;pre&gt; KeyUsage ::&#x3D; BIT STRING {      digitalSignature        (0),      nonRepudiation          (1),      keyEncipherment         (2),      dataEncipherment        (3),      keyAgreement            (4),      keyCertSign             (5),      cRLSign                 (6),      encipherOnly            (7),      decipherOnly            (8) } &lt;/pre&gt;
            </summary>
            <value>Boolean array representing bits of the KeyUsage extension, (OID &#x3D; 2.5.29.15). The key usage extension defines the purpose (e.g., encipherment, signature, certificate signing) of the key contained in the certificate. The ASN.1 definition for this is: &lt;pre&gt; KeyUsage ::&#x3D; BIT STRING {      digitalSignature        (0),      nonRepudiation          (1),      keyEncipherment         (2),      dataEncipherment        (3),      keyAgreement            (4),      keyCertSign             (5),      cRLSign                 (6),      encipherOnly            (7),      decipherOnly            (8) } &lt;/pre&gt;</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.IssuerAlternativeNames">
            <summary>
            The issuer alternative names.
            </summary>
            <value>The issuer alternative names.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.SubjectAlternativeNames">
            <summary>
            The subject alternative names.
            </summary>
            <value>The subject alternative names.</value>
        </member>
        <member name="P:VMware.Bindings.Vr.Model.X509Certificate.ExtendedKeyUsage">
            <summary>
            Indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension field.
            </summary>
            <value>Indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension field.</value>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.Equals(VMware.Bindings.Vr.Model.X509Certificate)">
            <summary>
            Returns true if X509Certificate instances are equal
            </summary>
            <param name="input">Instance of X509Certificate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:VMware.Bindings.Vr.Model.X509Certificate.Validate">
            <summary>
            To validate all properties of the instance
            </summary>
            <returns>Validation Result</returns>
        </member>
    </members>
</doc>
