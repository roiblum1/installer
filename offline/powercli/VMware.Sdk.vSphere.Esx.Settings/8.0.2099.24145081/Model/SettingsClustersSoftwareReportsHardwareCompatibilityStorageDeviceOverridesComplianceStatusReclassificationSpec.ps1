#
# Settings Paths
# The esx settings package provides services to manage ESX settings.
# Contact: powercli@vmware.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.DESCRIPTION

The ComplianceStatus.ReclassificationSpec structure contains information about the storage device and the corresponding override that must be applied to the specified device. Note: This data structure is specifically limited to a 'Key'/'Value' pair to model smaller changes to the larger overall set of overrides applicable to a given storage device

.PARAMETER Key
No description available.
.PARAMETER Override
No description available.
.OUTPUTS

SettingsClustersSoftwareReportsHardwareCompatibilityStorageDeviceOverridesComplianceStatusReclassificationSpec<PSCustomObject>

.LINK

Online Version: https://developer.vmware.com/docs/vsphere-automation/latest/esx/data-structures/Settings/Clusters/Software/Reports/HardwareCompatibility/StorageDeviceOverrides/ComplianceStatus/ReclassificationSpec/
#>

function Initialize-SettingsClustersSoftwareReportsHardwareCompatibilityStorageDeviceOverridesComplianceStatusReclassificationSpec {
    [CmdletBinding(HelpURI = "https://developer.vmware.com/docs/vsphere-automation/latest/esx/data-structures/Settings/Clusters/Software/Reports/HardwareCompatibility/StorageDeviceOverrides/ComplianceStatus/ReclassificationSpec/")]
    Param (
        [Parameter(Mandatory = $true, ValueFromPipeline = $true)]
        [PSTypeName("SettingsClustersSoftwareReportsHardwareCompatibilityStorageDeviceOverridesComplianceStatusKey")]
        [PSCustomObject]
        ${Key},
        [Parameter(Mandatory = $false)]
        [ValidateSet("MARK_AS_VERIFIED", "FLAG_AS_INCOMPATIBLE", "SUPPRESS_WARNING")]
        ${Override}
    )

    Process {
        'Creating PSCustomObject: VMware.Sdk.vSphere.Esx.Settings => vSphereSettingsClustersSoftwareReportsHardwareCompatibilityStorageDeviceOverridesComplianceStatusReclassificationSpec' | Write-Debug

        if ($Key -eq $null) {
            throw "invalid value for 'Key', 'Key' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "PSTypeName" = "SettingsClustersSoftwareReportsHardwareCompatibilityStorageDeviceOverridesComplianceStatusReclassificationSpec"
            "key" = ${Key}
            "override" = ${Override}
        }


        return $PSO
    }
}

